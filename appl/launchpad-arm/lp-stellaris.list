ARM GAS  lp-stellaris.asm 			page 1


   1              	
   2              	
   3              	.syntax unified
   4              	.cpu cortex-m4
   5              	.thumb
   6              	
   7              	.text
   8              	
   9              	.equ RamStart, 0x20000000
  10              	.equ RamEnd,   0x20008000
  11              	
  12              	.equ FlashStart,  0x00004000
  13              	.equ FlashEnd,    0x00040000
  14              	
  15              	.equ datastack_size, 128   
  16              	.equ returnstack_size, 128 
  17              	.equ refill_buf_size, 96
  18              	.equ appl_userarea_size, 8 
  19              	.equ leavestack_size, 8*cellsize
  20              	
  21              	.equ WANT_IGNORECASE, 0
  22              	
  23              	.include "amforth.s"
   1              	
   2              	.include "macros.s"
   1              	
   2              	@ register usage
   3              	@ temporary r0, r1, r2, r3, r4, r5
   4              	
   5              	tos     .req r6
   6              	psp     .req r7
   7              	FORTHW  .req r8
   8              	FORTHIP .req r9
   9              	UP      .req r10
  10              	rloopindex .req r11
  11              	rlooplimit .req r12
  12              	
  13              	@ default register mapping
  14              	@ sp .req r13
  15              	@ lr .req r14
  16              	@ pc .req r15
  17              	
  18              	.macro NEXT
  19              	    b DO_NEXT
  20              	    .ltorg
  21              	.endm
  22              	
  23              	.macro savetos @ Push TOS on Datastack - a common, often used factor.
  24              	    str tos, [psp, #-4]!
  25              	.endm
  26              	
  27              	.macro loadtos
  28              	    ldr tos, [psp], #4
  29              	.endm
  30              	
  31              	.macro pushda register @ Push register on Datastack
  32              	  savetos
ARM GAS  lp-stellaris.asm 			page 2


  33              	  mov tos, \register
  34              	.endm
  35              	
  36              	.macro popda register @ Pop register from Datastack
  37              	  mov \register, tos
  38              	  loadtos
  39              	.endm
  40              	
  41              	.macro STARTDICT
  42              	.equ FLASH_START, .
  43              	.word 0
  44              	97: @ arm-wordlist
  45              	98: @ environment wordlist
  46              	99: @ forth-wordlist
  47              	.endm
  48              	
  49              	@ save the beginning of the wordlists
  50              	.macro ENDDICT
  51              	VALUE "arm-wordlist" ARM_WORDLIST, 97b
  52              	VALUE "environment", ENVIRONMENT, 98b
  53              	VALUE "forth-wordlist", FORTH_WORDLIST, 99b
  54              	.equ FLASH_END, .
  55              	.set DPSTART, 99b
  56              	.equ HERESTART, rampointer
  57              	.endm
  58              	
  59              	.macro STRING string
  60              	    .word XT_DOSLITERAL
  61              	    .byte 8f - 7f
  62              	7:  .ascii "\string"
  63              	8:  .p2align 2
  64              	.endm
  65              	
  66              	.macro ramallot Name, Length 
  67              	  .equ RAM_lower_\Name, rampointer     @ \Name at
  68              	  .set rampointer, rampointer + \Length
  69              	  .equ RAM_upper_\Name, rampointer     @ \Name at
  70              	.endm
  71              	
  72              	.equ Flag_invisible,  0xFFFFFFFF
  73              	.equ Flag_visible,    0x00000000
  74              	
  75              	.equ Flag_immediate,  0x0010
  76              	.equ Flag_value,      0x0020
  77              	.equ Flag_defer,      0x0040
  78              	.equ Flag_init,       0x0080
  79              	
  80              	.equ Flag_ramallot,   Flag_visible | 0x0100      
  81              	.equ Flag_variable,   Flag_ramallot| 1           
  82              	.equ Flag_2variable,  Flag_ramallot| 2
  83              	
  84              	.macro HEADER Flags, Name, Label, PFA
  85              	    .p2align 2
  86              	VE_\Label:
  87              	    .word 99b         @ Insert Link
  88              	99: .word \Flags      @ Flag field
  89              	    .byte 8f - 7f     @ Calculate length of name field
ARM GAS  lp-stellaris.asm 			page 3


  90              	7:  .ascii "\Name"    @ Insert name string
  91              	8:  .p2align 2        @ Realign
  92              	   XT_\Label: .word \PFA
  93              	   PFA_\Label: 
  94              	.endm
  95              	
  96              	.macro CODEWORD Name, Label
  97              	    HEADER Flag_visible, "\Name", \Label, PFA_\Label
  98              	.endm
  99              	
 100              	.macro HEADLESS Label
 101              	   XT_\Label: .word PFA_\Label
 102              	   PFA_\Label: 
 103              	.endm
 104              	
 105              	.macro COLON Name, Label
 106              	    HEADER Flag_visible, "\Name", \Label, DOCOLON
 107              	.endm
 108              	
 109              	.macro IMMED Name, Label
 110              	    Header Flag_visible|Flag_immediate, \Name, \Label, DOCOLON
 111              	.endm
 112              	
 113              	.macro NONAME Label
 114              	   XT_\Label: .word DOCOLON
 115              	   PFA_\Label: 
 116              	.endm
 117              	
 118              	
 119              	.macro VARIABLE Name, Label
 120              	   HEADER Flag_visible|Flag_variable, "\Name", \Label, PFA_DOVARIABLE
 121              	   .word rampointer
 122              	   .set rampointer, rampointer+cellsize
 123              	.endm
 124              	
 125              	.macro DVARIABLE Name, Label
 126              	   HEADER Flag_visible|Flag_variable, "\Name", \Label, PFA_DOVARIABLE
 127              	   .word rampointer
 128              	   .set rampointer, rampointer+2*cellsize
 129              	.endm
 130              	
 131              	.macro USER Name, Label, UOffset
 132              	   HEADER Flag_visible|Flag_variable, "\Name", \Label, PFA_DOUSER
 133              	    .word \UOffset
 134              	    .equ USER_\Label,\UOffset @ for listing
 135              	.endm
 136              	
 137              	.macro VALUE Name, Label, Default
 138              	    HEADER Flag_visible|Flag_value|Flag_init, "\Name", \Label, PFA_DOVALUE
 139              	   .word rampointer
 140              	    .equ RAM_\Label,rampointer @ for listing
 141              	   .set rampointer, rampointer+cellsize
 142              	   .word \Default
 143              	   .word XT_FETCH
 144              	   .word XT_STORE
 145              	.endm
 146              	
ARM GAS  lp-stellaris.asm 			page 4


 147              	.macro DEFER Name, Label, XT
 148              	    HEADER Flag_visible|Flag_defer|Flag_init, "\Name", \Label, PFA_DODEFER
 149              	   .word rampointer
 150              	    .equ DEFER_RAM_\Label,rampointer @ for listing
 151              	   .set rampointer, rampointer+cellsize
 152              	   .word \XT
 153              	   .word XT_FETCH
 154              	   .word XT_STORE
 155              	.endm
 156              	
 157              	.macro UDEFER Name, Label, XT
 158              	    HEADER Flag_visible|Flag_defer|Flag_init, "\Name", \Label, PFA_DODEFER
 159              	   .word USER_\Label @ see user.inc for corresponding labels
 160              	   .word \XT
 161              	   .word XT_UDEFER_FETCH
 162              	   .word XT_UDEFER_STORE
 163              	.endm
 164              	
 165              	.macro CONSTANT Name, Label, NUM
 166              	    HEADER Flag_visible, "\Name", \Label, PFA_DOVARIABLE
 167              	    .word \NUM
 168              	.endm
 169              	
 170              	.macro DATA Name, Label
 171              	    HEADER Flag_visible, "\Name", \Label, PFA_DODATA
 172              	.endm
 173              	
 174              	
 175              	@ =============================
 176              	@ Environment entry. All of them are
 177              	@ treated as COLON words
 178              	@ =============================
 179              	.macro ENVIRONMENT Name, Label
 180              	    .p2align 2
 181              	VE_ENV_\Label:
 182              	    .word 98b          @ Insert Link
 183              	98:
 184              	    .word Flag_visible      @ Flag field
 185              	
 186              	    .byte 8f - 7f     @ Calculate length of name field
 187              	7:  .ascii "\Name"    @ Insert name string
 188              	8:  .p2align 2        @ Realign
 189              	
 190              	   XT_ENV_\Label: .word DOCOLON
 191              	   PFA_ENV_\Label:
 192              	.endm
 193              	
 194              	@ ================================
 195              	@ ARM Wordlist Entry
 196              	@ different types
 197              	@ ================================
 198              	
 199              	.macro ARM_HEADER Flags, Name, Label, PFA
 200              	    .p2align 2
 201              	VE_\Label:
 202              	    .word 97b         @ Insert Link
 203              	97:
ARM GAS  lp-stellaris.asm 			page 5


 204              	    .word \Flags      @ Flag field
 205              	
 206              	    .byte 8f - 7f     @ Calculate length of name field
 207              	7:  .ascii "\Name"    @ Insert name string
 208              	8:  .p2align 2        @ Realign
 209              	   XT_\Label: .word \PFA
 210              	   PFA_\Label: 
 211              	.endm
 212              	
 213              	.macro ARM_COLON Name, Label
 214              	    ARM_HEADER Flag_visible, "\Name", \Label, DOCOLON
 215              	.endm
 216              	
 217              	.macro ARM_CONSTANT Name, Label, NUM
 218              	    ARM_HEADER Flag_visible, "\Name", \Label, PFA_DOVARIABLE
 219              	    .word \NUM
 220              	.endm
 221              	
 222              	
 223              	@ ==================================
 224              	@ Debug Macro. Not used in production
 225              	@ ==================================
 226              	.macro SEMIT register
 227              	.ifdef DEBUG
 228              	   push {r0}
 229              	0: 
 230              	   ldr r0, =UARTFR
 231              	   ldr r0, [r0]
 232              	   ands r0, #TXFF
 233              	   bne 0b
 234              	
 235              	   ldr r0, =UARTDR
 236              	   str \register, [r0]
 237              	   pop {r0}
 238              	.endif
 239              	.endm
   3              	
   4              	.include "preamble.inc"
   1              	
   2              	# initial setup of assembly variables and settings
   3              	
   4              	# used by ramallot
   5              	.set rampointer, RamStart  
   6              	
   7              	.equ cellsize, 4
   8              	
   9              	.set sys_userarea_size, 32*cellsize
  10              	
  11              	.set userarea_size, sys_userarea_size+appl_userarea_size
  12              	
  13              	ramallot datastack, datastack_size
  13              	>  .equ RAM_lower_datastack,rampointer
  13              	>  .set rampointer,rampointer+datastack_size
  13              	>  .equ RAM_upper_datastack,rampointer
  14              	ramallot returnstack, returnstack_size
  14              	>  .equ RAM_lower_returnstack,rampointer
  14              	>  .set rampointer,rampointer+returnstack_size
ARM GAS  lp-stellaris.asm 			page 6


  14              	>  .equ RAM_upper_returnstack,rampointer
  15              	ramallot userarea, userarea_size
  15              	>  .equ RAM_lower_userarea,rampointer
  15              	>  .set rampointer,rampointer+userarea_size
  15              	>  .equ RAM_upper_userarea,rampointer
  16              	ramallot refill_buf, refill_buf_size
  16              	>  .equ RAM_lower_refill_buf,rampointer
  16              	>  .set rampointer,rampointer+refill_buf_size
  16              	>  .equ RAM_upper_refill_buf,rampointer
  17              	ramallot leavestack, leavestack_size
  17              	>  .equ RAM_lower_leavestack,rampointer
  17              	>  .set rampointer,rampointer+leavestack_size
  17              	>  .equ RAM_upper_leavestack,rampointer
   5              	.include "user.inc"
   1              	
   2              	.equ USER_STATE, 0
   3              	.equ USER_FOLLOWER, 1*cellsize
   4              	
   5              	.equ USER_RP, 2*cellsize
   6              	.equ USER_SP0, 3*cellsize
   7              	.equ USER_SP, 4*cellsize
   8              	.equ USER_HANDLER, 5*cellsize
   9              	.equ USER_BASE, 6*cellsize
  10              	
  11              	.equ USER_UDT, 7*cellsize
   6              	.include "common/vectors.s" 
   1              	
   2 0000 00010020 	.word RAM_upper_returnstack @ 00: Stack top address
   3 0004 5D0C0000 	.word PFA_COLD+1            @ 01: Reset Vector  +1 wegen des Thumb-Einsprunges
   4              	
   5 0008 41000000 	.word nullhandler+1   @ 02: NMI
   6 000c 55000000 	.word faulthandler+1  @ 03: HARD fault
   7 0010 41000000 	.word nullhandler+1   @ 04: MPU fault
   8 0014 41000000 	.word nullhandler+1   @ 05: bus fault
   9 0018 41000000 	.word nullhandler+1   @ 06: usage fault
  10 001c 00000000 	.word 0               @ 07: Reserved
  11 0020 00000000 	.word 0               @ 08: Reserved
  12 0024 00000000 	.word 0               @ 09: Reserved
  13 0028 00000000 	.word 0               @ 10: Reserved
  14 002c 41000000 	.word nullhandler+1   @ 11: SVCall handler
  15 0030 41000000 	.word nullhandler+1   @ 12: Debug monitor handler
  16 0034 00000000 	.word 0               @ 13: Reserved
  17 0038 41000000 	.word nullhandler+1   @ 14: The PendSV handler
  18 003c 41000000 	.word nullhandler+1   @ 15: systick handler
   7              	.include "common/isr.s"
   1              	nullhandler:
   2 0040 00B5     	   push {lr}
   3 0042 02B4     	   push {r1}
   4 0044 4FF03001 	   ldr r1, =#48
   5              	   SEMIT r1
   5              	> .ifdef DEBUG
   5              	>  push {r0}
   5              	> 0:
   5              	>  ldr r0,=UARTFR
   5              	>  ldr r0,[r0]
   5              	>  ands r0,#TXFF
   5              	>  bne 0b
ARM GAS  lp-stellaris.asm 			page 7


   5              	> 
   5              	>  ldr r0,=UARTDR
   5              	>  str r1,[r0]
   5              	>  pop {r0}
   5              	> .endif
   6 0048 EFF30581 	   mrs r1, ipsr
   7 004c 01F13001 	   add r1, #48 @ +"0"
   8              	   SEMIT r1
   8              	> .ifdef DEBUG
   8              	>  push {r0}
   8              	> 0:
   8              	>  ldr r0,=UARTFR
   8              	>  ldr r0,[r0]
   8              	>  ands r0,#TXFF
   8              	>  bne 0b
   8              	> 
   8              	>  ldr r0,=UARTDR
   8              	>  str r1,[r0]
   8              	>  pop {r0}
   8              	> .endif
   9              	
  10 0050 02BC     	   pop {r1}
  11 0052 00BD     	   pop {pc}
  12              	
  13              	faulthandler:
  14 0054 00B5     	   push {lr}
  15 0056 02B4     	   push {r1}
  16              	
  17 0058 4FF04601 	   ldr r1, =#70 @ F
  18              	   SEMIT r1
  18              	> .ifdef DEBUG
  18              	>  push {r0}
  18              	> 0:
  18              	>  ldr r0,=UARTFR
  18              	>  ldr r0,[r0]
  18              	>  ands r0,#TXFF
  18              	>  bne 0b
  18              	> 
  18              	>  ldr r0,=UARTDR
  18              	>  str r1,[r0]
  18              	>  pop {r0}
  18              	> .endif
  19 005c EFF30581 	   mrs r1, ipsr
  20 0060 3031     	   adds r1, #48 @ +"0"
  21              	   SEMIT r1
  21              	> .ifdef DEBUG
  21              	>  push {r0}
  21              	> 0:
  21              	>  ldr r0,=UARTFR
  21              	>  ldr r0,[r0]
  21              	>  ands r0,#TXFF
  21              	>  bne 0b
  21              	> 
  21              	>  ldr r0,=UARTDR
  21              	>  str r1,[r0]
  21              	>  pop {r0}
  21              	> .endif
ARM GAS  lp-stellaris.asm 			page 8


  22 0062 02BC     	   pop {r1}
  23 0064 00BD     	   pop {pc}
  24              	
  25              	.ltorg
   8              	
   9              	STARTDICT
   9              	> .equ FLASH_START,.
   9 0066 00000000 	> .word 0
   9              	> 97:
   9              	> 98:
   9              	> 99:
  10              	
  11              	.include "dict_prims.inc"
   1              	#
   2              	# all primitves / code words
   3              	# they are placed close together to
   4              	# maximize cache usage
   5              	#
   6              	
   7              	.include "words/exit.s"
   1              	
   2              	CODEWORD "exit", EXIT
   2              	>  HEADER Flag_visible,"exit",EXIT,PFA_EXIT
   2 006a 00BF     	>>  .p2align 2
   2              	>> VE_EXIT:
   2 006c 6A000000 	>>  .word 99b
   2 0070 00000000 	>> 99:.word Flag_visible
   2 0074 04       	>>  .byte 8f-7f
   2 0075 65786974 	>> 7:.ascii "exit"
   2 0079 0000BF   	>> 8:.p2align 2
   2 007c 80000000 	>>  XT_EXIT:.word PFA_EXIT
   2              	>>  PFA_EXIT:
   3 0080 5DF8049B 	    pop {FORTHIP}
   4              	NEXT
   4 0084 00F005BC 	>  b DO_NEXT
   4              	>  .ltorg
   8              	.include "words/drop.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "drop",DROP @ ( x -- )
   2              	>  HEADER Flag_visible,"drop",DROP,PFA_DROP
   2              	>>  .p2align 2
   2              	>> VE_DROP:
   2 0088 70000000 	>>  .word 99b
   2 008c 00000000 	>> 99:.word Flag_visible
   2 0090 04       	>>  .byte 8f-7f
   2 0091 64726F70 	>> 7:.ascii "drop"
   2 0095 0000BF   	>> 8:.p2align 2
   2 0098 9C000000 	>>  XT_DROP:.word PFA_DROP
   2              	>>  PFA_DROP:
   3              	@ -----------------------------------------------------------------------------
   4 009c 40CF     	  ldm psp!, {tos}
   5              	NEXT
   5 009e F8E3     	>  b DO_NEXT
   5              	>  .ltorg
   9              	.include "words/swap.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "swap", SWAP @ ( x y -- y x )
ARM GAS  lp-stellaris.asm 			page 9


   2              	>  HEADER Flag_visible,"swap",SWAP,PFA_SWAP
   2              	>>  .p2align 2
   2              	>> VE_SWAP:
   2 00a0 8C000000 	>>  .word 99b
   2 00a4 00000000 	>> 99:.word Flag_visible
   2 00a8 04       	>>  .byte 8f-7f
   2 00a9 73776170 	>> 7:.ascii "swap"
   2 00ad 0000BF   	>> 8:.p2align 2
   2 00b0 B4000000 	>>  XT_SWAP:.word PFA_SWAP
   2              	>>  PFA_SWAP:
   3              	@ -----------------------------------------------------------------------------
   4 00b4 3968     	  ldr r1,  [psp]  @ Load X from the stack, no SP change.
   5 00b6 3E60     	  str tos, [psp]  @ Replace it with TOS.
   6 00b8 0E00     	  movs tos, r1    @ And vice versa.
   7              	NEXT
   7 00ba EAE3     	>  b DO_NEXT
   7              	>  .ltorg
  10              	.include "words/dup.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "dup", DUP @ ( x -- x x )
   2              	>  HEADER Flag_visible,"dup",DUP,PFA_DUP
   2              	>>  .p2align 2
   2              	>> VE_DUP:
   2 00bc A4000000 	>>  .word 99b
   2 00c0 00000000 	>> 99:.word Flag_visible
   2 00c4 03       	>>  .byte 8f-7f
   2 00c5 647570   	>> 7:.ascii "dup"
   2              	>> 8:.p2align 2
   2 00c8 CC000000 	>>  XT_DUP:.word PFA_DUP
   2              	>>  PFA_DUP:
   3              	@ -----------------------------------------------------------------------------
   4              	  savetos
   4 00cc 47F8046D 	>  str tos,[psp,#-4]!
   5              	NEXT
   5 00d0 DFE3     	>  b DO_NEXT
   5              	>  .ltorg
  11              	.include "words/nip.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "nip", NIP @ ( x y -- x )
   2              	>  HEADER Flag_visible,"nip",NIP,PFA_NIP
   2 00d2 00BF     	>>  .p2align 2
   2              	>> VE_NIP:
   2 00d4 C0000000 	>>  .word 99b
   2 00d8 00000000 	>> 99:.word Flag_visible
   2 00dc 03       	>>  .byte 8f-7f
   2 00dd 6E6970   	>> 7:.ascii "nip"
   2              	>> 8:.p2align 2
   2 00e0 E4000000 	>>  XT_NIP:.word PFA_NIP
   2              	>>  PFA_NIP:
   3              	@ -----------------------------------------------------------------------------
   4 00e4 0437     	  adds psp, #4 @ Move SP to eliminate next element.
   5              	NEXT
   5 00e6 D4E3     	>  b DO_NEXT
   5              	>  .ltorg
  12              	.include "words/over.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "over", OVER @ ( x y -- x y x )
ARM GAS  lp-stellaris.asm 			page 10


   2              	>  HEADER Flag_visible,"over",OVER,PFA_OVER
   2              	>>  .p2align 2
   2              	>> VE_OVER:
   2 00e8 D8000000 	>>  .word 99b
   2 00ec 00000000 	>> 99:.word Flag_visible
   2 00f0 04       	>>  .byte 8f-7f
   2 00f1 6F766572 	>> 7:.ascii "over"
   2 00f5 0000BF   	>> 8:.p2align 2
   2 00f8 FC000000 	>>  XT_OVER:.word PFA_OVER
   2              	>>  PFA_OVER:
   3              	@ -----------------------------------------------------------------------------
   4              	  savetos
   4 00fc 47F8046D 	>  str tos,[psp,#-4]!
   5 0100 7E68     	  ldr tos, [psp, #4] 
   6              	NEXT
   6 0102 C6E3     	>  b DO_NEXT
   6              	>  .ltorg
  13              	.include "words/rot.s"
   1              	
   2              	@ -----------------------------------------------------------------------------
   3              	  CODEWORD "rot", ROT @ ( x w y -- w y x )
   3              	>  HEADER Flag_visible,"rot",ROT,PFA_ROT
   3              	>>  .p2align 2
   3              	>> VE_ROT:
   3 0104 EC000000 	>>  .word 99b
   3 0108 00000000 	>> 99:.word Flag_visible
   3 010c 03       	>>  .byte 8f-7f
   3 010d 726F74   	>> 7:.ascii "rot"
   3              	>> 8:.p2align 2
   3 0110 14010000 	>>  XT_ROT:.word PFA_ROT
   3              	>>  PFA_ROT:
   4              	@ -----------------------------------------------------------------------------
   5 0114 03CF     	  ldm psp!, {r0, r1}
   6 0116 083F     	  subs psp, #8
   7 0118 7860     	  str r0, [psp, #4]
   8 011a 3E60     	  str tos, [psp]
   9 011c 0E00     	  movs tos, r1
  10              	NEXT
  10 011e B8E3     	>  b DO_NEXT
  10              	>  .ltorg
  14              	.include "words/q-dup.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "?dup", QDUP @ ( x -- 0 | x x )
   2              	>  HEADER Flag_visible,"?dup",QDUP,PFA_QDUP
   2              	>>  .p2align 2
   2              	>> VE_QDUP:
   2 0120 08010000 	>>  .word 99b
   2 0124 00000000 	>> 99:.word Flag_visible
   2 0128 04       	>>  .byte 8f-7f
   2 0129 3F647570 	>> 7:.ascii "?dup"
   2 012d 0000BF   	>> 8:.p2align 2
   2 0130 34010000 	>>  XT_QDUP:.word PFA_QDUP
   2              	>>  PFA_QDUP:
   3              	@ -----------------------------------------------------------------------------
   4 0134 002E     	  cmp tos, #0
   5 0136 01D0     	  beq 1f
   6              	  savetos
ARM GAS  lp-stellaris.asm 			page 11


   6 0138 47F8046D 	>  str tos,[psp,#-4]!
   7              	1:NEXT
   7 013c A9E3     	>  b DO_NEXT
   7              	>  .ltorg
  15              	.include "words/tuck.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "tuck", TUCK @ ( x1 x2 -- x2 x1 x2 )
   2              	>  HEADER Flag_visible,"tuck",TUCK,PFA_TUCK
   2 013e 00BF     	>>  .p2align 2
   2              	>> VE_TUCK:
   2 0140 24010000 	>>  .word 99b
   2 0144 00000000 	>> 99:.word Flag_visible
   2 0148 04       	>>  .byte 8f-7f
   2 0149 7475636B 	>> 7:.ascii "tuck"
   2 014d 0000BF   	>> 8:.p2align 2
   2 0150 54010000 	>>  XT_TUCK:.word PFA_TUCK
   2              	>>  PFA_TUCK:
   3              	@ -----------------------------------------------------------------------------
   4              	tuck:
   5 0154 01CF     	  ldm psp!, {r0}
   6 0156 083F     	  subs psp, #8
   7 0158 7E60     	  str tos, [psp, #4]
   8 015a 3860     	  str r0, [psp]
   9              	NEXT
   9 015c 99E3     	>  b DO_NEXT
   9              	>  .ltorg
  16              	.include "words/pick.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "pick", PICK @ ( xu .. x1 x0 u -- xu ... x1 x0 xu ) 
   2              	>  HEADER Flag_visible,"pick",PICK,PFA_PICK
   2 015e 00BF     	>>  .p2align 2
   2              	>> VE_PICK:
   2 0160 44010000 	>>  .word 99b
   2 0164 00000000 	>> 99:.word Flag_visible
   2 0168 04       	>>  .byte 8f-7f
   2 0169 7069636B 	>> 7:.ascii "pick"
   2 016d 0000BF   	>> 8:.p2align 2
   2 0170 74010000 	>>  XT_PICK:.word PFA_PICK
   2              	>>  PFA_PICK:
   3              	@ -----------------------------------------------------------------------------
   4 0174 57F82660 	  ldr tos, [psp, tos, lsl #2]  
   5              	NEXT
   5 0178 8BE3     	>  b DO_NEXT
   5              	>  .ltorg
  17              	
  18              	.include "words/to-r.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD ">r", TO_R @ 
   2              	>  HEADER Flag_visible,">r",TO_R,PFA_TO_R
   2 017a 00BF     	>>  .p2align 2
   2              	>> VE_TO_R:
   2 017c 64010000 	>>  .word 99b
   2 0180 00000000 	>> 99:.word Flag_visible
   2 0184 02       	>>  .byte 8f-7f
   2 0185 3E72     	>> 7:.ascii ">r"
   2 0187 00       	>> 8:.p2align 2
   2 0188 8C010000 	>>  XT_TO_R:.word PFA_TO_R
ARM GAS  lp-stellaris.asm 			page 12


   2              	>>  PFA_TO_R:
   3              	@------------------------------------------------------------------------------
   4 018c 40B4     	  push {tos}
   5 018e 40CF     	  ldm psp!, {tos}
   6              	NEXT
   6 0190 7FE3     	>  b DO_NEXT
   6              	>  .ltorg
  19              	.include "words/r-from.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD "r>", R_FROM @ 
   2              	>  HEADER Flag_visible,"r>",R_FROM,PFA_R_FROM
   2 0192 00BF     	>>  .p2align 2
   2              	>> VE_R_FROM:
   2 0194 80010000 	>>  .word 99b
   2 0198 00000000 	>> 99:.word Flag_visible
   2 019c 02       	>>  .byte 8f-7f
   2 019d 723E     	>> 7:.ascii "r>"
   2 019f 00       	>> 8:.p2align 2
   2 01a0 A4010000 	>>  XT_R_FROM:.word PFA_R_FROM
   2              	>>  PFA_R_FROM:
   3              	@------------------------------------------------------------------------------
   4              	  savetos
   4 01a4 47F8046D 	>  str tos,[psp,#-4]!
   5 01a8 40BC     	  pop {tos}
   6              	NEXT
   6 01aa 72E3     	>  b DO_NEXT
   6              	>  .ltorg
  20              	.include "words/r-fetch.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD "r@",R_FETCH @ 
   2              	>  HEADER Flag_visible,"r@",R_FETCH,PFA_R_FETCH
   2              	>>  .p2align 2
   2              	>> VE_R_FETCH:
   2 01ac 98010000 	>>  .word 99b
   2 01b0 00000000 	>> 99:.word Flag_visible
   2 01b4 02       	>>  .byte 8f-7f
   2 01b5 7240     	>> 7:.ascii "r@"
   2 01b7 00       	>> 8:.p2align 2
   2 01b8 BC010000 	>>  XT_R_FETCH:.word PFA_R_FETCH
   2              	>>  PFA_R_FETCH:
   3              	@------------------------------------------------------------------------------
   4              	  savetos
   4 01bc 47F8046D 	>  str tos,[psp,#-4]!
   5 01c0 009E     	  ldr tos, [sp]
   6              	NEXT
   6 01c2 66E3     	>  b DO_NEXT
   6              	>  .ltorg
  21              	.include "words/rp.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "rp@", RP_FETCH @ ( -- a-addr )
   2              	>  HEADER Flag_visible,"rp@",RP_FETCH,PFA_RP_FETCH
   2              	>>  .p2align 2
   2              	>> VE_RP_FETCH:
   2 01c4 B0010000 	>>  .word 99b
   2 01c8 00000000 	>> 99:.word Flag_visible
   2 01cc 03       	>>  .byte 8f-7f
   2 01cd 727040   	>> 7:.ascii "rp@"
ARM GAS  lp-stellaris.asm 			page 13


   2              	>> 8:.p2align 2
   2 01d0 D4010000 	>>  XT_RP_FETCH:.word PFA_RP_FETCH
   2              	>>  PFA_RP_FETCH:
   3              	@ -----------------------------------------------------------------------------
   4              	  savetos
   4 01d4 47F8046D 	>  str tos,[psp,#-4]!
   5 01d8 6E46     	  mov tos, sp
   6              	NEXT
   6 01da 5AE3     	>  b DO_NEXT
   6              	>  .ltorg
   7              	@ -----------------------------------------------------------------------------
   8              	  CODEWORD "rp!", RP_STORE @ ( a-addr -- )
   8              	>  HEADER Flag_visible,"rp!",RP_STORE,PFA_RP_STORE
   8              	>>  .p2align 2
   8              	>> VE_RP_STORE:
   8 01dc C8010000 	>>  .word 99b
   8 01e0 00000000 	>> 99:.word Flag_visible
   8 01e4 03       	>>  .byte 8f-7f
   8 01e5 727021   	>> 7:.ascii "rp!"
   8              	>> 8:.p2align 2
   8 01e8 EC010000 	>>  XT_RP_STORE:.word PFA_RP_STORE
   8              	>>  PFA_RP_STORE:
   9              	@ -----------------------------------------------------------------------------
  10 01ec B546     	  mov sp, tos
  11 01ee 40CF     	  ldm psp!, {tos}
  12              	NEXT
  12 01f0 4FE3     	>  b DO_NEXT
  12              	>  .ltorg
  13              	
  14              	USER "rp", RP, USER_RP
  14              	>  HEADER Flag_visible|Flag_variable,"rp",RP,PFA_DOUSER
  14 01f2 00BF     	>>  .p2align 2
  14              	>> VE_RP:
  14 01f4 E0010000 	>>  .word 99b
  14 01f8 01010000 	>> 99:.word Flag_visible|Flag_variable
  14 01fc 02       	>>  .byte 8f-7f
  14 01fd 7270     	>> 7:.ascii "rp"
  14 01ff 00       	>> 8:.p2align 2
  14 0200 5E0F0000 	>>  XT_RP:.word PFA_DOUSER
  14              	>>  PFA_RP:
  14 0204 08000000 	>  .word USER_RP
  14              	>  .equ USER_RP,USER_RP
  22              	.include "words/sp.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "sp@", SP_FETCH @ ( -- a-addr )
   2              	>  HEADER Flag_visible,"sp@",SP_FETCH,PFA_SP_FETCH
   2              	>>  .p2align 2
   2              	>> VE_SP_FETCH:
   2 0208 F8010000 	>>  .word 99b
   2 020c 00000000 	>> 99:.word Flag_visible
   2 0210 03       	>>  .byte 8f-7f
   2 0211 737040   	>> 7:.ascii "sp@"
   2              	>> 8:.p2align 2
   2 0214 18020000 	>>  XT_SP_FETCH:.word PFA_SP_FETCH
   2              	>>  PFA_SP_FETCH:
   3              	@ -----------------------------------------------------------------------------
   4              	  savetos
ARM GAS  lp-stellaris.asm 			page 14


   4 0218 47F8046D 	>  str tos,[psp,#-4]!
   5 021c 3E46     	  mov tos, psp
   6              	NEXT
   6 021e 38E3     	>  b DO_NEXT
   6              	>  .ltorg
   7              	@ -----------------------------------------------------------------------------
   8              	  CODEWORD "sp!", SP_STORE @ ( a-addr -- )
   8              	>  HEADER Flag_visible,"sp!",SP_STORE,PFA_SP_STORE
   8              	>>  .p2align 2
   8              	>> VE_SP_STORE:
   8 0220 0C020000 	>>  .word 99b
   8 0224 00000000 	>> 99:.word Flag_visible
   8 0228 03       	>>  .byte 8f-7f
   8 0229 737021   	>> 7:.ascii "sp!"
   8              	>> 8:.p2align 2
   8 022c 30020000 	>>  XT_SP_STORE:.word PFA_SP_STORE
   8              	>>  PFA_SP_STORE:
   9              	@ -----------------------------------------------------------------------------
  10 0230 3746     	  mov psp, tos
  11 0232 40CF     	  ldm psp!, {tos}
  12              	NEXT
  12 0234 2DE3     	>  b DO_NEXT
  12              	>  .ltorg
  13              	
  14              	USER "sp", SP, USER_SP
  14              	>  HEADER Flag_visible|Flag_variable,"sp",SP,PFA_DOUSER
  14 0236 00BF     	>>  .p2align 2
  14              	>> VE_SP:
  14 0238 24020000 	>>  .word 99b
  14 023c 01010000 	>> 99:.word Flag_visible|Flag_variable
  14 0240 02       	>>  .byte 8f-7f
  14 0241 7370     	>> 7:.ascii "sp"
  14 0243 00       	>> 8:.p2align 2
  14 0244 5E0F0000 	>>  XT_SP:.word PFA_DOUSER
  14              	>>  PFA_SP:
  14 0248 10000000 	>  .word USER_SP
  14              	>  .equ USER_SP,USER_SP
  15              	USER "sp0", SP0, USER_SP0
  15              	>  HEADER Flag_visible|Flag_variable,"sp0",SP0,PFA_DOUSER
  15              	>>  .p2align 2
  15              	>> VE_SP0:
  15 024c 3C020000 	>>  .word 99b
  15 0250 01010000 	>> 99:.word Flag_visible|Flag_variable
  15 0254 03       	>>  .byte 8f-7f
  15 0255 737030   	>> 7:.ascii "sp0"
  15              	>> 8:.p2align 2
  15 0258 5E0F0000 	>>  XT_SP0:.word PFA_DOUSER
  15              	>>  PFA_SP0:
  15 025c 0C000000 	>  .word USER_SP0
  15              	>  .equ USER_SP0,USER_SP0
  23              	
  24              	.include "words/fetch.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "@", FETCH @ ( 32-addr -- x )
   2              	>  HEADER Flag_visible,"@",FETCH,PFA_FETCH
   2              	>>  .p2align 2
   2              	>> VE_FETCH:
ARM GAS  lp-stellaris.asm 			page 15


   2 0260 50020000 	>>  .word 99b
   2 0264 00000000 	>> 99:.word Flag_visible
   2 0268 01       	>>  .byte 8f-7f
   2 0269 40       	>> 7:.ascii "@"
   2 026a 00BF     	>> 8:.p2align 2
   2 026c 70020000 	>>  XT_FETCH:.word PFA_FETCH
   2              	>>  PFA_FETCH:
   3              	@ -----------------------------------------------------------------------------
   4 0270 3668     	  ldr tos, [tos]
   5              	NEXT
   5 0272 0EE3     	>  b DO_NEXT
   5              	>  .ltorg
  25              	.include "words/store.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "!", STORE @ ( x 32-addr -- )
   2              	>  HEADER Flag_visible,"!",STORE,PFA_STORE
   2              	>>  .p2align 2
   2              	>> VE_STORE:
   2 0274 64020000 	>>  .word 99b
   2 0278 00000000 	>> 99:.word Flag_visible
   2 027c 01       	>>  .byte 8f-7f
   2 027d 21       	>> 7:.ascii "!"
   2 027e 00BF     	>> 8:.p2align 2
   2 0280 84020000 	>>  XT_STORE:.word PFA_STORE
   2              	>>  PFA_STORE:
   3 0284 03CF     	  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
   4 0286 3060     	  str r0, [tos]      @ Popping both saves a cycle.
   5 0288 0E00     	  movs tos, r1
   6              	NEXT
   6 028a 02E3     	>  b DO_NEXT
   6              	>  .ltorg
  26              	
  27              	.include "words/negate.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "negate", NEGATE @ ( n1 -- -n1 )
   2              	>  HEADER Flag_visible,"negate",NEGATE,PFA_NEGATE
   2              	>>  .p2align 2
   2              	>> VE_NEGATE:
   2 028c 78020000 	>>  .word 99b
   2 0290 00000000 	>> 99:.word Flag_visible
   2 0294 06       	>>  .byte 8f-7f
   2 0295 6E656761 	>> 7:.ascii "negate"
   2      7465
   2 029b 00       	>> 8:.p2align 2
   2 029c A0020000 	>>  XT_NEGATE:.word PFA_NEGATE
   2              	>>  PFA_NEGATE:
   3              	@ -----------------------------------------------------------------------------
   4 02a0 7642     	  rsbs tos, tos, #0
   5              	NEXT
   5 02a2 F6E2     	>  b DO_NEXT
   5              	>  .ltorg
  28              	.include "words/abs.s"
   1              	CODEWORD "abs", ABS @ ( n1 -- |n1| )
   1              	>  HEADER Flag_visible,"abs",ABS,PFA_ABS
   1              	>>  .p2align 2
   1              	>> VE_ABS:
   1 02a4 90020000 	>>  .word 99b
ARM GAS  lp-stellaris.asm 			page 16


   1 02a8 00000000 	>> 99:.word Flag_visible
   1 02ac 03       	>>  .byte 8f-7f
   1 02ad 616273   	>> 7:.ascii "abs"
   1              	>> 8:.p2align 2
   1 02b0 B4020000 	>>  XT_ABS:.word PFA_ABS
   1              	>>  PFA_ABS:
   2 02b4 002E     	  cmp tos, #0
   3 02b6 B8BF     	  it lt
   4 02b8 7642     	  neglt tos, tos
   5              	NEXT
   5 02ba EAE2     	>  b DO_NEXT
   5              	>  .ltorg
  29              	.include "words/multiplydivide.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  COLON "mod", MOD @ ( n1 n2 -- rem )
   2              	>  HEADER Flag_visible,"mod",MOD,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_MOD:
   2 02bc A8020000 	>>  .word 99b
   2 02c0 00000000 	>> 99:.word Flag_visible
   2 02c4 03       	>>  .byte 8f-7f
   2 02c5 6D6F64   	>> 7:.ascii "mod"
   2              	>> 8:.p2align 2
   2 02c8 8C080000 	>>  XT_MOD:.word DOCOLON
   2              	>>  PFA_MOD:
   3              	@ -----------------------------------------------------------------------------
   4 02cc 1C030000 	  .word XT_SLASHMOD, XT_NIP
   4      E0000000 
   5 02d4 7C000000 	  .word XT_EXIT
   6              	
   7              	@ -----------------------------------------------------------------------------
   8              	  COLON "/", SLASH @ ( n1 n2 -- n1/n2 )
   8              	>  HEADER Flag_visible,"/",SLASH,DOCOLON
   8              	>>  .p2align 2
   8              	>> VE_SLASH:
   8 02d8 C0020000 	>>  .word 99b
   8 02dc 00000000 	>> 99:.word Flag_visible
   8 02e0 01       	>>  .byte 8f-7f
   8 02e1 2F       	>> 7:.ascii "/"
   8 02e2 00BF     	>> 8:.p2align 2
   8 02e4 8C080000 	>>  XT_SLASH:.word DOCOLON
   8              	>>  PFA_SLASH:
   9              	@ -----------------------------------------------------------------------------
  10 02e8 1C030000 	  .word XT_SLASHMOD, XT_DROP
  10      98000000 
  11 02f0 7C000000 	  .word XT_EXIT
  12              	
  13              	@ -----------------------------------------------------------------------------
  14              	  CODEWORD "*",STAR @ ( u1|n1 u2|n2 -- u3|n3 )
  14              	>  HEADER Flag_visible,"*",STAR,PFA_STAR
  14              	>>  .p2align 2
  14              	>> VE_STAR:
  14 02f4 DC020000 	>>  .word 99b
  14 02f8 00000000 	>> 99:.word Flag_visible
  14 02fc 01       	>>  .byte 8f-7f
  14 02fd 2A       	>> 7:.ascii "*"
  14 02fe 00BF     	>> 8:.p2align 2
ARM GAS  lp-stellaris.asm 			page 17


  14 0300 04030000 	>>  XT_STAR:.word PFA_STAR
  14              	>>  PFA_STAR:
  15              	@ -----------------------------------------------------------------------------
  16 0304 01CF     	  ldm psp!, {r0}    @ Get u1|n1 into a register.
  17 0306 4643     	  muls tos, r0      @ Multiply!
  18              	NEXT
  18 0308 C3E2     	>  b DO_NEXT
  18              	>  .ltorg
  19              	
  20              	@ -----------------------------------------------------------------------------
  21              	  CODEWORD "/mod",SLASHMOD @ ( n1 n2 -- rem quot )
  21              	>  HEADER Flag_visible,"/mod",SLASHMOD,PFA_SLASHMOD
  21 030a 00BF     	>>  .p2align 2
  21              	>> VE_SLASHMOD:
  21 030c F8020000 	>>  .word 99b
  21 0310 00000000 	>> 99:.word Flag_visible
  21 0314 04       	>>  .byte 8f-7f
  21 0315 2F6D6F64 	>> 7:.ascii "/mod"
  21 0319 0000BF   	>> 8:.p2align 2
  21 031c 20030000 	>>  XT_SLASHMOD:.word PFA_SLASHMOD
  21              	>>  PFA_SLASHMOD:
  22              	@ -----------------------------------------------------------------------------
  23 0320 01CF     	  ldm psp!, {r0}     @ Get u1 into a register
  24 0322 3100     	  movs r1, tos       @ Back up the divisor in X.
  25 0324 90FBF6F6 	  sdiv tos, r0, tos  @ Divide: quotient in TOS.
  26 0328 7143     	  muls r1, tos, r1   @ Un-divide to compute remainder.
  27 032a 401A     	  subs r0, r1        @ Compute remainder.
  28 032c 043F     	  subs psp, #4
  29 032e 3860     	  str r0, [psp]
  30              	  NEXT
  30 0330 AFE2     	>  b DO_NEXT
  30              	>  .ltorg
  31              	@ -----------------------------------------------------------------------------
  32              	  CODEWORD "u/mod", USLASHMOD @ ( u1 u2 -- rem quot )
  32              	>  HEADER Flag_visible,"u/mod",USLASHMOD,PFA_USLASHMOD
  32 0332 00BF     	>>  .p2align 2
  32              	>> VE_USLASHMOD:
  32 0334 10030000 	>>  .word 99b
  32 0338 00000000 	>> 99:.word Flag_visible
  32 033c 05       	>>  .byte 8f-7f
  32 033d 752F6D6F 	>> 7:.ascii "u/mod"
  32      64
  32 0342 00BF     	>> 8:.p2align 2
  32 0344 48030000 	>>  XT_USLASHMOD:.word PFA_USLASHMOD
  32              	>>  PFA_USLASHMOD:
  33 0348 01CF     	  ldm psp!, {r0}      @ Get u1 into a register
  34 034a 3100     	  movs r1, tos        @ Back up the divisor in X.
  35 034c B0FBF6F6 	  udiv tos, r0, tos   @ Divide: quotient in TOS.
  36 0350 7143     	  muls r1, tos, r1    @ Un-divide to compute remainder.
  37 0352 401A     	  subs r0, r1         @ Compute remainder.
  38 0354 043F     	  subs psp, #4
  39 0356 3860     	  str r0, [psp]
  40              	  NEXT
  40 0358 9BE2     	>  b DO_NEXT
  40              	>  .ltorg
  30              	.include "words/stack.s"
   1              	
ARM GAS  lp-stellaris.asm 			page 18


   2              	CODEWORD  "depth", DEPTH 
   2              	>  HEADER Flag_visible,"depth",DEPTH,PFA_DEPTH
   2 035a 00BF     	>>  .p2align 2
   2              	>> VE_DEPTH:
   2 035c 38030000 	>>  .word 99b
   2 0360 00000000 	>> 99:.word Flag_visible
   2 0364 05       	>>  .byte 8f-7f
   2 0365 64657074 	>> 7:.ascii "depth"
   2      68
   2 036a 00BF     	>> 8:.p2align 2
   2 036c 70030000 	>>  XT_DEPTH:.word PFA_DEPTH
   2              	>>  PFA_DEPTH:
   3 0370 0349     	  ldr r1, =RAM_upper_datastack 
   4 0372 A1EB0701 	  sub r1, psp 
   5              	  savetos
   5 0376 47F8046D 	>  str tos,[psp,#-4]!
   6 037a 8E10     	  asrs tos, r1, #2 
   7              	NEXT
   7 037c 89E2     	>  b DO_NEXT
   7 037e 00008000 	>  .ltorg
   7      0020
   8              	
   9              	CODEWORD  "rdepth", RDEPTH
   9              	>  HEADER Flag_visible,"rdepth",RDEPTH,PFA_RDEPTH
   9              	>>  .p2align 2
   9              	>> VE_RDEPTH:
   9 0384 60030000 	>>  .word 99b
   9 0388 00000000 	>> 99:.word Flag_visible
   9 038c 06       	>>  .byte 8f-7f
   9 038d 72646570 	>> 7:.ascii "rdepth"
   9      7468
   9 0393 00       	>> 8:.p2align 2
   9 0394 98030000 	>>  XT_RDEPTH:.word PFA_RDEPTH
   9              	>>  PFA_RDEPTH:
  10              	  savetos
  10 0398 47F8046D 	>  str tos,[psp,#-4]!
  11 039c 6E46     	  mov tos, sp
  12 039e 0249     	  ldr r1, =RAM_upper_returnstack
  13 03a0 A1EB0601 	  sub r1, tos 
  14 03a4 8E10     	  asrs tos, r1, #2 
  15              	NEXT
  15 03a6 74E2     	>  b DO_NEXT
  15 03a8 00010020 	>  .ltorg
  16              	
  17              	CODEWORD  "rdrop", RDROP
  17              	>  HEADER Flag_visible,"rdrop",RDROP,PFA_RDROP
  17              	>>  .p2align 2
  17              	>> VE_RDROP:
  17 03ac 88030000 	>>  .word 99b
  17 03b0 00000000 	>> 99:.word Flag_visible
  17 03b4 05       	>>  .byte 8f-7f
  17 03b5 7264726F 	>> 7:.ascii "rdrop"
  17      70
  17 03ba 00BF     	>> 8:.p2align 2
  17 03bc C0030000 	>>  XT_RDROP:.word PFA_RDROP
  17              	>>  PFA_RDROP:
  18 03c0 01B0     	  add sp, #4
ARM GAS  lp-stellaris.asm 			page 19


  19              	NEXT
  19 03c2 66E2     	>  b DO_NEXT
  19              	>  .ltorg
  31              	.include "words/logic.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD  "and",AND @ ( x1 x2 -- x1&x2 )
   2              	>  HEADER Flag_visible,"and",AND,PFA_AND
   2              	>>  .p2align 2
   2              	>> VE_AND:
   2 03c4 B0030000 	>>  .word 99b
   2 03c8 00000000 	>> 99:.word Flag_visible
   2 03cc 03       	>>  .byte 8f-7f
   2 03cd 616E64   	>> 7:.ascii "and"
   2              	>> 8:.p2align 2
   2 03d0 D4030000 	>>  XT_AND:.word PFA_AND
   2              	>>  PFA_AND:
   3              	                        @ Combines the top two stack elements using bitwise AND.
   4              	@ -----------------------------------------------------------------------------
   5 03d4 01CF     	  ldm psp!, {r0}
   6 03d6 0640     	  ands tos, r0
   7              	NEXT
   7 03d8 5BE2     	>  b DO_NEXT
   7              	>  .ltorg
   8              	
   9              	@ -----------------------------------------------------------------------------
  10              	  CODEWORD  "or",OR @ ( x1 x2 -- x1|x2 )
  10              	>  HEADER Flag_visible,"or",OR,PFA_OR
  10 03da 00BF     	>>  .p2align 2
  10              	>> VE_OR:
  10 03dc C8030000 	>>  .word 99b
  10 03e0 00000000 	>> 99:.word Flag_visible
  10 03e4 02       	>>  .byte 8f-7f
  10 03e5 6F72     	>> 7:.ascii "or"
  10 03e7 00       	>> 8:.p2align 2
  10 03e8 EC030000 	>>  XT_OR:.word PFA_OR
  10              	>>  PFA_OR:
  11              	                       @ Combines the top two stack elements using bitwise OR.
  12              	@ -----------------------------------------------------------------------------
  13 03ec 01CF     	  ldm psp!, {r0}
  14 03ee 0643     	  orrs tos, r0
  15              	NEXT
  15 03f0 4FE2     	>  b DO_NEXT
  15              	>  .ltorg
  16              	
  17              	@ -----------------------------------------------------------------------------
  18              	  CODEWORD  "xor",XOR @ ( x1 x2 -- x1|x2 )
  18              	>  HEADER Flag_visible,"xor",XOR,PFA_XOR
  18 03f2 00BF     	>>  .p2align 2
  18              	>> VE_XOR:
  18 03f4 E0030000 	>>  .word 99b
  18 03f8 00000000 	>> 99:.word Flag_visible
  18 03fc 03       	>>  .byte 8f-7f
  18 03fd 786F72   	>> 7:.ascii "xor"
  18              	>> 8:.p2align 2
  18 0400 04040000 	>>  XT_XOR:.word PFA_XOR
  18              	>>  PFA_XOR:
  19              	                        @ Combines the top two stack elements using bitwise exclusive-OR.
ARM GAS  lp-stellaris.asm 			page 20


  20              	@ -----------------------------------------------------------------------------
  21 0404 01CF     	  ldm psp!, {r0}
  22 0406 4640     	  eors tos, r0
  23              	  NEXT
  23 0408 43E2     	>  b DO_NEXT
  23              	>  .ltorg
  24              	
  25              	@ -----------------------------------------------------------------------------
  26              	  CODEWORD  "not",NOT @ ( x -- ~x )
  26              	>  HEADER Flag_visible,"not",NOT,PFA_NOT
  26 040a 00BF     	>>  .p2align 2
  26              	>> VE_NOT:
  26 040c F8030000 	>>  .word 99b
  26 0410 00000000 	>> 99:.word Flag_visible
  26 0414 03       	>>  .byte 8f-7f
  26 0415 6E6F74   	>> 7:.ascii "not"
  26              	>> 8:.p2align 2
  26 0418 1C040000 	>>  XT_NOT:.word PFA_NOT
  26              	>>  PFA_NOT:
  27              	@ -----------------------------------------------------------------------------
  28 041c F643     	  mvns tos, tos
  29              	NEXT
  29 041e 38E2     	>  b DO_NEXT
  29              	>  .ltorg
  30              	
  31              	CODEWORD  "invert", INVERT
  31              	>  HEADER Flag_visible,"invert",INVERT,PFA_INVERT
  31              	>>  .p2align 2
  31              	>> VE_INVERT:
  31 0420 10040000 	>>  .word 99b
  31 0424 00000000 	>> 99:.word Flag_visible
  31 0428 06       	>>  .byte 8f-7f
  31 0429 696E7665 	>> 7:.ascii "invert"
  31      7274
  31 042f 00       	>> 8:.p2align 2
  31 0430 34040000 	>>  XT_INVERT:.word PFA_INVERT
  31              	>>  PFA_INVERT:
  32 0434 F643     	  mvns tos,tos
  33              	NEXT
  33 0436 2CE2     	>  b DO_NEXT
  33              	>  .ltorg
  34              	
  35              	@ -----------------------------------------------------------------------------
  36              	  CODEWORD  "rshift",RSHIFT @ ( x n -- x )
  36              	>  HEADER Flag_visible,"rshift",RSHIFT,PFA_RSHIFT
  36              	>>  .p2align 2
  36              	>> VE_RSHIFT:
  36 0438 24040000 	>>  .word 99b
  36 043c 00000000 	>> 99:.word Flag_visible
  36 0440 06       	>>  .byte 8f-7f
  36 0441 72736869 	>> 7:.ascii "rshift"
  36      6674
  36 0447 00       	>> 8:.p2align 2
  36 0448 4C040000 	>>  XT_RSHIFT:.word PFA_RSHIFT
  36              	>>  PFA_RSHIFT:
  37              	@ -----------------------------------------------------------------------------
  38 044c 01CF     	  ldm psp!, {r0}
ARM GAS  lp-stellaris.asm 			page 21


  39 044e F040     	  lsrs r0, tos
  40 0450 0600     	  movs tos, r0
  41              	NEXT
  41 0452 1EE2     	>  b DO_NEXT
  41              	>  .ltorg
  42              	
  43              	@ -----------------------------------------------------------------------------
  44              	  CODEWORD  "lshift",LSHIFT @ ( x n -- x )
  44              	>  HEADER Flag_visible,"lshift",LSHIFT,PFA_LSHIFT
  44              	>>  .p2align 2
  44              	>> VE_LSHIFT:
  44 0454 3C040000 	>>  .word 99b
  44 0458 00000000 	>> 99:.word Flag_visible
  44 045c 06       	>>  .byte 8f-7f
  44 045d 6C736869 	>> 7:.ascii "lshift"
  44      6674
  44 0463 00       	>> 8:.p2align 2
  44 0464 68040000 	>>  XT_LSHIFT:.word PFA_LSHIFT
  44              	>>  PFA_LSHIFT:
  45              	@ -----------------------------------------------------------------------------
  46 0468 01CF     	  ldm psp!, {r0}
  47 046a B040     	  lsls r0, tos
  48 046c 0600     	  movs tos, r0
  49              	NEXT
  49 046e 10E2     	>  b DO_NEXT
  49              	>  .ltorg
  32              	.include "words/memory.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD  "move",MOVE  @ Move some bytes around. This can cope with overlapping memory areas.
   2              	>  HEADER Flag_visible,"move",MOVE,PFA_MOVE
   2              	>>  .p2align 2
   2              	>> VE_MOVE:
   2 0470 58040000 	>>  .word 99b
   2 0474 00000000 	>> 99:.word Flag_visible
   2 0478 04       	>>  .byte 8f-7f
   2 0479 6D6F7665 	>> 7:.ascii "move"
   2 047d 0000BF   	>> 8:.p2align 2
   2 0480 84040000 	>>  XT_MOVE:.word PFA_MOVE
   2              	>>  PFA_MOVE:
   3              	@------------------------------------------------------------------------------
   4              	
   5 0484 07B4     	  push {r0, r1, r2}
   6              	
   7              	  popda r1 @ Count
   7 0486 3146     	>  mov r1,tos
   7              	>  loadtos
   7 0488 57F8046B 	>>  ldr tos,[psp],#4
   8              	  popda r2 @ Destination address
   8 048c 3246     	>  mov r2,tos
   8              	>  loadtos
   8 048e 57F8046B 	>>  ldr tos,[psp],#4
   9              	  @ TOS:     Source address
  10              	
  11              	  @ Count > 0 ?
  12 0492 0029     	  cmp r1, #0
  13 0494 0FD0     	  beq 3f @ Nothing to do if count is zero.
  14              	
ARM GAS  lp-stellaris.asm 			page 22


  15              	  @ Compare source and destination address to find out which direction to copy.
  16 0496 B242     	  cmp r2, tos
  17 0498 0DD0     	  beq 3f @ If source and destionation are the same, nothing to do.
  18 049a 06D3     	  blo 2f
  19              	
  20 049c 013E     	  subs tos, #1
  21 049e 013A     	  subs r2, #1
  22              	
  23              	1:@ Source > Destination --> Backward move
  24 04a0 705C     	  ldrb r0, [tos, r1]
  25 04a2 5054     	  strb r0, [r2, r1]
  26 04a4 0139     	  subs r1, #1
  27 04a6 FBD1     	  bne 1b
  28 04a8 05E0     	  b 3f
  29              	
  30              	2:@ Source < Destination --> Forward move
  31 04aa 3078     	  ldrb r0, [tos]
  32 04ac 1070     	  strb r0, [r2]
  33 04ae 0136     	  adds tos, #1
  34 04b0 0132     	  adds r2, #1
  35 04b2 0139     	  subs r1, #1
  36 04b4 F9D1     	  bne 2b
  37              	
  38 04b6 40CF     	3:  ldm psp!, {tos}
  39 04b8 07BC     	  pop {r0, r1, r2}
  40              	  NEXT
  40 04ba EAE1     	>  b DO_NEXT
  40              	>  .ltorg
  41              	
  42              	@------------------------------------------------------------------------------
  43              	  CODEWORD  "fill",FILL  @ Fill memory with given byte.
  43              	>  HEADER Flag_visible,"fill",FILL,PFA_FILL
  43              	>>  .p2align 2
  43              	>> VE_FILL:
  43 04bc 74040000 	>>  .word 99b
  43 04c0 00000000 	>> 99:.word Flag_visible
  43 04c4 04       	>>  .byte 8f-7f
  43 04c5 66696C6C 	>> 7:.ascii "fill"
  43 04c9 0000BF   	>> 8:.p2align 2
  43 04cc D0040000 	>>  XT_FILL:.word PFA_FILL
  43              	>>  PFA_FILL:
  44              	  @ ( Destination Count Filling -- )
  45              	@------------------------------------------------------------------------------
  46              	  popda r0 @ Filling byte
  46 04d0 3046     	>  mov r0,tos
  46              	>  loadtos
  46 04d2 57F8046B 	>>  ldr tos,[psp],#4
  47              	  popda r1 @ Count
  47 04d6 3146     	>  mov r1,tos
  47              	>  loadtos
  47 04d8 57F8046B 	>>  ldr tos,[psp],#4
  48              	  @ TOS      Destination
  49              	
  50 04dc 0029     	  cmp r1, #0
  51 04de 02D0     	  beq 2f
  52              	
  53 04e0 0139     	1:subs r1, #1
ARM GAS  lp-stellaris.asm 			page 23


  54 04e2 7054     	  strb r0, [tos, r1]
  55 04e4 FCD1     	  bne 1b
  56              	
  57 04e6 40CF     	2:  ldm psp!, {tos}
  58              	
  59              	NEXT
  59 04e8 D3E1     	>  b DO_NEXT
  59              	>  .ltorg
  60              	
  61              	@ -----------------------------------------------------------------------------
  62              	  CODEWORD  "+!", PLUSSTORE @ ( x 32-addr -- )
  62              	>  HEADER Flag_visible,"+!",PLUSSTORE,PFA_PLUSSTORE
  62 04ea 00BF     	>>  .p2align 2
  62              	>> VE_PLUSSTORE:
  62 04ec C0040000 	>>  .word 99b
  62 04f0 00000000 	>> 99:.word Flag_visible
  62 04f4 02       	>>  .byte 8f-7f
  62 04f5 2B21     	>> 7:.ascii "+!"
  62 04f7 00       	>> 8:.p2align 2
  62 04f8 FC040000 	>>  XT_PLUSSTORE:.word PFA_PLUSSTORE
  62              	>>  PFA_PLUSSTORE:
  63              	                               @ Adds 'x' to the memory cell at 'addr'.
  64              	@ -----------------------------------------------------------------------------
  65 04fc 03CF     	  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
  66 04fe 3268     	  ldr  r2, [tos]     @ Load the current cell value
  67 0500 1218     	  adds r2, r0        @ Do the add
  68 0502 3260     	  str  r2, [tos]     @ Store it back
  69 0504 0E00     	  movs tos, r1
  70              	NEXT
  70 0506 C4E1     	>  b DO_NEXT
  70              	>  .ltorg
  71              	
  72              	@ -----------------------------------------------------------------------------
  73              	  CODEWORD  "c@", CFETCH @ ( 8-addr -- x )
  73              	>  HEADER Flag_visible,"c@",CFETCH,PFA_CFETCH
  73              	>>  .p2align 2
  73              	>> VE_CFETCH:
  73 0508 F0040000 	>>  .word 99b
  73 050c 00000000 	>> 99:.word Flag_visible
  73 0510 02       	>>  .byte 8f-7f
  73 0511 6340     	>> 7:.ascii "c@"
  73 0513 00       	>> 8:.p2align 2
  73 0514 18050000 	>>  XT_CFETCH:.word PFA_CFETCH
  73              	>>  PFA_CFETCH:
  74              	                              @ Loads the byte at 'addr'.
  75              	@ -----------------------------------------------------------------------------
  76 0518 3678     	  ldrb tos, [tos]
  77              	NEXT
  77 051a BAE1     	>  b DO_NEXT
  77              	>  .ltorg
  78              	
  79              	@ -----------------------------------------------------------------------------
  80              	  CODEWORD  "c!", CSTORE @ ( x 8-addr -- )
  80              	>  HEADER Flag_visible,"c!",CSTORE,PFA_CSTORE
  80              	>>  .p2align 2
  80              	>> VE_CSTORE:
  80 051c 0C050000 	>>  .word 99b
ARM GAS  lp-stellaris.asm 			page 24


  80 0520 00000000 	>> 99:.word Flag_visible
  80 0524 02       	>>  .byte 8f-7f
  80 0525 6321     	>> 7:.ascii "c!"
  80 0527 00       	>> 8:.p2align 2
  80 0528 2C050000 	>>  XT_CSTORE:.word PFA_CSTORE
  80              	>>  PFA_CSTORE:
  81              	@ Given a value 'x' and an 8-bit-aligned address 'addr', stores 'x' to memory at 'addr', consuming 
  82              	@ -----------------------------------------------------------------------------
  83 052c 03CF     	  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
  84 052e 3070     	  strb r0, [tos]     @ Popping both saves a cycle.
  85 0530 0E00     	  movs tos, r1
  86              	NEXT
  86 0532 AEE1     	>  b DO_NEXT
  86              	>  .ltorg
  33              	
  34              	.include "words/comparisions.s"
   1              	@
   2              	@    Mecrisp-Stellaris - A native code Forth implementation for ARM-Cortex M microcontrollers
   3              	@    Copyright (C) 2013  Matthias Koch
   4              	@
   5              	@    This program is free software: you can redistribute it and/or modify
   6              	@    it under the terms of the GNU General Public License as published by
   7              	@    the Free Software Foundation, either version 3 of the License, or
   8              	@    (at your option) any later version.
   9              	@
  10              	@    This program is distributed in the hope that it will be useful,
  11              	@    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12              	@    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13              	@    GNU General Public License for more details.
  14              	@
  15              	@    You should have received a copy of the GNU General Public License
  16              	@    along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17              	@
  18              	
  19              	@ Vergleichsoperatoren
  20              	@ Comparision operators
  21              	
  22              	@ -----------------------------------------------------------------------------
  23              	  CODEWORD  "0=", ZEROEQUAL @ ( x -- ? )
  23              	>  HEADER Flag_visible,"0=",ZEROEQUAL,PFA_ZEROEQUAL
  23              	>>  .p2align 2
  23              	>> VE_ZEROEQUAL:
  23 0534 20050000 	>>  .word 99b
  23 0538 00000000 	>> 99:.word Flag_visible
  23 053c 02       	>>  .byte 8f-7f
  23 053d 303D     	>> 7:.ascii "0="
  23 053f 00       	>> 8:.p2align 2
  23 0540 44050000 	>>  XT_ZEROEQUAL:.word PFA_ZEROEQUAL
  23              	>>  PFA_ZEROEQUAL:
  24              	@ -----------------------------------------------------------------------------
  25 0544 013E     	  subs tos, #1
  26 0546 B641     	  sbcs tos, tos
  27              	NEXT
  27 0548 A3E1     	>  b DO_NEXT
  27              	>  .ltorg
  28              	
  29              	@ -----------------------------------------------------------------------------
ARM GAS  lp-stellaris.asm 			page 25


  30              	  CODEWORD  "0<>", NOTZEROEQUAL @ ( x -- ? ) @ Meins
  30              	>  HEADER Flag_visible,"0<>",NOTZEROEQUAL,PFA_NOTZEROEQUAL
  30 054a 00BF     	>>  .p2align 2
  30              	>> VE_NOTZEROEQUAL:
  30 054c 38050000 	>>  .word 99b
  30 0550 00000000 	>> 99:.word Flag_visible
  30 0554 03       	>>  .byte 8f-7f
  30 0555 303C3E   	>> 7:.ascii "0<>"
  30              	>> 8:.p2align 2
  30 0558 5C050000 	>>  XT_NOTZEROEQUAL:.word PFA_NOTZEROEQUAL
  30              	>>  PFA_NOTZEROEQUAL:
  31              	@ -----------------------------------------------------------------------------
  32 055c 013E     	  subs tos, #1
  33 055e B641     	  sbcs tos, tos
  34 0560 F643     	  mvns tos, tos
  35              	NEXT
  35 0562 96E1     	>  b DO_NEXT
  35              	>  .ltorg
  36              	
  37              	@ -----------------------------------------------------------------------------
  38              	  CODEWORD  "0<", ZEROLESS @ ( n -- ? )
  38              	>  HEADER Flag_visible,"0<",ZEROLESS,PFA_ZEROLESS
  38              	>>  .p2align 2
  38              	>> VE_ZEROLESS:
  38 0564 50050000 	>>  .word 99b
  38 0568 00000000 	>> 99:.word Flag_visible
  38 056c 02       	>>  .byte 8f-7f
  38 056d 303C     	>> 7:.ascii "0<"
  38 056f 00       	>> 8:.p2align 2
  38 0570 74050000 	>>  XT_ZEROLESS:.word PFA_ZEROLESS
  38              	>>  PFA_ZEROLESS:
  39              	@ -----------------------------------------------------------------------------
  40 0574 3600     	  movs tos, tos
  41 0576 4FEA2606 	  asr tos, #32    @ Turn MSB into 0xffffffff or 0x00000000
  42              	NEXT
  42 057a 8AE1     	>  b DO_NEXT
  42              	>  .ltorg
  43              	
  44              	@ -----------------------------------------------------------------------------
  45              	  CODEWORD  ">=", GREATEREQUAL @ ( x1 x2 -- ? ) @ Meins
  45              	>  HEADER Flag_visible,">=",GREATEREQUAL,PFA_GREATEREQUAL
  45              	>>  .p2align 2
  45              	>> VE_GREATEREQUAL:
  45 057c 68050000 	>>  .word 99b
  45 0580 00000000 	>> 99:.word Flag_visible
  45 0584 02       	>>  .byte 8f-7f
  45 0585 3E3D     	>> 7:.ascii ">="
  45 0587 00       	>> 8:.p2align 2
  45 0588 8C050000 	>>  XT_GREATEREQUAL:.word PFA_GREATEREQUAL
  45              	>>  PFA_GREATEREQUAL:
  46              	@ -----------------------------------------------------------------------------
  47 058c 01CF     	  ldm psp!, {r0}     @ Get x1 into a register.
  48 058e B042     	  cmp r0, tos        @ Is x2 less?
  49 0590 B4BF     	  ite lt             @ If so,
  50 0592 0026     	  movlt tos, #0      @  set all bits in TOS,
  51 0594 4FF0FF36 	  movge tos, #-1     @  otherwise clear them all.
  52              	NEXT
ARM GAS  lp-stellaris.asm 			page 26


  52 0598 7BE1     	>  b DO_NEXT
  52              	>  .ltorg
  53              	
  54              	@ -----------------------------------------------------------------------------
  55              	  CODEWORD  "<=", LESSEQUAL @ ( x1 x2 -- ? ) @ Meins          
  55              	>  HEADER Flag_visible,"<=",LESSEQUAL,PFA_LESSEQUAL
  55 059a 00BF     	>>  .p2align 2
  55              	>> VE_LESSEQUAL:
  55 059c 80050000 	>>  .word 99b
  55 05a0 00000000 	>> 99:.word Flag_visible
  55 05a4 02       	>>  .byte 8f-7f
  55 05a5 3C3D     	>> 7:.ascii "<="
  55 05a7 00       	>> 8:.p2align 2
  55 05a8 AC050000 	>>  XT_LESSEQUAL:.word PFA_LESSEQUAL
  55              	>>  PFA_LESSEQUAL:
  56              	@ -----------------------------------------------------------------------------
  57 05ac 01CF     	  ldm psp!, {r0}     @ Get x1 into a register.
  58 05ae B042     	  cmp r0, tos        @ Is x2 greater?
  59 05b0 CCBF     	  ite gt             @ If so,
  60 05b2 0026     	  movgt tos, #0      @  set all bits in TOS,
  61 05b4 4FF0FF36 	  movle tos, #-1     @  otherwise clear them all.
  62              	NEXT
  62 05b8 6BE1     	>  b DO_NEXT
  62              	>  .ltorg
  63              	
  64              	@ -----------------------------------------------------------------------------
  65              	  CODEWORD  "<", LESS @ ( x1 x2 -- ? )
  65              	>  HEADER Flag_visible,"<",LESS,PFA_LESS
  65 05ba 00BF     	>>  .p2align 2
  65              	>> VE_LESS:
  65 05bc A0050000 	>>  .word 99b
  65 05c0 00000000 	>> 99:.word Flag_visible
  65 05c4 01       	>>  .byte 8f-7f
  65 05c5 3C       	>> 7:.ascii "<"
  65 05c6 00BF     	>> 8:.p2align 2
  65 05c8 CC050000 	>>  XT_LESS:.word PFA_LESS
  65              	>>  PFA_LESS:
  66              	                      @ Checks if x2 is less than x1.
  67              	@ -----------------------------------------------------------------------------
  68 05cc 01CF     	  ldm psp!, {r0}     @ Get x1 into a register.
  69 05ce B042     	  cmp r0, tos        @ Is x2 less?
  70 05d0 B4BF     	  ite lt             @ If so,
  71 05d2 4FF0FF36 	  movlt tos, #-1     @  set all bits in TOS,
  72 05d6 0026     	  movge tos, #0      @  otherwise clear them all.
  73              	NEXT
  73 05d8 5BE1     	>  b DO_NEXT
  73              	>  .ltorg
  74              	
  75              	@ -----------------------------------------------------------------------------
  76              	  CODEWORD  ">", GREATER @ ( x1 x2 -- ? )
  76              	>  HEADER Flag_visible,">",GREATER,PFA_GREATER
  76 05da 00BF     	>>  .p2align 2
  76              	>> VE_GREATER:
  76 05dc C0050000 	>>  .word 99b
  76 05e0 00000000 	>> 99:.word Flag_visible
  76 05e4 01       	>>  .byte 8f-7f
  76 05e5 3E       	>> 7:.ascii ">"
ARM GAS  lp-stellaris.asm 			page 27


  76 05e6 00BF     	>> 8:.p2align 2
  76 05e8 EC050000 	>>  XT_GREATER:.word PFA_GREATER
  76              	>>  PFA_GREATER:
  77              	                      @ Checks if x2 is greater than x1.
  78              	@ -----------------------------------------------------------------------------
  79 05ec 01CF     	  ldm psp!, {r0}     @ Get x1 into a register.
  80 05ee B042     	  cmp r0, tos        @ Is x2 greater?
  81 05f0 CCBF     	  ite gt             @ If so,
  82 05f2 4FF0FF36 	  movgt tos, #-1     @  set all bits in TOS,
  83 05f6 0026     	  movle tos, #0      @  otherwise clear them all.
  84              	NEXT
  84 05f8 4BE1     	>  b DO_NEXT
  84              	>  .ltorg
  85              	
  86              	@ -----------------------------------------------------------------------------
  87              	  CODEWORD  "u<", ULESS @ ( u1 u2 -- ? )
  87              	>  HEADER Flag_visible,"u<",ULESS,PFA_ULESS
  87 05fa 00BF     	>>  .p2align 2
  87              	>> VE_ULESS:
  87 05fc E0050000 	>>  .word 99b
  87 0600 00000000 	>> 99:.word Flag_visible
  87 0604 02       	>>  .byte 8f-7f
  87 0605 753C     	>> 7:.ascii "u<"
  87 0607 00       	>> 8:.p2align 2
  87 0608 0C060000 	>>  XT_ULESS:.word PFA_ULESS
  87              	>>  PFA_ULESS:
  88              	@ -----------------------------------------------------------------------------
  89 060c 01CF     	  ldm psp!, {r0}      @ Get u1 into a register.
  90 060e 861B     	  subs tos, r0, tos   @ subs tos, w, tos   @ TOS = a-b  -- carry set if a is less than b
  91 0610 B641     	  sbcs tos, tos
  92              	NEXT
  92 0612 3EE1     	>  b DO_NEXT
  92              	>  .ltorg
  93              	@ -----------------------------------------------------------------------------
  94              	  CODEWORD  "u>", UGREATER @ ( u1 u2 -- ? ) @ Meins
  94              	>  HEADER Flag_visible,"u>",UGREATER,PFA_UGREATER
  94              	>>  .p2align 2
  94              	>> VE_UGREATER:
  94 0614 00060000 	>>  .word 99b
  94 0618 00000000 	>> 99:.word Flag_visible
  94 061c 02       	>>  .byte 8f-7f
  94 061d 753E     	>> 7:.ascii "u>"
  94 061f 00       	>> 8:.p2align 2
  94 0620 24060000 	>>  XT_UGREATER:.word PFA_UGREATER
  94              	>>  PFA_UGREATER:
  95              	@ -----------------------------------------------------------------------------
  96 0624 01CF     	  ldm psp!, {r0}
  97 0626 361A     	  subs tos, r0
  98 0628 B641     	  sbcs tos, tos
  99              	NEXT
  99 062a 32E1     	>  b DO_NEXT
  99              	>  .ltorg
 100              	@ -----------------------------------------------------------------------------
 101              	  CODEWORD  "<>", NOTEQUAL @ ( x1 x2 -- ? )
 101              	>  HEADER Flag_visible,"<>",NOTEQUAL,PFA_NOTEQUAL
 101              	>>  .p2align 2
 101              	>> VE_NOTEQUAL:
ARM GAS  lp-stellaris.asm 			page 28


 101 062c 18060000 	>>  .word 99b
 101 0630 00000000 	>> 99:.word Flag_visible
 101 0634 02       	>>  .byte 8f-7f
 101 0635 3C3E     	>> 7:.ascii "<>"
 101 0637 00       	>> 8:.p2align 2
 101 0638 3C060000 	>>  XT_NOTEQUAL:.word PFA_NOTEQUAL
 101              	>>  PFA_NOTEQUAL:
 102              	                       @ Compares the top two stack elements for inequality.
 103              	@ -----------------------------------------------------------------------------
 104 063c 01CF     	  ldm psp!, {r0}      @ Get the next elt into a register.
 105 063e 361A     	  subs tos, r0        @ Z=equality; if equal, TOS=0
 106              	
 107 0640 18BF     	  it ne             @ If not equal,
 108 0642 4FF0FF36 	  movne tos, #-1    @  set all bits in TOS.
 109              	NEXT
 109 0646 24E1     	>  b DO_NEXT
 109              	>  .ltorg
 110              	
 111              	@ -----------------------------------------------------------------------------
 112              	  CODEWORD  "=", EQUAL @ ( x1 x2 -- ? )
 112              	>  HEADER Flag_visible,"=",EQUAL,PFA_EQUAL
 112              	>>  .p2align 2
 112              	>> VE_EQUAL:
 112 0648 30060000 	>>  .word 99b
 112 064c 00000000 	>> 99:.word Flag_visible
 112 0650 01       	>>  .byte 8f-7f
 112 0651 3D       	>> 7:.ascii "="
 112 0652 00BF     	>> 8:.p2align 2
 112 0654 58060000 	>>  XT_EQUAL:.word PFA_EQUAL
 112              	>>  PFA_EQUAL:
 113              	                      @ Compares the top two stack elements for equality.
 114              	@ -----------------------------------------------------------------------------
 115 0658 01CF     	  ldm psp!, {r0}     @ Get the next elt into a register.
 116 065a 361A     	  subs tos, r0       @ Z=equality; if equal, TOS=0
 117              	
 118 065c 013E     	  subs tos, #1       @ Wenn es Null war, gibt es jetzt einen Überlauf
 119 065e B641     	  sbcs tos, tos
 120              	NEXT
 120 0660 17E1     	>  b DO_NEXT
 120              	>  .ltorg
 121              	@ -----------------------------------------------------------------------------
 122              	  CODEWORD  "min", MIN @ ( x1 x2 -- x3 )
 122              	>  HEADER Flag_visible,"min",MIN,PFA_MIN
 122 0662 00BF     	>>  .p2align 2
 122              	>> VE_MIN:
 122 0664 4C060000 	>>  .word 99b
 122 0668 00000000 	>> 99:.word Flag_visible
 122 066c 03       	>>  .byte 8f-7f
 122 066d 6D696E   	>> 7:.ascii "min"
 122              	>> 8:.p2align 2
 122 0670 74060000 	>>  XT_MIN:.word PFA_MIN
 122              	>>  PFA_MIN:
 123              	                        @ x3 is the lesser of x1 and x2.
 124              	@ -----------------------------------------------------------------------------
 125 0674 01CF     	  ldm psp!, {r0}       @ Get x1 into a register.
 126 0676 B042     	  cmp r0, tos          @ Compare them.
 127 0678 B8BF     	  it lt                @ If X is less,
ARM GAS  lp-stellaris.asm 			page 29


 128 067a 0646     	  movlt tos, r0        @  replace TOS with it.
 129              	NEXT
 129 067c 09E1     	>  b DO_NEXT
 129              	>  .ltorg
 130              	
 131              	@ -----------------------------------------------------------------------------
 132              	  CODEWORD  "max", MAX @ ( x1 x2 -- x3 )
 132              	>  HEADER Flag_visible,"max",MAX,PFA_MAX
 132 067e 00BF     	>>  .p2align 2
 132              	>> VE_MAX:
 132 0680 68060000 	>>  .word 99b
 132 0684 00000000 	>> 99:.word Flag_visible
 132 0688 03       	>>  .byte 8f-7f
 132 0689 6D6178   	>> 7:.ascii "max"
 132              	>> 8:.p2align 2
 132 068c 90060000 	>>  XT_MAX:.word PFA_MAX
 132              	>>  PFA_MAX:
 133              	                        @ x3 is the greater of x1 and x2.
 134              	@ -----------------------------------------------------------------------------
 135 0690 01CF     	  ldm psp!, {r0}       @ Get x1 into a register.
 136 0692 B042     	  cmp r0, tos          @ Compare them.
 137 0694 C8BF     	  it gt                @ If X is greater,
 138 0696 0646     	  movgt tos, r0        @  replace TOS with it.
 139              	NEXT
 139 0698 FBE0     	>  b DO_NEXT
 139              	>  .ltorg
 140              	
 141              	@ -----------------------------------------------------------------------------
 142              	  CODEWORD  "umax", UMAX @ ( u1 u2 -- u1|u2 )
 142              	>  HEADER Flag_visible,"umax",UMAX,PFA_UMAX
 142 069a 00BF     	>>  .p2align 2
 142              	>> VE_UMAX:
 142 069c 84060000 	>>  .word 99b
 142 06a0 00000000 	>> 99:.word Flag_visible
 142 06a4 04       	>>  .byte 8f-7f
 142 06a5 756D6178 	>> 7:.ascii "umax"
 142 06a9 0000BF   	>> 8:.p2align 2
 142 06ac B0060000 	>>  XT_UMAX:.word PFA_UMAX
 142              	>>  PFA_UMAX:
 143              	@ -----------------------------------------------------------------------------
 144 06b0 01CF     	  ldm psp!, {r0}  @ Get u1 into a register.
 145 06b2 B042     	  cmp r0, tos 
 146 06b4 88BF     	  it hi           @ If W > TOS,
 147 06b6 0646     	  movhi tos, r0   @  replace TOS with W.
 148              	NEXT
 148 06b8 EBE0     	>  b DO_NEXT
 148              	>  .ltorg
 149              	
 150              	@ -----------------------------------------------------------------------------
 151              	  CODEWORD  "umin",UMIN @ ( u1 u2 -- u1|u2 )
 151              	>  HEADER Flag_visible,"umin",UMIN,PFA_UMIN
 151 06ba 00BF     	>>  .p2align 2
 151              	>> VE_UMIN:
 151 06bc A0060000 	>>  .word 99b
 151 06c0 00000000 	>> 99:.word Flag_visible
 151 06c4 04       	>>  .byte 8f-7f
 151 06c5 756D696E 	>> 7:.ascii "umin"
ARM GAS  lp-stellaris.asm 			page 30


 151 06c9 0000BF   	>> 8:.p2align 2
 151 06cc D0060000 	>>  XT_UMIN:.word PFA_UMIN
 151              	>>  PFA_UMIN:
 152              	@ -----------------------------------------------------------------------------
 153 06d0 01CF     	  ldm psp!, {r0}  @ Get u1 into a register.
 154 06d2 B042     	  cmp r0, tos
 155 06d4 38BF     	  it lo           @ If W < TOS,
 156 06d6 0646     	  movlo tos, r0   @  replace TOS with W.
 157              	NEXT
 157 06d8 DBE0     	>  b DO_NEXT
 157              	>  .ltorg
  35              	
  36              	
  37              	.include "words/2swap.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "2swap", 2SWAP @ ( 4 3 2 1 -- 2 1 4 3 )
   2              	>  HEADER Flag_visible,"2swap",2SWAP,PFA_2SWAP
   2 06da 00BF     	>>  .p2align 2
   2              	>> VE_2SWAP:
   2 06dc C0060000 	>>  .word 99b
   2 06e0 00000000 	>> 99:.word Flag_visible
   2 06e4 05       	>>  .byte 8f-7f
   2 06e5 32737761 	>> 7:.ascii "2swap"
   2      70
   2 06ea 00BF     	>> 8:.p2align 2
   2 06ec F0060000 	>>  XT_2SWAP:.word PFA_2SWAP
   2              	>>  PFA_2SWAP:
   3              	@ -----------------------------------------------------------------------------
   4 06f0 00F001F8 	  bl dswap
   5              	NEXT
   5 06f4 CDE0     	>  b DO_NEXT
   5              	>  .ltorg
   6              	
   7              	dswap:
   8 06f6 00B5     	  push {lr}
   9 06f8 07CF     	  ldm psp!, {r0, r1, r2}
  10 06fa 043F     	  subs psp, #4
  11 06fc 3860     	  str r0, [psp]
  12              	  savetos
  12 06fe 47F8046D 	>  str tos,[psp,#-4]!
  13 0702 043F     	  subs psp, #4
  14 0704 3A60     	  str r2, [psp]
  15 0706 0E00     	  movs tos, r1
  16 0708 00BD     	  pop {pc}
  38              	.include "words/2nip.s"
   1              	  CODEWORD "2nip", 2NIP @ ( 4 3 2 1 -- 2 1 )
   1              	>  HEADER Flag_visible,"2nip",2NIP,PFA_2NIP
   1 070a 00BF     	>>  .p2align 2
   1              	>> VE_2NIP:
   1 070c E0060000 	>>  .word 99b
   1 0710 00000000 	>> 99:.word Flag_visible
   1 0714 04       	>>  .byte 8f-7f
   1 0715 326E6970 	>> 7:.ascii "2nip"
   1 0719 0000BF   	>> 8:.p2align 2
   1 071c 20070000 	>>  XT_2NIP:.word PFA_2NIP
   1              	>>  PFA_2NIP:
   2 0720 07CF     	  ldm psp!, {r0, r1, r2}
ARM GAS  lp-stellaris.asm 			page 31


   3 0722 A7F10407 	  sub psp, #4
   4 0726 3860     	  str r0, [psp]
   5              	NEXT
   5 0728 B3E0     	>  b DO_NEXT
   5              	>  .ltorg
  39              	.include "words/2drop.s"
   1              	CODEWORD "2drop",2DROP @ ( 2 1 -- )
   1              	>  HEADER Flag_visible,"2drop",2DROP,PFA_2DROP
   1 072a 00BF     	>>  .p2align 2
   1              	>> VE_2DROP:
   1 072c 10070000 	>>  .word 99b
   1 0730 00000000 	>> 99:.word Flag_visible
   1 0734 05       	>>  .byte 8f-7f
   1 0735 3264726F 	>> 7:.ascii "2drop"
   1      70
   1 073a 00BF     	>> 8:.p2align 2
   1 073c 40070000 	>>  XT_2DROP:.word PFA_2DROP
   1              	>>  PFA_2DROP:
   2 0740 07F10407 	  add psp, #4
   3              	  loadtos
   3 0744 57F8046B 	>  ldr tos,[psp],#4
   4              	NEXT
   4 0748 A3E0     	>  b DO_NEXT
   4              	>  .ltorg
  40              	.include "words/2over.s"
   1              	CODEWORD "2over", 2OVER @ ( 4 3 2 1 -- 4 3 2 1 4 3 )
   1              	>  HEADER Flag_visible,"2over",2OVER,PFA_2OVER
   1 074a 00BF     	>>  .p2align 2
   1              	>> VE_2OVER:
   1 074c 30070000 	>>  .word 99b
   1 0750 00000000 	>> 99:.word Flag_visible
   1 0754 05       	>>  .byte 8f-7f
   1 0755 326F7665 	>> 7:.ascii "2over"
   1      72
   1 075a 00BF     	>> 8:.p2align 2
   1 075c 60070000 	>>  XT_2OVER:.word PFA_2OVER
   1              	>>  PFA_2OVER:
   2 0760 B868     	  ldr r0, [psp, #8]
   3              	  savetos
   3 0762 47F8046D 	>  str tos,[psp,#-4]!
   4 0766 A7F10407 	  sub psp, #4
   5 076a 3860     	  str r0, [psp]
   6 076c FE68     	  ldr tos, [psp, #12]  
   7              	NEXT
   7 076e 90E0     	>  b DO_NEXT
   7              	>  .ltorg
  41              	.include "words/2r-fetch.s"
   1              	CODEWORD "2r@", 2R_FETCH @ Copies the two top elements of returnsteack
   1              	>  HEADER Flag_visible,"2r@",2R_FETCH,PFA_2R_FETCH
   1              	>>  .p2align 2
   1              	>> VE_2R_FETCH:
   1 0770 50070000 	>>  .word 99b
   1 0774 00000000 	>> 99:.word Flag_visible
   1 0778 03       	>>  .byte 8f-7f
   1 0779 327240   	>> 7:.ascii "2r@"
   1              	>> 8:.p2align 2
   1 077c 80070000 	>>  XT_2R_FETCH:.word PFA_2R_FETCH
ARM GAS  lp-stellaris.asm 			page 32


   1              	>>  PFA_2R_FETCH:
   2              	  savetos
   2 0780 47F8046D 	>  str tos,[psp,#-4]!
   3 0784 019E     	  ldr tos, [sp, #4]
   4              	  savetos
   4 0786 47F8046D 	>  str tos,[psp,#-4]!
   5 078a 009E     	  ldr tos, [sp]
   6              	NEXT
   6 078c 81E0     	>  b DO_NEXT
   6              	>  .ltorg
  42              	.include "words/2to-r.s"
   1              	CODEWORD "2>r", 2TO_R @ Puts the two top elements of stack on returnstack.
   1              	>  HEADER Flag_visible,"2>r",2TO_R,PFA_2TO_R
   1 078e 00BF     	>>  .p2align 2
   1              	>> VE_2TO_R:
   1 0790 74070000 	>>  .word 99b
   1 0794 00000000 	>> 99:.word Flag_visible
   1 0798 03       	>>  .byte 8f-7f
   1 0799 323E72   	>> 7:.ascii "2>r"
   1              	>> 8:.p2align 2
   1 079c A0070000 	>>  XT_2TO_R:.word PFA_2TO_R
   1              	>>  PFA_2TO_R:
   2 07a0 01CF     	  ldm psp!, {r0}
   3 07a2 01B4     	  push {r0}
   4 07a4 40B4     	  push {tos}
   5 07a6 40CF     	  ldm psp!, {tos}
   6              	NEXT
   6 07a8 73E0     	>  b DO_NEXT
   6              	>  .ltorg
  43              	.include "words/2r-from.s"
   1              	CODEWORD "2r>", 2R_FROM @ Fetches back two elements of returnstack.
   1              	>  HEADER Flag_visible,"2r>",2R_FROM,PFA_2R_FROM
   1 07aa 00BF     	>>  .p2align 2
   1              	>> VE_2R_FROM:
   1 07ac 94070000 	>>  .word 99b
   1 07b0 00000000 	>> 99:.word Flag_visible
   1 07b4 03       	>>  .byte 8f-7f
   1 07b5 32723E   	>> 7:.ascii "2r>"
   1              	>> 8:.p2align 2
   1 07b8 BC070000 	>>  XT_2R_FROM:.word PFA_2R_FROM
   1              	>>  PFA_2R_FROM:
   2              	  savetos
   2 07bc 47F8046D 	>  str tos,[psp,#-4]!
   3 07c0 40BC     	  pop {tos}
   4 07c2 01BC     	  pop {r0}
   5 07c4 A7F10407 	  sub psp, #4
   6 07c8 3860     	  str r0, [psp]
   7              	NEXT
   7 07ca 62E0     	>  b DO_NEXT
   7              	>  .ltorg
  44              	
  45              	
  46              	.include "words/2-slash.s"
   1              	CODEWORD "2/", 2SLASH @ ( n -- n/2 )
   1              	>  HEADER Flag_visible,"2/",2SLASH,PFA_2SLASH
   1              	>>  .p2align 2
   1              	>> VE_2SLASH:
ARM GAS  lp-stellaris.asm 			page 33


   1 07cc B0070000 	>>  .word 99b
   1 07d0 00000000 	>> 99:.word Flag_visible
   1 07d4 02       	>>  .byte 8f-7f
   1 07d5 322F     	>> 7:.ascii "2/"
   1 07d7 00       	>> 8:.p2align 2
   1 07d8 DC070000 	>>  XT_2SLASH:.word PFA_2SLASH
   1              	>>  PFA_2SLASH:
   2 07dc 4FEA6606 	  asr tos, tos, #1
   3              	NEXT
   3 07e0 57E0     	>  b DO_NEXT
   3              	>  .ltorg
  47              	.include "words/2-star.s"
   1              	CODEWORD "2*", 2STAR @ ( n -- n*2 )
   1              	>  HEADER Flag_visible,"2*",2STAR,PFA_2STAR
   1 07e2 00BF     	>>  .p2align 2
   1              	>> VE_2STAR:
   1 07e4 D0070000 	>>  .word 99b
   1 07e8 00000000 	>> 99:.word Flag_visible
   1 07ec 02       	>>  .byte 8f-7f
   1 07ed 322A     	>> 7:.ascii "2*"
   1 07ef 00       	>> 8:.p2align 2
   1 07f0 F4070000 	>>  XT_2STAR:.word PFA_2STAR
   1              	>>  PFA_2STAR:
   2 07f4 3644     	  add tos, tos
   3              	NEXT
   3 07f6 4CE0     	>  b DO_NEXT
   3              	>  .ltorg
  48              	.include "words/d-2star.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD "d2*", D2STAR
   2              	>  HEADER Flag_visible,"d2*",D2STAR,PFA_D2STAR
   2              	>>  .p2align 2
   2              	>> VE_D2STAR:
   2 07f8 E8070000 	>>  .word 99b
   2 07fc 00000000 	>> 99:.word Flag_visible
   2 0800 03       	>>  .byte 8f-7f
   2 0801 64322A   	>> 7:.ascii "d2*"
   2              	>> 8:.p2align 2
   2 0804 08080000 	>>  XT_D2STAR:.word PFA_D2STAR
   2              	>>  PFA_D2STAR:
   3              	@------------------------------------------------------------------------------
   4 0808 3868     	  ldr r0, [psp]
   5 080a 0018     	  adds r0, r0
   6 080c 7641     	  adcs tos, tos
   7 080e 3860     	  str r0, [psp]
   8              	NEXT
   8 0810 3FE0     	>  b DO_NEXT
   8              	>  .ltorg
  49              	.include "words/d-2slash.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD "d2/", D2SLASH
   2              	>  HEADER Flag_visible,"d2/",D2SLASH,PFA_D2SLASH
   2 0812 00BF     	>>  .p2align 2
   2              	>> VE_D2SLASH:
   2 0814 FC070000 	>>  .word 99b
   2 0818 00000000 	>> 99:.word Flag_visible
   2 081c 03       	>>  .byte 8f-7f
ARM GAS  lp-stellaris.asm 			page 34


   2 081d 64322F   	>> 7:.ascii "d2/"
   2              	>> 8:.p2align 2
   2 0820 24080000 	>>  XT_D2SLASH:.word PFA_D2SLASH
   2              	>>  PFA_D2SLASH:
   3              	@------------------------------------------------------------------------------
   4 0824 3868     	  ldr r0, [psp]
   5 0826 F107     	  lsls r1, tos, #31 @ Prepare Carry
   6 0828 7610     	  asrs tos, #1     @ Shift signed high part right
   7 082a 4008     	  lsrs r0, #1       @ Shift low part
   8 082c 0843     	  orrs r0, r1
   9 082e 3860     	  str r0, [psp]
  10              	NEXT
  10 0830 2FE0     	>  b DO_NEXT
  10              	>  .ltorg
  50              	.include "words/dabs.s"
   1              	COLON "dabs", DABS
   1              	>  HEADER Flag_visible,"dabs",DABS,DOCOLON
   1 0832 00BF     	>>  .p2align 2
   1              	>> VE_DABS:
   1 0834 18080000 	>>  .word 99b
   1 0838 00000000 	>> 99:.word Flag_visible
   1 083c 04       	>>  .byte 8f-7f
   1 083d 64616273 	>> 7:.ascii "dabs"
   1 0841 0000BF   	>> 8:.p2align 2
   1 0844 8C080000 	>>  XT_DABS:.word DOCOLON
   1              	>>  PFA_DABS:
   2 0848 C8000000 	  .word XT_DUP,XT_ZEROLESS, XT_DOCONDBRANCH,DABS_LEAVE
   2      70050000 
   2      BE0F0000 
   2      5C080000 
   3 0858 70080000 	    .word XT_DNEGATE
   4              	DABS_LEAVE:
   5 085c 7C000000 	  .word XT_EXIT
   6              	
  51              	.include "words/dnegate.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD "dnegate", DNEGATE
   2              	>  HEADER Flag_visible,"dnegate",DNEGATE,PFA_DNEGATE
   2              	>>  .p2align 2
   2              	>> VE_DNEGATE:
   2 0860 38080000 	>>  .word 99b
   2 0864 00000000 	>> 99:.word Flag_visible
   2 0868 07       	>>  .byte 8f-7f
   2 0869 646E6567 	>> 7:.ascii "dnegate"
   2      617465
   2              	>> 8:.p2align 2
   2 0870 74080000 	>>  XT_DNEGATE:.word PFA_DNEGATE
   2              	>>  PFA_DNEGATE:
   3              	@------------------------------------------------------------------------------
   4              	
   5 0874 00F001F8 	  bl dnegate
   6              	NEXT
   6 0878 0BE0     	>  b DO_NEXT
   6              	>  .ltorg
   7              	
   8              	dnegate:
   9 087a 00B5     	  push {lr}
ARM GAS  lp-stellaris.asm 			page 35


  10 087c 3868     	  ldr r0, [psp]
  11 087e 0021     	  movs r1, #0
  12 0880 C043     	  mvns r0, r0
  13 0882 F643     	  mvns tos, tos
  14 0884 0130     	  adds r0, #1
  15 0886 4E41     	  adcs tos, r1
  16 0888 3860     	  str r0, [psp]
  17 088a 00BD     	  pop {pc}
  52              	
  53              	DOCOLON: 
  54 088c 4DF8049D 	        push {FORTHIP}
  55 0890 C146     	        mov FORTHIP, FORTHW
  56              	DO_NEXT:
  57 0892 59F8048B 	        ldr FORTHW, [FORTHIP], #4
  58              	DO_EXECUTE:
  59 0896 58F8040B 	        ldr r0, [FORTHW], #4
  60 089a 8746     	        mov pc, r0
  61              	
  62              	.include "words/d-plus.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD "d+", DPLUS @ ( 1L 1H 2L 2H )
   2              	>  HEADER Flag_visible,"d+",DPLUS,PFA_DPLUS
   2              	>>  .p2align 2
   2              	>> VE_DPLUS:
   2 089c 64080000 	>>  .word 99b
   2 08a0 00000000 	>> 99:.word Flag_visible
   2 08a4 02       	>>  .byte 8f-7f
   2 08a5 642B     	>> 7:.ascii "d+"
   2 08a7 00       	>> 8:.p2align 2
   2 08a8 AC080000 	>>  XT_DPLUS:.word PFA_DPLUS
   2              	>>  PFA_DPLUS:
   3              	@------------------------------------------------------------------------------
   4 08ac 07CF     	  ldm psp!, {r0, r1, r2}
   5 08ae 1218     	  adds r2, r0
   6 08b0 4E41     	  adcs tos, r1
   7 08b2 043F     	  subs psp, #4
   8 08b4 3A60     	  str r2, [psp]
   9              	NEXT
   9 08b6 ECE7     	>  b DO_NEXT
   9              	>  .ltorg
  63              	.include "words/d-minus.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD "d-", DMINUS @ ( 1L 1H 2L 2H )
   2              	>  HEADER Flag_visible,"d-",DMINUS,PFA_DMINUS
   2              	>>  .p2align 2
   2              	>> VE_DMINUS:
   2 08b8 A0080000 	>>  .word 99b
   2 08bc 00000000 	>> 99:.word Flag_visible
   2 08c0 02       	>>  .byte 8f-7f
   2 08c1 642D     	>> 7:.ascii "d-"
   2 08c3 00       	>> 8:.p2align 2
   2 08c4 C8080000 	>>  XT_DMINUS:.word PFA_DMINUS
   2              	>>  PFA_DMINUS:
   3              	@------------------------------------------------------------------------------
   4 08c8 07CF     	  ldm psp!, {r0, r1, r2}
   5 08ca 121A     	  subs r2, r0     @  Low-part first
   6 08cc B141     	  sbcs r1, tos   @ High-part with carry
ARM GAS  lp-stellaris.asm 			page 36


   7 08ce 0E00     	  movs tos, r1
   8              	
   9 08d0 043F     	  subs psp, #4
  10 08d2 3A60     	  str r2, [psp]
  11              	NEXT
  11 08d4 DDE7     	>  b DO_NEXT
  11              	>  .ltorg
  64              	.include "words/2dup.s"
   1              	CODEWORD "2dup", 2DUP @ ( 2 1 -- 2 1 2 1 )
   1              	>  HEADER Flag_visible,"2dup",2DUP,PFA_2DUP
   1 08d6 00BF     	>>  .p2align 2
   1              	>> VE_2DUP:
   1 08d8 BC080000 	>>  .word 99b
   1 08dc 00000000 	>> 99:.word Flag_visible
   1 08e0 04       	>>  .byte 8f-7f
   1 08e1 32647570 	>> 7:.ascii "2dup"
   1 08e5 0000BF   	>> 8:.p2align 2
   1 08e8 EC080000 	>>  XT_2DUP:.word PFA_2DUP
   1              	>>  PFA_2DUP:
   2 08ec 3868     	  ldr r0, [psp]
   3              	  savetos
   3 08ee 47F8046D 	>  str tos,[psp,#-4]!
   4 08f2 A7F10407 	  sub psp, #4
   5 08f6 3860     	  str r0, [psp]
   6              	NEXT
   6 08f8 CBE7     	>  b DO_NEXT
   6              	>  .ltorg
  65              	.include "words/double.s"
   1              	
   2              	
   3              	@------------------------------------------------------------------------------
   4              	  CODEWORD  "um*", UMSTAR
   4              	>  HEADER Flag_visible,"um*",UMSTAR,PFA_UMSTAR
   4 08fa 00BF     	>>  .p2align 2
   4              	>> VE_UMSTAR:
   4 08fc DC080000 	>>  .word 99b
   4 0900 00000000 	>> 99:.word Flag_visible
   4 0904 03       	>>  .byte 8f-7f
   4 0905 756D2A   	>> 7:.ascii "um*"
   4              	>> 8:.p2align 2
   4 0908 0C090000 	>>  XT_UMSTAR:.word PFA_UMSTAR
   4              	>>  PFA_UMSTAR:
   5              	  @ Multiply unsigned 32*32 = 64
   6              	  @ ( u u -- ud )
   7              	@------------------------------------------------------------------------------
   8 090c 3868     	    ldr r0, [psp]  @ To be calculated: Tos * r0
   9 090e A6FB0006 	    umull r0, tos, tos, r0
  10 0912 3860     	    str r0, [psp]
  11              	    NEXT
  11 0914 BDE7     	>  b DO_NEXT
  11              	>  .ltorg
  12              	
  13              	@------------------------------------------------------------------------------
  14              	  CODEWORD  "m*", MSTAR
  14              	>  HEADER Flag_visible,"m*",MSTAR,PFA_MSTAR
  14 0916 00BF     	>>  .p2align 2
  14              	>> VE_MSTAR:
ARM GAS  lp-stellaris.asm 			page 37


  14 0918 00090000 	>>  .word 99b
  14 091c 00000000 	>> 99:.word Flag_visible
  14 0920 02       	>>  .byte 8f-7f
  14 0921 6D2A     	>> 7:.ascii "m*"
  14 0923 00       	>> 8:.p2align 2
  14 0924 28090000 	>>  XT_MSTAR:.word PFA_MSTAR
  14              	>>  PFA_MSTAR:
  15              	  @ Multiply signed 32*32 = 64
  16              	  @ ( n n -- d )
  17              	@------------------------------------------------------------------------------
  18 0928 3868     	    ldr r0, [psp]
  19 092a 86FB0006 	    smull r0, tos, tos, r0
  20 092e 3860     	    str r0, [psp]
  21              	    NEXT
  21 0930 AFE7     	>  b DO_NEXT
  21              	>  .ltorg
  22              	
  23              	@------------------------------------------------------------------------------
  24              	  CODEWORD  "ud/mod", UDSLASHMOD
  24              	>  HEADER Flag_visible,"ud/mod",UDSLASHMOD,PFA_UDSLASHMOD
  24 0932 00BF     	>>  .p2align 2
  24              	>> VE_UDSLASHMOD:
  24 0934 1C090000 	>>  .word 99b
  24 0938 00000000 	>> 99:.word Flag_visible
  24 093c 06       	>>  .byte 8f-7f
  24 093d 75642F6D 	>> 7:.ascii "ud/mod"
  24      6F64
  24 0943 00       	>> 8:.p2align 2
  24 0944 48090000 	>>  XT_UDSLASHMOD:.word PFA_UDSLASHMOD
  24              	>>  PFA_UDSLASHMOD:
  25              	         @ Unsigned divide 64/64 = 64 remainder 64
  26              	         @ ( ud1 ud2 -- ud ud)
  27              	         @ ( 1L 1H 2L tos: 2H -- Rem-L Rem-H Quot-L tos: Quot-H )
  28              	@------------------------------------------------------------------------------
  29 0948 00F001F8 	  bl ud_slash_mod
  30              	NEXT
  30 094c A1E7     	>  b DO_NEXT
  30              	>  .ltorg
  31              	
  32              	ud_slash_mod:
  33 094e 30B4     	   push {r4, r5}
  34              	
  35              	   @ ( DividendL DividendH DivisorL DivisorH -- RemainderL RemainderH ResultL ResultH )
  36              	   @   8         4         0        tos      -- 8          4          0       tos
  37              	
  38              	
  39              	   @ Shift-High Shift-Low Dividend-High Dividend-Low
  40              	   @         r3        r2            r1           r0
  41              	
  42 0950 0023     	   movs r3, #0
  43 0952 0022     	   movs r2, #0
  44 0954 7968     	   ldr  r1, [psp, #4]
  45 0956 B868     	   ldr  r0, [psp, #8]
  46              	
  47              	   @ Divisor-High Divisor-Low
  48              	   @          r5           r4
  49              	
ARM GAS  lp-stellaris.asm 			page 38


  50              	ud_slash_mod_internal:
  51 0958 3500     	   movs r5, tos
  52 095a 3C68     	   ldr  r4, [psp, #0]
  53              	
  54              	   @ For this long division, we need 64 individual division steps.
  55 095c 4FF04006 	   mov tos, #64
  56              	
  57              	3:
  58              	    @ Shift the long chain of four registers.
  59 0960 4000     	    lsls r0, #1
  60 0962 4941     	    adcs r1, r1
  61 0964 5241     	    adcs r2, r2
  62 0966 5B41     	    adcs r3, r3
  63              	
  64              	    @ Compare Divisor with top two registers
  65 0968 AB42     	    cmp r3, r5 @ Check high part first
  66 096a 02D8     	    bhi 1f
  67 096c 04D3     	    blo 2f
  68              	
  69 096e A242     	    cmp r2, r4 @ High part is identical. Low part decides.
  70 0970 02D3     	    blo 2f
  71              	
  72              	    @ Subtract Divisor from two top registers
  73 0972 121B     	1:  subs r2, r4 @ Subtract low part
  74 0974 AB41     	    sbcs r3, r5 @ Subtract high part with carry
  75              	
  76              	    @ Insert a bit into Result which is inside LSB of the long register.
  77 0976 0130     	    adds r0, #1
  78              	2:
  79              	
  80 0978 013E     	   subs tos, #1
  81 097a F1D1     	   bne 3b
  82              	
  83              	   @ Now place all values to their destination.
  84 097c 0E00     	   movs tos, r1       @ Result-High
  85 097e 3860     	   str  r0, [psp, #0] @ Result-Low
  86 0980 7B60     	   str  r3, [psp, #4] @ Remainder-High
  87 0982 BA60     	   str  r2, [psp, #8] @ Remainder-Low
  88              	
  89 0984 30BC     	   pop {r4, r5}
  90 0986 7047     	   bx lr
  91              	
  92              	@------------------------------------------------------------------------------
  93              	  CODEWORD  "d/mod", DSLASHMOD
  93              	>  HEADER Flag_visible,"d/mod",DSLASHMOD,PFA_DSLASHMOD
  93              	>>  .p2align 2
  93              	>> VE_DSLASHMOD:
  93 0988 38090000 	>>  .word 99b
  93 098c 00000000 	>> 99:.word Flag_visible
  93 0990 05       	>>  .byte 8f-7f
  93 0991 642F6D6F 	>> 7:.ascii "d/mod"
  93      64
  93 0996 00BF     	>> 8:.p2align 2
  93 0998 9C090000 	>>  XT_DSLASHMOD:.word PFA_DSLASHMOD
  93              	>>  PFA_DSLASHMOD:
  94              	              @ Signed symmetric divide 64/64 = 64 remainder 64
  95              	              @ ( d1 d2 -- d d )
ARM GAS  lp-stellaris.asm 			page 39


  96 099c 00F001F8 	  bl d_slash_mod
  97              	NEXT
  97 09a0 77E7     	>  b DO_NEXT
  97              	>  .ltorg
  98              	
  99              	d_slash_mod:  @ ( 1L 1H 2L tos: 2H -- Rem-L Rem-H Quot-L tos: Quot-H )
 100              	@------------------------------------------------------------------------------
 101              	  @ Check Divisor
 102 09a2 00B5     	  push {lr}
 103 09a4 F017     	  movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 104 09a6 19D0     	  beq 2f
 105              	    @ ? / -
 106 09a8 FFF767FF 	    bl dnegate
 107 09ac FFF7A3FE 	    bl dswap
 108 09b0 F017     	    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 109 09b2 0CD0     	    beq 1f
 110              	    @ - / -
 111 09b4 FFF761FF 	    bl dnegate
 112 09b8 FFF79DFE 	    bl dswap
 113 09bc FFF7C7FF 	    bl ud_slash_mod
 114              	
 115 09c0 FFF799FE 	    bl dswap
 116 09c4 FFF759FF 	    bl dnegate @ Negative remainder
 117 09c8 FFF795FE 	    bl dswap
 118 09cc 00BD     	    pop {pc}
 119              	
 120              	1:  @ + / -
 121 09ce FFF792FE 	    bl dswap
 122 09d2 FFF7BCFF 	    bl ud_slash_mod
 123 09d6 FFF750FF 	    bl dnegate  @ Negative result
 124 09da 00BD     	    pop {pc}
 125              	
 126              	2:  @ ? / +
 127 09dc FFF78BFE 	    bl dswap
 128 09e0 F017     	    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 129 09e2 0ED0     	    beq 3f
 130              	    @ - / +
 131 09e4 FFF749FF 	    bl dnegate
 132 09e8 FFF785FE 	    bl dswap
 133              	
 134 09ec FFF7AFFF 	    bl ud_slash_mod
 135              	
 136 09f0 FFF743FF 	    bl dnegate @ Negative result
 137 09f4 FFF77FFE 	    bl dswap
 138 09f8 FFF73FFF 	    bl dnegate @ Negative remainder
 139 09fc FFF77BFE 	    bl dswap
 140 0a00 00BD     	    pop {pc}
 141              	
 142              	3:  @ + / +
 143 0a02 FFF778FE 	    bl dswap
 144 0a06 FFF7A2FF 	    bl ud_slash_mod
 145 0a0a 00BD     	    pop {pc}
 146              	
 147              	@------------------------------------------------------------------------------
 148              	  CODEWORD  "d/", DSLASH
 148              	>  HEADER Flag_visible,"d/",DSLASH,PFA_DSLASH
 148              	>>  .p2align 2
ARM GAS  lp-stellaris.asm 			page 40


 148              	>> VE_DSLASH:
 148 0a0c 8C090000 	>>  .word 99b
 148 0a10 00000000 	>> 99:.word Flag_visible
 148 0a14 02       	>>  .byte 8f-7f
 148 0a15 642F     	>> 7:.ascii "d/"
 148 0a17 00       	>> 8:.p2align 2
 148 0a18 1C0A0000 	>>  XT_DSLASH:.word PFA_DSLASH
 148              	>>  PFA_DSLASH:
 149              	@------------------------------------------------------------------------------
 150 0a1c FFF7C1FF 	  bl d_slash_mod
 151 0a20 07CF     	  ldm psp!, {r0, r1, r2}
 152 0a22 043F     	  subs psp, #4
 153 0a24 3860     	  str r0, [psp]
 154              	  NEXT
 154 0a26 34E7     	>  b DO_NEXT
 154              	>  .ltorg
 155              	@------------------------------------------------------------------------------
 156              	@ --- Double memory ---
 157              	@------------------------------------------------------------------------------
 158              	
 159              	@------------------------------------------------------------------------------
 160              	  CODEWORD  "2!",2STORE @ Store ( d addr -- )
 160              	>  HEADER Flag_visible,"2!",2STORE,PFA_2STORE
 160              	>>  .p2align 2
 160              	>> VE_2STORE:
 160 0a28 100A0000 	>>  .word 99b
 160 0a2c 00000000 	>> 99:.word Flag_visible
 160 0a30 02       	>>  .byte 8f-7f
 160 0a31 3221     	>> 7:.ascii "2!"
 160 0a33 00       	>> 8:.p2align 2
 160 0a34 380A0000 	>>  XT_2STORE:.word PFA_2STORE
 160              	>>  PFA_2STORE:
 161              	@------------------------------------------------------------------------------
 162 0a38 06CF     	  ldmia psp!, {r1, r2}
 163 0a3a 3160     	  str r1, [tos]
 164 0a3c 7260     	  str r2, [tos, #4]
 165 0a3e 40CF     	  ldm psp!, {tos}
 166              	NEXT
 166 0a40 27E7     	>  b DO_NEXT
 166              	>  .ltorg
 167              	
 168              	@------------------------------------------------------------------------------
 169              	  CODEWORD  "2@",2FETCH @ Fetch ( addr -- d )
 169              	>  HEADER Flag_visible,"2@",2FETCH,PFA_2FETCH
 169 0a42 00BF     	>>  .p2align 2
 169              	>> VE_2FETCH:
 169 0a44 2C0A0000 	>>  .word 99b
 169 0a48 00000000 	>> 99:.word Flag_visible
 169 0a4c 02       	>>  .byte 8f-7f
 169 0a4d 3240     	>> 7:.ascii "2@"
 169 0a4f 00       	>> 8:.p2align 2
 169 0a50 540A0000 	>>  XT_2FETCH:.word PFA_2FETCH
 169              	>>  PFA_2FETCH:
 170              	@------------------------------------------------------------------------------
 171 0a54 043F     	  subs psp, #4
 172 0a56 7068     	  ldr r0, [tos, #4]
 173 0a58 3860     	  str r0, [psp]
ARM GAS  lp-stellaris.asm 			page 41


 174 0a5a 3668     	  ldr tos, [tos]
 175              	NEXT
 175 0a5c 19E7     	>  b DO_NEXT
 175              	>  .ltorg
 176              	
 177              	@------------------------------------------------------------------------------
 178              	@ --- Double comparisions ---
 179              	@------------------------------------------------------------------------------
 180              	
 181              	@------------------------------------------------------------------------------
 182              	  CODEWORD  "d<", DLESS
 182              	>  HEADER Flag_visible,"d<",DLESS,PFA_DLESS
 182 0a5e 00BF     	>>  .p2align 2
 182              	>> VE_DLESS:
 182 0a60 480A0000 	>>  .word 99b
 182 0a64 00000000 	>> 99:.word Flag_visible
 182 0a68 02       	>>  .byte 8f-7f
 182 0a69 643C     	>> 7:.ascii "d<"
 182 0a6b 00       	>> 8:.p2align 2
 182 0a6c 700A0000 	>>  XT_DLESS:.word PFA_DLESS
 182              	>>  PFA_DLESS:
 183              	  @ ( 2L 2H 1L 1H -- Flag )
 184              	  @   8y 4x 0w tos
 185              	@------------------------------------------------------------------------------
 186 0a70 07CF     	  ldm psp!, {r0, r1, r2}
 187              	
 188              	  @ Check High:
 189 0a72 8E42     	  cmp tos, r1
 190 0a74 04DC     	  bgt 2f @ True
 191 0a76 01D1     	  bne 1f @ False - Not bigger, not equal --> Lower.
 192              	  @ Fall through if high part is equal
 193              	
 194              	  @ Check Low:
 195 0a78 9042     	  cmp r0, r2
 196 0a7a 01DC     	  bgt 2f
 197              	
 198              	@ False:
 199 0a7c 0026     	1:movs tos, #0
 200              	NEXT
 200 0a7e 08E7     	>  b DO_NEXT
 200              	>  .ltorg
 201              	
 202              	@ True
 203 0a80 0026     	2:movs tos, #0
 204 0a82 F643     	  mvns tos, tos
 205              	NEXT
 205 0a84 05E7     	>  b DO_NEXT
 205              	>  .ltorg
 206              	
 207              	@------------------------------------------------------------------------------
 208              	  CODEWORD  "d>", DGREATER
 208              	>  HEADER Flag_visible,"d>",DGREATER,PFA_DGREATER
 208 0a86 00BF     	>>  .p2align 2
 208              	>> VE_DGREATER:
 208 0a88 640A0000 	>>  .word 99b
 208 0a8c 00000000 	>> 99:.word Flag_visible
 208 0a90 02       	>>  .byte 8f-7f
ARM GAS  lp-stellaris.asm 			page 42


 208 0a91 643E     	>> 7:.ascii "d>"
 208 0a93 00       	>> 8:.p2align 2
 208 0a94 980A0000 	>>  XT_DGREATER:.word PFA_DGREATER
 208              	>>  PFA_DGREATER:
 209              	  @ ( 2L 2H 1L 1H -- Flag )
 210              	  @   8y 4x 0w tos
 211              	@------------------------------------------------------------------------------
 212 0a98 07CF     	  ldm psp!, {r0, r1, r2}
 213              	
 214              	  @ Check High:
 215 0a9a B142     	  cmp r1, tos
 216 0a9c 04DC     	  bgt 2f @ True
 217 0a9e 01D1     	  bne 1f @ False - Not bigger, not equal --> Lower.
 218              	  @ Fall through if high part is equal
 219              	
 220              	  @ Check Low:
 221 0aa0 8242     	  cmp r2, r0
 222 0aa2 01DC     	  bgt 2f
 223              	
 224              	@ False:
 225 0aa4 0026     	1:movs tos, #0
 226              	NEXT
 226 0aa6 F4E6     	>  b DO_NEXT
 226              	>  .ltorg
 227              	
 228              	@ True
 229 0aa8 0026     	2:movs tos, #0
 230 0aaa F643     	  mvns tos, tos
 231              	NEXT
 231 0aac F1E6     	>  b DO_NEXT
 231              	>  .ltorg
 232              	
 233              	@------------------------------------------------------------------------------
 234              	  CODEWORD  "d0<", DZEROLESS @ ( 1L 1H -- Flag ) Is double number negative ?
 234              	>  HEADER Flag_visible,"d0<",DZEROLESS,PFA_DZEROLESS
 234 0aae 00BF     	>>  .p2align 2
 234              	>> VE_DZEROLESS:
 234 0ab0 8C0A0000 	>>  .word 99b
 234 0ab4 00000000 	>> 99:.word Flag_visible
 234 0ab8 03       	>>  .byte 8f-7f
 234 0ab9 64303C   	>> 7:.ascii "d0<"
 234              	>> 8:.p2align 2
 234 0abc C00A0000 	>>  XT_DZEROLESS:.word PFA_DZEROLESS
 234              	>>  PFA_DZEROLESS:
 235              	@------------------------------------------------------------------------------
 236 0ac0 0437     	  adds psp, #4
 237 0ac2 F617     	  movs TOS, TOS, asr #31    @ Turn MSB into 0xffffffff or 0x00000000
 238              	NEXT
 238 0ac4 E5E6     	>  b DO_NEXT
 238              	>  .ltorg
 239              	
 240              	@------------------------------------------------------------------------------
 241              	  CODEWORD  "d0=", DZEROEQUAL @ ( 1L 1H -- Flag )
 241              	>  HEADER Flag_visible,"d0=",DZEROEQUAL,PFA_DZEROEQUAL
 241 0ac6 00BF     	>>  .p2align 2
 241              	>> VE_DZEROEQUAL:
 241 0ac8 B40A0000 	>>  .word 99b
ARM GAS  lp-stellaris.asm 			page 43


 241 0acc 00000000 	>> 99:.word Flag_visible
 241 0ad0 03       	>>  .byte 8f-7f
 241 0ad1 64303D   	>> 7:.ascii "d0="
 241              	>> 8:.p2align 2
 241 0ad4 D80A0000 	>>  XT_DZEROEQUAL:.word PFA_DZEROEQUAL
 241              	>>  PFA_DZEROEQUAL:
 242              	@------------------------------------------------------------------------------
 243 0ad8 01CF     	  ldm psp!, {r0}
 244 0ada 0028     	  cmp r0, #0
 245 0adc 01D0     	  beq 1f
 246 0ade 0026     	    movs tos, #0
 247              	NEXT
 247 0ae0 D7E6     	>  b DO_NEXT
 247              	>  .ltorg
 248              	
 249 0ae2 013E     	1:subs tos, #1
 250 0ae4 B641     	  sbcs tos, tos
 251              	NEXT
 251 0ae6 D4E6     	>  b DO_NEXT
 251              	>  .ltorg
 252              	
 253              	@------------------------------------------------------------------------------
 254              	  CODEWORD  "d=", DEQUAL @ ( 1L 1H 2L 2H -- Flag )
 254              	>  HEADER Flag_visible,"d=",DEQUAL,PFA_DEQUAL
 254              	>>  .p2align 2
 254              	>> VE_DEQUAL:
 254 0ae8 CC0A0000 	>>  .word 99b
 254 0aec 00000000 	>> 99:.word Flag_visible
 254 0af0 02       	>>  .byte 8f-7f
 254 0af1 643D     	>> 7:.ascii "d="
 254 0af3 00       	>> 8:.p2align 2
 254 0af4 F80A0000 	>>  XT_DEQUAL:.word PFA_DEQUAL
 254              	>>  PFA_DEQUAL:
 255              	@------------------------------------------------------------------------------
 256 0af8 07CF     	  ldm psp!, {r0, r1, r2}
 257              	
 258 0afa 9042     	  cmp r0, r2
 259 0afc 01D0     	  beq 1f
 260 0afe 0026     	    movs tos, #0
 261              	NEXT
 261 0b00 C7E6     	>  b DO_NEXT
 261              	>  .ltorg
 262              	
 263 0b02 761A     	1:subs tos, r1       @ Z=equality; if equal, TOS=0
 264 0b04 013E     	  subs tos, #1      @ Wenn es Null war, gibt es jetzt einen Überlauf
 265 0b06 B641     	  sbcs tos, tos
 266              	NEXT
 266 0b08 C3E6     	>  b DO_NEXT
 266              	>  .ltorg
 267              	
 268              	CODEWORD  "s>d", S2D
 268              	>  HEADER Flag_visible,"s>d",S2D,PFA_S2D
 268 0b0a 00BF     	>>  .p2align 2
 268              	>> VE_S2D:
 268 0b0c EC0A0000 	>>  .word 99b
 268 0b10 00000000 	>> 99:.word Flag_visible
 268 0b14 03       	>>  .byte 8f-7f
ARM GAS  lp-stellaris.asm 			page 44


 268 0b15 733E64   	>> 7:.ascii "s>d"
 268              	>> 8:.p2align 2
 268 0b18 1C0B0000 	>>  XT_S2D:.word PFA_S2D
 268              	>>  PFA_S2D:
 269              	  savetos
 269 0b1c 47F8046D 	>  str tos,[psp,#-4]!
 270 0b20 F617     	  movs tos, tos, asr #31
 271              	NEXT
 271 0b22 B6E6     	>  b DO_NEXT
 271              	>  .ltorg
  66              	.include "words/base.s"
   1              	  USER "base", BASE, USER_BASE
   1              	>  HEADER Flag_visible|Flag_variable,"base",BASE,PFA_DOUSER
   1              	>>  .p2align 2
   1              	>> VE_BASE:
   1 0b24 100B0000 	>>  .word 99b
   1 0b28 01010000 	>> 99:.word Flag_visible|Flag_variable
   1 0b2c 04       	>>  .byte 8f-7f
   1 0b2d 62617365 	>> 7:.ascii "base"
   1 0b31 0000BF   	>> 8:.p2align 2
   1 0b34 5E0F0000 	>>  XT_BASE:.word PFA_DOUSER
   1              	>>  PFA_BASE:
   1 0b38 18000000 	>  .word USER_BASE
   1              	>  .equ USER_BASE,USER_BASE
  67              	.include "words/plus.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "+", PLUS @ ( x1 x2 -- x1+x2 )
   2              	>  HEADER Flag_visible,"+",PLUS,PFA_PLUS
   2              	>>  .p2align 2
   2              	>> VE_PLUS:
   2 0b3c 280B0000 	>>  .word 99b
   2 0b40 00000000 	>> 99:.word Flag_visible
   2 0b44 01       	>>  .byte 8f-7f
   2 0b45 2B       	>> 7:.ascii "+"
   2 0b46 00BF     	>> 8:.p2align 2
   2 0b48 4C0B0000 	>>  XT_PLUS:.word PFA_PLUS
   2              	>>  PFA_PLUS:
   3              	@ -----------------------------------------------------------------------------
   4 0b4c 01CF     	  ldm psp!, {r0}
   5 0b4e 3618     	  adds tos, r0
   6              	  NEXT
   6 0b50 9FE6     	>  b DO_NEXT
   6              	>  .ltorg
  68              	.include "words/minus.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "-", MINUS @ ( x1 x2 -- x1-x2 )
   2              	>  HEADER Flag_visible,"-",MINUS,PFA_MINUS
   2 0b52 00BF     	>>  .p2align 2
   2              	>> VE_MINUS:
   2 0b54 400B0000 	>>  .word 99b
   2 0b58 00000000 	>> 99:.word Flag_visible
   2 0b5c 01       	>>  .byte 8f-7f
   2 0b5d 2D       	>> 7:.ascii "-"
   2 0b5e 00BF     	>> 8:.p2align 2
   2 0b60 640B0000 	>>  XT_MINUS:.word PFA_MINUS
   2              	>>  PFA_MINUS:
   3              	                      @ Subtracts x2 from x1.
ARM GAS  lp-stellaris.asm 			page 45


   4              	@ -----------------------------------------------------------------------------
   5 0b64 01CF     	  ldm psp!, {r0}
   6 0b66 861B     	  subs tos, r0, tos
   7              	NEXT
   7 0b68 93E6     	>  b DO_NEXT
   7              	>  .ltorg
  69              	.include "words/1-plus.s"
   1              	CODEWORD "1+", 1PLUS @ ( u -- u+1 )
   1              	>  HEADER Flag_visible,"1+",1PLUS,PFA_1PLUS
   1 0b6a 00BF     	>>  .p2align 2
   1              	>> VE_1PLUS:
   1 0b6c 580B0000 	>>  .word 99b
   1 0b70 00000000 	>> 99:.word Flag_visible
   1 0b74 02       	>>  .byte 8f-7f
   1 0b75 312B     	>> 7:.ascii "1+"
   1 0b77 00       	>> 8:.p2align 2
   1 0b78 7C0B0000 	>>  XT_1PLUS:.word PFA_1PLUS
   1              	>>  PFA_1PLUS:
   2 0b7c 06F10106 	  add tos, #1
   3              	NEXT
   3 0b80 87E6     	>  b DO_NEXT
   3              	>  .ltorg
  70              	.include "words/1-minus.s"
   1              	CODEWORD "1-", 1MINUS @ ( u -- u-1 )
   1              	>  HEADER Flag_visible,"1-",1MINUS,PFA_1MINUS
   1 0b82 00BF     	>>  .p2align 2
   1              	>> VE_1MINUS:
   1 0b84 700B0000 	>>  .word 99b
   1 0b88 00000000 	>> 99:.word Flag_visible
   1 0b8c 02       	>>  .byte 8f-7f
   1 0b8d 312D     	>> 7:.ascii "1-"
   1 0b8f 00       	>> 8:.p2align 2
   1 0b90 940B0000 	>>  XT_1MINUS:.word PFA_1MINUS
   1              	>>  PFA_1MINUS:
   2 0b94 A6F10106 	  sub tos, #1
   3              	NEXT
   3 0b98 7BE6     	>  b DO_NEXT
   3              	>  .ltorg
  71              	.include "words/2-plus.s"
   1              	CODEWORD "2+", 2PLUS @ ( u -- u+1 )
   1              	>  HEADER Flag_visible,"2+",2PLUS,PFA_2PLUS
   1 0b9a 00BF     	>>  .p2align 2
   1              	>> VE_2PLUS:
   1 0b9c 880B0000 	>>  .word 99b
   1 0ba0 00000000 	>> 99:.word Flag_visible
   1 0ba4 02       	>>  .byte 8f-7f
   1 0ba5 322B     	>> 7:.ascii "2+"
   1 0ba7 00       	>> 8:.p2align 2
   1 0ba8 AC0B0000 	>>  XT_2PLUS:.word PFA_2PLUS
   1              	>>  PFA_2PLUS:
   2 0bac 06F10206 	  add tos, #2
   3              	NEXT
   3 0bb0 6FE6     	>  b DO_NEXT
   3              	>  .ltorg
  72              	.include "words/2-minus.s"
   1              	CODEWORD "2-", 2MINUS @ ( u -- u-1 )
   1              	>  HEADER Flag_visible,"2-",2MINUS,PFA_2MINUS
ARM GAS  lp-stellaris.asm 			page 46


   1 0bb2 00BF     	>>  .p2align 2
   1              	>> VE_2MINUS:
   1 0bb4 A00B0000 	>>  .word 99b
   1 0bb8 00000000 	>> 99:.word Flag_visible
   1 0bbc 02       	>>  .byte 8f-7f
   1 0bbd 322D     	>> 7:.ascii "2-"
   1 0bbf 00       	>> 8:.p2align 2
   1 0bc0 C40B0000 	>>  XT_2MINUS:.word PFA_2MINUS
   1              	>>  PFA_2MINUS:
   2 0bc4 A6F10206 	  sub tos, #2
   3              	NEXT
   3 0bc8 63E6     	>  b DO_NEXT
   3              	>  .ltorg
  73              	.include "words/cell-plus.s"
   1              	CODEWORD "cell+", CELLPLUS @ ( x -- x+4 ) 
   1              	>  HEADER Flag_visible,"cell+",CELLPLUS,PFA_CELLPLUS
   1 0bca 00BF     	>>  .p2align 2
   1              	>> VE_CELLPLUS:
   1 0bcc B80B0000 	>>  .word 99b
   1 0bd0 00000000 	>> 99:.word Flag_visible
   1 0bd4 05       	>>  .byte 8f-7f
   1 0bd5 63656C6C 	>> 7:.ascii "cell+"
   1      2B
   1 0bda 00BF     	>> 8:.p2align 2
   1 0bdc E00B0000 	>>  XT_CELLPLUS:.word PFA_CELLPLUS
   1              	>>  PFA_CELLPLUS:
   2 0be0 0436     	  adds tos, #4
   3              	NEXT
   3 0be2 56E6     	>  b DO_NEXT
   3              	>  .ltorg
  74              	.include "words/cells.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "cells", CELLS @ ( x -- 4*x ) 
   2              	>  HEADER Flag_visible,"cells",CELLS,PFA_CELLS
   2              	>>  .p2align 2
   2              	>> VE_CELLS:
   2 0be4 D00B0000 	>>  .word 99b
   2 0be8 00000000 	>> 99:.word Flag_visible
   2 0bec 05       	>>  .byte 8f-7f
   2 0bed 63656C6C 	>> 7:.ascii "cells"
   2      73
   2 0bf2 00BF     	>> 8:.p2align 2
   2 0bf4 F80B0000 	>>  XT_CELLS:.word PFA_CELLS
   2              	>>  PFA_CELLS:
   3              	@ -----------------------------------------------------------------------------
   4 0bf8 B600     	  lsls tos, #2
   5              	NEXT
   5 0bfa 4AE6     	>  b DO_NEXT
   5              	>  .ltorg
  75              	
  76              	.include "words/state.s"
   1              	
   2              	VARIABLE "state", STATE
   2              	>  HEADER Flag_visible|Flag_variable,"state",STATE,PFA_DOVARIABLE
   2              	>>  .p2align 2
   2              	>> VE_STATE:
   2 0bfc E80B0000 	>>  .word 99b
ARM GAS  lp-stellaris.asm 			page 47


   2 0c00 01010000 	>> 99:.word Flag_visible|Flag_variable
   2 0c04 05       	>>  .byte 8f-7f
   2 0c05 73746174 	>> 7:.ascii "state"
   2      65
   2 0c0a 00BF     	>> 8:.p2align 2
   2 0c0c 260F0000 	>>  XT_STATE:.word PFA_DOVARIABLE
   2              	>>  PFA_STATE:
   2 0c10 08020020 	>  .word rampointer
   2              	>  .set rampointer,rampointer+cellsize
  77              	.include "words/tib.s"
   1              	
   2              	VARIABLE "#tib", NUMBERTIB
   2              	>  HEADER Flag_visible|Flag_variable,"#tib",NUMBERTIB,PFA_DOVARIABLE
   2              	>>  .p2align 2
   2              	>> VE_NUMBERTIB:
   2 0c14 000C0000 	>>  .word 99b
   2 0c18 01010000 	>> 99:.word Flag_visible|Flag_variable
   2 0c1c 04       	>>  .byte 8f-7f
   2 0c1d 23746962 	>> 7:.ascii "#tib"
   2 0c21 0000BF   	>> 8:.p2align 2
   2 0c24 260F0000 	>>  XT_NUMBERTIB:.word PFA_DOVARIABLE
   2              	>>  PFA_NUMBERTIB:
   2 0c28 0C020020 	>  .word rampointer
   2              	>  .set rampointer,rampointer+cellsize
   3              	
   4              	CODEWORD "tib", TIB 
   4              	>  HEADER Flag_visible,"tib",TIB,PFA_TIB
   4              	>>  .p2align 2
   4              	>> VE_TIB:
   4 0c2c 180C0000 	>>  .word 99b
   4 0c30 00000000 	>> 99:.word Flag_visible
   4 0c34 03       	>>  .byte 8f-7f
   4 0c35 746962   	>> 7:.ascii "tib"
   4              	>> 8:.p2align 2
   4 0c38 3C0C0000 	>>  XT_TIB:.word PFA_TIB
   4              	>>  PFA_TIB:
   5              	  savetos
   5 0c3c 47F8046D 	>  str tos,[psp,#-4]!
   6 0c40 004E     	  ldr tos, =RAM_lower_refill_buf
   7              	NEXT
   7 0c42 26E6     	>  b DO_NEXT
   7 0c44 88010020 	>  .ltorg
  78              	.include "words/cold.s"
   1              	
   2              	CODEWORD "cold", COLD
   2              	>  HEADER Flag_visible,"cold",COLD,PFA_COLD
   2              	>>  .p2align 2
   2              	>> VE_COLD:
   2 0c48 300C0000 	>>  .word 99b
   2 0c4c 00000000 	>> 99:.word Flag_visible
   2 0c50 04       	>>  .byte 8f-7f
   2 0c51 636F6C64 	>> 7:.ascii "cold"
   2 0c55 0000BF   	>> 8:.p2align 2
   2 0c58 5C0C0000 	>>  XT_COLD:.word PFA_COLD
   2              	>>  PFA_COLD:
   3              	
   4 0c5c 6D48     	   ldr r0, =RAM_upper_returnstack
ARM GAS  lp-stellaris.asm 			page 48


   5 0c5e 8546     	   mov sp, r0
   6              	
   7 0c60 6D4F     	   ldr psp, =RAM_upper_datastack
   8              	
   9 0c62 DFF8B881 	   ldr FORTHW, =XT_WARM
  10              	
  11 0c66 16E6     	  b DO_EXECUTE
  79              	.include "words/quit.s"
   1              	COLON "quit", QUIT
   1              	>  HEADER Flag_visible,"quit",QUIT,DOCOLON
   1              	>>  .p2align 2
   1              	>> VE_QUIT:
   1 0c68 4C0C0000 	>>  .word 99b
   1 0c6c 00000000 	>> 99:.word Flag_visible
   1 0c70 04       	>>  .byte 8f-7f
   1 0c71 71756974 	>> 7:.ascii "quit"
   1 0c75 0000BF   	>> 8:.p2align 2
   1 0c78 8C080000 	>>  XT_QUIT:.word DOCOLON
   1              	>>  PFA_QUIT:
   2              	
   3 0c7c F82A0000 	    .word XT_LP0,XT_LP,XT_STORE
   3      182B0000 
   3      80020000 
   4              	#    .dw XT_SP0
   5              	#    .dw XT_SP_STORE
   6              	#    .dw XT_RP0
   7              	#    .dw XT_RP_STORE
   8 0c88 E8110000 	    .word XT_LBRACKET
   9              	
  10              	PFA_QUIT2:
  11 0c8c 0C0C0000 	    .word XT_STATE, XT_FETCH,XT_ZEROEQUAL
  11      6C020000 
  11      40050000 
  12 0c98 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_QUIT4
  12      A40C0000 
  13 0ca0 3C180000 	    .word XT_PROMPTREADY
  14              	PFA_QUIT4:
  15 0ca4 80150000 	    .word XT_REFILL
  16 0ca8 CC170000 	    .word XT_PROMPTINPUT
  17 0cac BE0F0000 	    .word XT_DOCONDBRANCH,PFA_QUIT3
  17      F00C0000 
  18 0cb4 D20F0000 	    .word XT_DOLITERAL
  19 0cb8 04260000 	    .word XT_INTERPRET
  20 0cbc 90180000 	    .word XT_CATCH
  21 0cc0 30010000 	    .word XT_QDUP
  22 0cc4 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_QUIT3
  22      F00C0000 
  23 0ccc C8000000 		.word XT_DUP
  24 0cd0 D20F0000 		.word XT_DOLITERAL, -2, XT_LESS
  24      FEFFFFFF 
  24      C8050000 
  25 0cdc BE0F0000 		.word XT_DOCONDBRANCH, PFA_QUIT5
  25      E80C0000 
  26 0ce4 64170000 		.word XT_PROMPTERROR
  27              	PFA_QUIT5:
  28 0ce8 B40F0000 		.word XT_DOBRANCH, PFA_QUIT
  28      7C0C0000 
ARM GAS  lp-stellaris.asm 			page 49


  29              	PFA_QUIT3:
  30 0cf0 F8170000 	    .word XT_PROMPTOK
  31 0cf4 B40F0000 	    .word XT_DOBRANCH,PFA_QUIT2
  31      8C0C0000 
  32              	
  80              	.include "words/execute.s"
   1              	
   2              	CODEWORD "execute", EXECUTE
   2              	>  HEADER Flag_visible,"execute",EXECUTE,PFA_EXECUTE
   2              	>>  .p2align 2
   2              	>> VE_EXECUTE:
   2 0cfc 6C0C0000 	>>  .word 99b
   2 0d00 00000000 	>> 99:.word Flag_visible
   2 0d04 07       	>>  .byte 8f-7f
   2 0d05 65786563 	>> 7:.ascii "execute"
   2      757465
   2              	>> 8:.p2align 2
   2 0d0c 100D0000 	>>  XT_EXECUTE:.word PFA_EXECUTE
   2              	>>  PFA_EXECUTE:
   3 0d10 B046     	    mov FORTHW, tos
   4              	    loadtos
   4 0d12 57F8046B 	>  ldr tos,[psp],#4
   5 0d16 BEE5     	    b DO_EXECUTE
  81              	
  82              	.include "words/key.s"
   1              	  DEFER "key", KEY, XT_KEY_PAUSE
   1              	>  HEADER Flag_visible|Flag_defer|Flag_init,"key",KEY,PFA_DODEFER
   1              	>>  .p2align 2
   1              	>> VE_KEY:
   1 0d18 000D0000 	>>  .word 99b
   1 0d1c C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   1 0d20 03       	>>  .byte 8f-7f
   1 0d21 6B6579   	>> 7:.ascii "key"
   1              	>> 8:.p2align 2
   1 0d24 500F0000 	>>  XT_KEY:.word PFA_DODEFER
   1              	>>  PFA_KEY:
   1 0d28 10020020 	>  .word rampointer
   1              	>  .equ DEFER_RAM_KEY,rampointer
   1              	>  .set rampointer,rampointer+cellsize
   1 0d2c 380D0000 	>  .word XT_KEY_PAUSE
   1 0d30 6C020000 	>  .word XT_FETCH
   1 0d34 80020000 	>  .word XT_STORE
   2              	
   3              	NONAME KEY_PAUSE
   3 0d38 8C080000 	>  XT_KEY_PAUSE:.word DOCOLON
   3              	>  PFA_KEY_PAUSE:
   4 0d3c EC0D0000 	    .word XT_PAUSE,XT_SERIAL_KEYQ, XT_DOCONDBRANCH, PFA_KEY_PAUSE
   4      A03C0000 
   4      BE0F0000 
   4      3C0D0000 
   5 0d4c 743C0000 	    .word XT_SERIAL_KEY
   6 0d50 7C000000 	    .word XT_EXIT
  83              	.include "words/keyq.s"
   1              	  DEFER "key?",KEYQ, XT_SERIAL_KEYQ
   1              	>  HEADER Flag_visible|Flag_defer|Flag_init,"key?",KEYQ,PFA_DODEFER
   1              	>>  .p2align 2
   1              	>> VE_KEYQ:
ARM GAS  lp-stellaris.asm 			page 50


   1 0d54 1C0D0000 	>>  .word 99b
   1 0d58 C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   1 0d5c 04       	>>  .byte 8f-7f
   1 0d5d 6B65793F 	>> 7:.ascii "key?"
   1 0d61 0000BF   	>> 8:.p2align 2
   1 0d64 500F0000 	>>  XT_KEYQ:.word PFA_DODEFER
   1              	>>  PFA_KEYQ:
   1 0d68 14020020 	>  .word rampointer
   1              	>  .equ DEFER_RAM_KEYQ,rampointer
   1              	>  .set rampointer,rampointer+cellsize
   1 0d6c A03C0000 	>  .word XT_SERIAL_KEYQ
   1 0d70 6C020000 	>  .word XT_FETCH
   1 0d74 80020000 	>  .word XT_STORE
   2              	
  84              	.include "words/emit.s"
   1              	  DEFER "emit", EMIT, XT_EMIT_PAUSE
   1              	>  HEADER Flag_visible|Flag_defer|Flag_init,"emit",EMIT,PFA_DODEFER
   1              	>>  .p2align 2
   1              	>> VE_EMIT:
   1 0d78 580D0000 	>>  .word 99b
   1 0d7c C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   1 0d80 04       	>>  .byte 8f-7f
   1 0d81 656D6974 	>> 7:.ascii "emit"
   1 0d85 0000BF   	>> 8:.p2align 2
   1 0d88 500F0000 	>>  XT_EMIT:.word PFA_DODEFER
   1              	>>  PFA_EMIT:
   1 0d8c 18020020 	>  .word rampointer
   1              	>  .equ DEFER_RAM_EMIT,rampointer
   1              	>  .set rampointer,rampointer+cellsize
   1 0d90 9C0D0000 	>  .word XT_EMIT_PAUSE
   1 0d94 6C020000 	>  .word XT_FETCH
   1 0d98 80020000 	>  .word XT_STORE
   2              	
   3              	NONAME EMIT_PAUSE
   3 0d9c 8C080000 	>  XT_EMIT_PAUSE:.word DOCOLON
   3              	>  PFA_EMIT_PAUSE:
   4 0da0 EC0D0000 	    .word XT_PAUSE,XT_SERIAL_EMITQ, XT_DOCONDBRANCH, PFA_EMIT_PAUSE
   4      103D0000 
   4      BE0F0000 
   4      A00D0000 
   5 0db0 D43C0000 	    .word XT_SERIAL_EMIT
   6 0db4 7C000000 	    .word XT_EXIT
  85              	.include "words/emitq.s"
   1              	  DEFER "emit?",EMITQ, XT_SERIAL_EMITQ
   1              	>  HEADER Flag_visible|Flag_defer|Flag_init,"emit?",EMITQ,PFA_DODEFER
   1              	>>  .p2align 2
   1              	>> VE_EMITQ:
   1 0db8 7C0D0000 	>>  .word 99b
   1 0dbc C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   1 0dc0 05       	>>  .byte 8f-7f
   1 0dc1 656D6974 	>> 7:.ascii "emit?"
   1      3F
   1 0dc6 00BF     	>> 8:.p2align 2
   1 0dc8 500F0000 	>>  XT_EMITQ:.word PFA_DODEFER
   1              	>>  PFA_EMITQ:
   1 0dcc 1C020020 	>  .word rampointer
   1              	>  .equ DEFER_RAM_EMITQ,rampointer
ARM GAS  lp-stellaris.asm 			page 51


   1              	>  .set rampointer,rampointer+cellsize
   1 0dd0 103D0000 	>  .word XT_SERIAL_EMITQ
   1 0dd4 6C020000 	>  .word XT_FETCH
   1 0dd8 80020000 	>  .word XT_STORE
  86              	.include "words/pause.s"
   1              	  DEFER "pause",PAUSE, XT_NOOP
   1              	>  HEADER Flag_visible|Flag_defer|Flag_init,"pause",PAUSE,PFA_DODEFER
   1              	>>  .p2align 2
   1              	>> VE_PAUSE:
   1 0ddc BC0D0000 	>>  .word 99b
   1 0de0 C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   1 0de4 05       	>>  .byte 8f-7f
   1 0de5 70617573 	>> 7:.ascii "pause"
   1      65
   1 0dea 00BF     	>> 8:.p2align 2
   1 0dec 500F0000 	>>  XT_PAUSE:.word PFA_DODEFER
   1              	>>  PFA_PAUSE:
   1 0df0 20020020 	>  .word rampointer
   1              	>  .equ DEFER_RAM_PAUSE,rampointer
   1              	>  .set rampointer,rampointer+cellsize
   1 0df4 0C0E0000 	>  .word XT_NOOP
   1 0df8 6C020000 	>  .word XT_FETCH
   1 0dfc 80020000 	>  .word XT_STORE
  87              	.include "words/nop.s"
   1              	CODEWORD "nop", NOOP
   1              	>  HEADER Flag_visible,"nop",NOOP,PFA_NOOP
   1              	>>  .p2align 2
   1              	>> VE_NOOP:
   1 0e00 E00D0000 	>>  .word 99b
   1 0e04 00000000 	>> 99:.word Flag_visible
   1 0e08 03       	>>  .byte 8f-7f
   1 0e09 6E6F70   	>> 7:.ascii "nop"
   1              	>> 8:.p2align 2
   1 0e0c 100E0000 	>>  XT_NOOP:.word PFA_NOOP
   1              	>>  PFA_NOOP:
   2              	NEXT
   2 0e10 3FE5     	>  b DO_NEXT
   2 0e12 00000001 	>  .ltorg
   2      00208000 
   2      00202411 
   2      0000
  88              	.include "words/bounds.s"
   1              	COLON "bounds", BOUNDS
   1              	>  HEADER Flag_visible,"bounds",BOUNDS,DOCOLON
   1              	>>  .p2align 2
   1              	>> VE_BOUNDS:
   1 0e20 040E0000 	>>  .word 99b
   1 0e24 00000000 	>> 99:.word Flag_visible
   1 0e28 06       	>>  .byte 8f-7f
   1 0e29 626F756E 	>> 7:.ascii "bounds"
   1      6473
   1 0e2f 00       	>> 8:.p2align 2
   1 0e30 8C080000 	>>  XT_BOUNDS:.word DOCOLON
   1              	>>  PFA_BOUNDS:
   2 0e34 F8000000 	  .word XT_OVER,XT_PLUS,XT_SWAP,XT_EXIT
   2      480B0000 
   2      B0000000 
ARM GAS  lp-stellaris.asm 			page 52


   2      7C000000 
  89              	
  90              	.include "words/do-do.s"
   1              	HEADLESS DODO
   1 0e44 480E0000 	>  XT_DODO:.word PFA_DODO
   1              	>  PFA_DODO:
   2              	 @ save loopsys
   3 0e48 2DE90018 	 push {rloopindex, rlooplimit}
   4              	
   5              	 @ create new loopsys from stack
   6 0e4c B346     	 mov rloopindex, tos
   7              	 loadtos
   7 0e4e 57F8046B 	>  ldr tos,[psp],#4
   8 0e52 B446     	 mov rlooplimit, tos
   9              	 loadtos
   9 0e54 57F8046B 	>  ldr tos,[psp],#4
  10              	
  11 0e58 0CF1004C 	 add rlooplimit, #0x80000000
  12 0e5c ABEB0C0B 	 sub rloopindex, rlooplimit
  13              	NEXT
  13 0e60 17E5     	>  b DO_NEXT
  13              	>  .ltorg
  91              	.include "words/do-loop.s"
   1              	HEADLESS DOLOOP
   1 0e62 660E0000 	>  XT_DOLOOP:.word PFA_DOLOOP
   1              	>  PFA_DOLOOP:
   2 0e66 4FF00100 	  ldr r0, =#1
   3 0e6a 04E0     	  b PFA_DOPLUSLOOP_INTERN
   4              	
   5              	HEADLESS DOPLUSLOOP
   5 0e6c 700E0000 	>  XT_DOPLUSLOOP:.word PFA_DOPLUSLOOP
   5              	>  PFA_DOPLUSLOOP:
   6 0e70 3046     	  mov r0, tos
   7              	  loadtos
   7 0e72 57F8046B 	>  ldr tos,[psp],#4
   8              	
   9              	PFA_DOPLUSLOOP_INTERN:
  10 0e76 1BEB000B 	  adds rloopindex, r0
  11 0e7a 02D6     	  bvs PFA_DOPLUSLOOP_LEAVE
  12 0e7c D9F80090 	  ldr FORTHIP, [FORTHIP]
  13              	NEXT
  13 0e80 07E5     	>  b DO_NEXT
  13              	>  .ltorg
  14              	
  15              	PFA_DOPLUSLOOP_LEAVE:
  16 0e82 09F10409 	  add FORTHIP, #4
  17 0e86 BDE80018 	  pop {rloopindex, rlooplimit}
  18              	NEXT
  18 0e8a 02E5     	>  b DO_NEXT
  18              	>  .ltorg
  92              	.include "words/unloop.s"
   1              	  CODEWORD "unloop", UNLOOP 
   1              	>  HEADER Flag_visible,"unloop",UNLOOP,PFA_UNLOOP
   1              	>>  .p2align 2
   1              	>> VE_UNLOOP:
   1 0e8c 240E0000 	>>  .word 99b
   1 0e90 00000000 	>> 99:.word Flag_visible
ARM GAS  lp-stellaris.asm 			page 53


   1 0e94 06       	>>  .byte 8f-7f
   1 0e95 756E6C6F 	>> 7:.ascii "unloop"
   1      6F70
   1 0e9b 00       	>> 8:.p2align 2
   1 0e9c A00E0000 	>>  XT_UNLOOP:.word PFA_UNLOOP
   1              	>>  PFA_UNLOOP:
   2 0ea0 BDE80018 	  pop {rloopindex, rlooplimit}
   3              	  NEXT
   3 0ea4 F5E4     	>  b DO_NEXT
   3              	>  .ltorg
  93              	.include "words/i.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD "i", I @ Innermost loop index
   2              	>  HEADER Flag_visible,"i",I,PFA_I
   2 0ea6 00BF     	>>  .p2align 2
   2              	>> VE_I:
   2 0ea8 900E0000 	>>  .word 99b
   2 0eac 00000000 	>> 99:.word Flag_visible
   2 0eb0 01       	>>  .byte 8f-7f
   2 0eb1 69       	>> 7:.ascii "i"
   2 0eb2 00BF     	>> 8:.p2align 2
   2 0eb4 B80E0000 	>>  XT_I:.word PFA_I
   2              	>>  PFA_I:
   3              	@------------------------------------------------------------------------------
   4              	  savetos
   4 0eb8 47F8046D 	>  str tos,[psp,#-4]!
   5 0ebc 0BEB0C06 	  add tos, rloopindex,rlooplimit
   6              	NEXT
   6 0ec0 E7E4     	>  b DO_NEXT
   6              	>  .ltorg
  94              	.include "words/j.s"
   1              	@------------------------------------------------------------------------------
   2              	  CODEWORD "j", J @ Second loop index
   2              	>  HEADER Flag_visible,"j",J,PFA_J
   2 0ec2 00BF     	>>  .p2align 2
   2              	>> VE_J:
   2 0ec4 AC0E0000 	>>  .word 99b
   2 0ec8 00000000 	>> 99:.word Flag_visible
   2 0ecc 01       	>>  .byte 8f-7f
   2 0ecd 6A       	>> 7:.ascii "j"
   2 0ece 00BF     	>> 8:.p2align 2
   2 0ed0 D40E0000 	>>  XT_J:.word PFA_J
   2              	>>  PFA_J:
   3              	@------------------------------------------------------------------------------
   4              	  savetos
   4 0ed4 47F8046D 	>  str tos,[psp,#-4]!
   5 0ed8 03BC     	  pop {r0,r1}
   6 0eda 03B4     	  push {r0,r1}
   7 0edc 00EB0106 	  add tos, r0, r1
   8              	NEXT
   8 0ee0 D7E4     	>  b DO_NEXT
   8              	>  .ltorg
  95              	
  96              	.include "words/aligned.s"
   1              	
   2              	CODEWORD "aligned", ALIGNED
   2              	>  HEADER Flag_visible,"aligned",ALIGNED,PFA_ALIGNED
ARM GAS  lp-stellaris.asm 			page 54


   2 0ee2 00BF     	>>  .p2align 2
   2              	>> VE_ALIGNED:
   2 0ee4 C80E0000 	>>  .word 99b
   2 0ee8 00000000 	>> 99:.word Flag_visible
   2 0eec 07       	>>  .byte 8f-7f
   2 0eed 616C6967 	>> 7:.ascii "aligned"
   2      6E6564
   2              	>> 8:.p2align 2
   2 0ef4 F80E0000 	>>  XT_ALIGNED:.word PFA_ALIGNED
   2              	>>  PFA_ALIGNED:
   3 0ef8 0336     	    adds tos, tos, #3
   4 0efa 0320     	    movs r0, #3
   5 0efc C043     	    mvns r0, r0
   6 0efe 0640     	    ands tos, tos, r0
   7              	NEXT
   7 0f00 C7E4     	>  b DO_NEXT
   7              	>  .ltorg
  97              	.include "words/do-sliteral.s"
   1              	
   2              	NONAME DOSLITERAL
   2 0f02 8C080000 	>  XT_DOSLITERAL:.word DOCOLON
   2              	>  PFA_DOSLITERAL:
   3              	
   4 0f06 A0010000 	  .word XT_R_FROM,XT_COUNT,XT_2DUP,XT_PLUS,XT_ALIGNED,XT_TO_R
   4      74280000 
   4      E8080000 
   4      480B0000 
   4      F40E0000 
   5 0f1e 7C000000 	  .word XT_EXIT
  98              	.include "words/do-variable.s"
   1              	
   2              	HEADLESS DOVARIABLE
   2 0f22 260F0000 	>  XT_DOVARIABLE:.word PFA_DOVARIABLE
   2              	>  PFA_DOVARIABLE:
   3              	  savetos
   3 0f26 47F8046D 	>  str tos,[psp,#-4]!
   4 0f2a D8F80060 	  ldr tos, [FORTHW]
   5              	NEXT
   5 0f2e B0E4     	>  b DO_NEXT
   5              	>  .ltorg
  99              	.include "words/do-data.s"
   1              	
   2              	HEADLESS DODATA
   2 0f30 340F0000 	>  XT_DODATA:.word PFA_DODATA
   2              	>  PFA_DODATA:
   3              	  savetos
   3 0f34 47F8046D 	>  str tos,[psp,#-4]!
   4 0f38 4646     	  mov tos, FORTHW
   5              	NEXT
   5 0f3a AAE4     	>  b DO_NEXT
   5              	>  .ltorg
 100              	.include "words/do-value.s"
   1              	HEADLESS DOVALUE
   1 0f3c 400F0000 	>  XT_DOVALUE:.word PFA_DOVALUE
   1              	>  PFA_DOVALUE:
   2              	  savetos
   2 0f40 47F8046D 	>  str tos,[psp,#-4]!
ARM GAS  lp-stellaris.asm 			page 55


   3 0f44 D8F80060 	  ldr tos, [FORTHW]
   4 0f48 3668     	  ldr tos, [tos]
   5              	NEXT
   5 0f4a A2E4     	>  b DO_NEXT
   5              	>  .ltorg
 101              	.include "words/do-defer.s"
   1              	HEADLESS DODEFER
   1 0f4c 500F0000 	>  XT_DODEFER:.word PFA_DODEFER
   1              	>  PFA_DODEFER:
   2 0f50 D8F80080 	  ldr FORTHW, [FORTHW]
   3 0f54 D8F80080 	  ldr FORTHW, [FORTHW]
   4 0f58 9DE4     	  b DO_EXECUTE
 102              	.include "words/do-user.s"
   1              	HEADLESS DOUSER
   1 0f5a 5E0F0000 	>  XT_DOUSER:.word PFA_DOUSER
   1              	>  PFA_DOUSER:
   2              	  savetos
   2 0f5e 47F8046D 	>  str tos,[psp,#-4]!
   3 0f62 D8F80060 	  ldr tos, [FORTHW]
   4 0f66 5644     	  add tos, up
   5              	NEXT
   5 0f68 93E4     	>  b DO_NEXT
   5              	>  .ltorg
 103              	.include "words/do-does.s"
   1              	HEADLESS DODOES
   1 0f6a 6E0F0000 	>  XT_DODOES:.word PFA_DODOES
   1              	>  PFA_DODOES:
   2              	  savetos
   2 0f6e 47F8046D 	>  str tos,[psp,#-4]!
   3 0f72 4646     	  mov tos, FORTHW
   4 0f74 4DF8049D 	  push {FORTHIP}
   5 0f78 58F8049C 	  ldr FORTHIP, [FORTHW, #-4]
   6 0f7c 09F10409 	  add FORTHIP, #4
   7              	NEXT
   7 0f80 87E4     	>  b DO_NEXT
   7              	>  .ltorg
 104              	.include "words/up.s"
   1              	
   2              	CODEWORD  "up@", UP_FETCH
   2              	>  HEADER Flag_visible,"up@",UP_FETCH,PFA_UP_FETCH
   2 0f82 00BF     	>>  .p2align 2
   2              	>> VE_UP_FETCH:
   2 0f84 E80E0000 	>>  .word 99b
   2 0f88 00000000 	>> 99:.word Flag_visible
   2 0f8c 03       	>>  .byte 8f-7f
   2 0f8d 757040   	>> 7:.ascii "up@"
   2              	>> 8:.p2align 2
   2 0f90 940F0000 	>>  XT_UP_FETCH:.word PFA_UP_FETCH
   2              	>>  PFA_UP_FETCH:
   3              	  savetos
   3 0f94 47F8046D 	>  str tos,[psp,#-4]!
   4 0f98 5646     	  mov tos, up
   5              	NEXT
   5 0f9a 7AE4     	>  b DO_NEXT
   5              	>  .ltorg
   6              	
   7              	CODEWORD  "up!", UP_STORE
ARM GAS  lp-stellaris.asm 			page 56


   7              	>  HEADER Flag_visible,"up!",UP_STORE,PFA_UP_STORE
   7              	>>  .p2align 2
   7              	>> VE_UP_STORE:
   7 0f9c 880F0000 	>>  .word 99b
   7 0fa0 00000000 	>> 99:.word Flag_visible
   7 0fa4 03       	>>  .byte 8f-7f
   7 0fa5 757021   	>> 7:.ascii "up!"
   7              	>> 8:.p2align 2
   7 0fa8 AC0F0000 	>>  XT_UP_STORE:.word PFA_UP_STORE
   7              	>>  PFA_UP_STORE:
   8 0fac B246     	  mov up, tos
   9              	  loadtos
   9 0fae 57F8046B 	>  ldr tos,[psp],#4
  10              	NEXT
  10 0fb2 6EE4     	>  b DO_NEXT
  10              	>  .ltorg
 105              	
 106              	.include "words/1ms.s"
 107              	.include "words/dobranch.s"
   1              	HEADLESS DOBRANCH
   1 0fb4 B80F0000 	>  XT_DOBRANCH:.word PFA_DOBRANCH
   1              	>  PFA_DOBRANCH:
   2 0fb8 D9F80090 	  ldr FORTHIP, [FORTHIP]
   3              	NEXT
   3 0fbc 69E4     	>  b DO_NEXT
   3              	>  .ltorg
 108              	.include "words/docondbranch.s"
   1              	HEADLESS DOCONDBRANCH
   1 0fbe C20F0000 	>  XT_DOCONDBRANCH:.word PFA_DOCONDBRANCH
   1              	>  PFA_DOCONDBRANCH:
   2 0fc2 3046     	    mov r0, tos
   3              	    loadtos
   3 0fc4 57F8046B 	>  ldr tos,[psp],#4
   4 0fc8 0028     	    cmp r0, #0
   5 0fca F5D0     	    beq PFA_DOBRANCH
   6 0fcc 19F10409 	    adds FORTHIP, #4
   7              	NEXT
   7 0fd0 5FE4     	>  b DO_NEXT
   7              	>  .ltorg
 109              	.include "words/doliteral.s"
   1              	HEADLESS DOLITERAL
   1 0fd2 D60F0000 	>  XT_DOLITERAL:.word PFA_DOLITERAL
   1              	>  PFA_DOLITERAL:
   2              	    savetos
   2 0fd6 47F8046D 	>  str tos,[psp,#-4]!
   3 0fda D9F80060 	    ldr tos, [FORTHIP]
   4 0fde 19F10409 	    adds FORTHIP, #4
   5              	NEXT
   5 0fe2 56E4     	>  b DO_NEXT
   5              	>  .ltorg
 110              	.include "words/compare.s"
   1              	@ -----------------------------------------------------------------------------
   2              	  CODEWORD "compare",COMPARE  @ Compare two strings
   2              	>  HEADER Flag_visible,"compare",COMPARE,PFA_COMPARE
   2              	>>  .p2align 2
   2              	>> VE_COMPARE:
   2 0fe4 A00F0000 	>>  .word 99b
ARM GAS  lp-stellaris.asm 			page 57


   2 0fe8 00000000 	>> 99:.word Flag_visible
   2 0fec 07       	>>  .byte 8f-7f
   2 0fed 636F6D70 	>> 7:.ascii "compare"
   2      617265
   2              	>> 8:.p2align 2
   2 0ff4 F80F0000 	>>  XT_COMPARE:.word PFA_COMPARE
   2              	>>  PFA_COMPARE:
   3              	@ -----------------------------------------------------------------------------
   4 0ff8 00F002F8 	  bl compare
   5 0ffc F643     	  mvns tos,tos
   6              	NEXT
   6 0ffe 48E4     	>  b DO_NEXT
   6              	>  .ltorg
   7              	
   8              	.if WANT_IGNORECASE==1
   9              	.macro lowercase Register @ Ein Zeichen in einem Register wird auf Lowercase umgestellt.
  10              	  @    Hex Dec  Hex Dec
  11              	  @ A  41  65   61  97  a
  12              	  @ Z  5A  90   7A  122 z
  13              	  cmp \Register, #0x41
  14              	  blo 5f
  15              	  cmp \Register, #0x5B
  16              	  it lo
  17              	  addlo \Register, #0x20
  18              	5:  
  19              	.endm
  20              	.endif
  21              	
  22              	compare:
  23 1000 00B5     	  push {lr}
  24              	
  25              	  popda r1        @ Length of second string
  25 1002 3146     	>  mov r1,tos
  25              	>  loadtos
  25 1004 57F8046B 	>>  ldr tos,[psp],#4
  26 1008 01CF     	  ldm psp!, {r0}  @ Length of first  string
  27 100a 8842     	  cmp r0, r1
  28 100c 02D0     	  beq 1f
  29              	
  30 100e 40CF     	    ldm psp!, {tos}
  31 1010 0026     	    movs tos, #0
  32 1012 00BD     	    pop {pc}
  33              	
  34              	1: @ Lengths are equal. Compare characters.
  35 1014 02CF     	   ldm psp!, {r1}  @ Address of first string.
  36              	                   @ TOS contains address of second string.
  37              	
  38              	   @ How many characters to compare left ?
  39 1016 0028     	2: cmp r0, #0
  40 1018 06D0     	   beq 3f
  41              	
  42 101a 0138     	     subs r0, #1
  43 101c 0A5C     	     ldrb r2, [r1, r0]
  44 101e 335C     	     ldrb r3, [tos, r0]
  45              	
  46              	.if WANT_IGNORECASE==1
  47              	     lowercase r2
ARM GAS  lp-stellaris.asm 			page 58


  48              	     lowercase r3
  49              	.endif
  50              	
  51 1020 9A42     	     cmp r2, r3
  52 1022 F8D0     	     beq 2b
  53              	
  54              	     @ Unequal
  55 1024 0026     	     movs tos, #0
  56 1026 00BD     	     pop {pc}
  57              	
  58              	3: @ Equal !
  59 1028 0026     	   movs tos, #0
  60 102a F643     	   mvns tos, tos
  61 102c 00BD     	   pop {pc}
  62              	
 111              	.include "words/num-constants.s"
   1              	
   2              	CONSTANT "0", ZERO, 0
   2              	>  HEADER Flag_visible,"0",ZERO,PFA_DOVARIABLE
   2 102e 00BF     	>>  .p2align 2
   2              	>> VE_ZERO:
   2 1030 E80F0000 	>>  .word 99b
   2 1034 00000000 	>> 99:.word Flag_visible
   2 1038 01       	>>  .byte 8f-7f
   2 1039 30       	>> 7:.ascii "0"
   2 103a 00BF     	>> 8:.p2align 2
   2 103c 260F0000 	>>  XT_ZERO:.word PFA_DOVARIABLE
   2              	>>  PFA_ZERO:
   2 1040 00000000 	>  .word 0
   3              	CONSTANT "1", ONE, 1
   3              	>  HEADER Flag_visible,"1",ONE,PFA_DOVARIABLE
   3              	>>  .p2align 2
   3              	>> VE_ONE:
   3 1044 34100000 	>>  .word 99b
   3 1048 00000000 	>> 99:.word Flag_visible
   3 104c 01       	>>  .byte 8f-7f
   3 104d 31       	>> 7:.ascii "1"
   3 104e 00BF     	>> 8:.p2align 2
   3 1050 260F0000 	>>  XT_ONE:.word PFA_DOVARIABLE
   3              	>>  PFA_ONE:
   3 1054 01000000 	>  .word 1
   4              	CONSTANT "2", TWO, 2
   4              	>  HEADER Flag_visible,"2",TWO,PFA_DOVARIABLE
   4              	>>  .p2align 2
   4              	>> VE_TWO:
   4 1058 48100000 	>>  .word 99b
   4 105c 00000000 	>> 99:.word Flag_visible
   4 1060 01       	>>  .byte 8f-7f
   4 1061 32       	>> 7:.ascii "2"
   4 1062 00BF     	>> 8:.p2align 2
   4 1064 260F0000 	>>  XT_TWO:.word PFA_DOVARIABLE
   4              	>>  PFA_TWO:
   4 1068 02000000 	>  .word 2
   5              	CONSTANT "4", FOUR, 4
   5              	>  HEADER Flag_visible,"4",FOUR,PFA_DOVARIABLE
   5              	>>  .p2align 2
   5              	>> VE_FOUR:
ARM GAS  lp-stellaris.asm 			page 59


   5 106c 5C100000 	>>  .word 99b
   5 1070 00000000 	>> 99:.word Flag_visible
   5 1074 01       	>>  .byte 8f-7f
   5 1075 34       	>> 7:.ascii "4"
   5 1076 00BF     	>> 8:.p2align 2
   5 1078 260F0000 	>>  XT_FOUR:.word PFA_DOVARIABLE
   5              	>>  PFA_FOUR:
   5 107c 04000000 	>  .word 4
   6              	CONSTANT "-1", MINUSONE, -1
   6              	>  HEADER Flag_visible,"-1",MINUSONE,PFA_DOVARIABLE
   6              	>>  .p2align 2
   6              	>> VE_MINUSONE:
   6 1080 70100000 	>>  .word 99b
   6 1084 00000000 	>> 99:.word Flag_visible
   6 1088 02       	>>  .byte 8f-7f
   6 1089 2D31     	>> 7:.ascii "-1"
   6 108b 00       	>> 8:.p2align 2
   6 108c 260F0000 	>>  XT_MINUSONE:.word PFA_DOVARIABLE
   6              	>>  PFA_MINUSONE:
   6 1090 FFFFFFFF 	>  .word -1
   7              	CONSTANT "true", TRUE, -1
   7              	>  HEADER Flag_visible,"true",TRUE,PFA_DOVARIABLE
   7              	>>  .p2align 2
   7              	>> VE_TRUE:
   7 1094 84100000 	>>  .word 99b
   7 1098 00000000 	>> 99:.word Flag_visible
   7 109c 04       	>>  .byte 8f-7f
   7 109d 74727565 	>> 7:.ascii "true"
   7 10a1 0000BF   	>> 8:.p2align 2
   7 10a4 260F0000 	>>  XT_TRUE:.word PFA_DOVARIABLE
   7              	>>  PFA_TRUE:
   7 10a8 FFFFFFFF 	>  .word -1
   8              	CONSTANT "false", FALSE, 0
   8              	>  HEADER Flag_visible,"false",FALSE,PFA_DOVARIABLE
   8              	>>  .p2align 2
   8              	>> VE_FALSE:
   8 10ac 98100000 	>>  .word 99b
   8 10b0 00000000 	>> 99:.word Flag_visible
   8 10b4 05       	>>  .byte 8f-7f
   8 10b5 66616C73 	>> 7:.ascii "false"
   8      65
   8 10ba 00BF     	>> 8:.p2align 2
   8 10bc 260F0000 	>>  XT_FALSE:.word PFA_DOVARIABLE
   8              	>>  PFA_FALSE:
   8 10c0 00000000 	>  .word 0
 112              	.include "words/n_to_r.s"
   1              	CODEWORD "n>r", N_TO_R
   1              	>  HEADER Flag_visible,"n>r",N_TO_R,PFA_N_TO_R
   1              	>>  .p2align 2
   1              	>> VE_N_TO_R:
   1 10c4 B0100000 	>>  .word 99b
   1 10c8 00000000 	>> 99:.word Flag_visible
   1 10cc 03       	>>  .byte 8f-7f
   1 10cd 6E3E72   	>> 7:.ascii "n>r"
   1              	>> 8:.p2align 2
   1 10d0 D4100000 	>>  XT_N_TO_R:.word PFA_N_TO_R
   1              	>>  PFA_N_TO_R:
ARM GAS  lp-stellaris.asm 			page 60


   2 10d4 3046     	    mov r0, tos
   3 10d6 3146     	    mov r1, tos
   4              	N_TO_R_LOOP:
   5              	    loadtos
   5 10d8 57F8046B 	>  ldr tos,[psp],#4
   6 10dc 40B4     	    push {tos}
   7 10de 0138     	    subs r0,1
   8 10e0 FAD1     	    bne N_TO_R_LOOP
   9 10e2 02B4     	    push {r1}
  10              	    loadtos
  10 10e4 57F8046B 	>  ldr tos,[psp],#4
  11              	NEXT
  11 10e8 FFF7D3BB 	>  b DO_NEXT
  11              	>  .ltorg
 113              	.include "words/n_r_from.s"
   1              	CODEWORD "nr>", N_R_FROM
   1              	>  HEADER Flag_visible,"nr>",N_R_FROM,PFA_N_R_FROM
   1              	>>  .p2align 2
   1              	>> VE_N_R_FROM:
   1 10ec C8100000 	>>  .word 99b
   1 10f0 00000000 	>> 99:.word Flag_visible
   1 10f4 03       	>>  .byte 8f-7f
   1 10f5 6E723E   	>> 7:.ascii "nr>"
   1              	>> 8:.p2align 2
   1 10f8 FC100000 	>>  XT_N_R_FROM:.word PFA_N_R_FROM
   1              	>>  PFA_N_R_FROM:
   2 10fc 02BC     	    pop {r1}
   3 10fe 0846     	    mov r0, r1
   4              	    savetos
   4 1100 47F8046D 	>  str tos,[psp,#-4]!
   5              	N_R_FROM_LOOP:
   6 1104 40BC     	    pop {tos}
   7              	    savetos
   7 1106 47F8046D 	>  str tos,[psp,#-4]!
   8 110a 0138     	    subs r0,1
   9 110c FAD1     	    bne N_R_FROM_LOOP
  10 110e 0E46     	    mov tos, r1
  11              	NEXT
  11 1110 FFF7BFBB 	>  b DO_NEXT
  11              	>  .ltorg
  12              	.include "dict_secs.inc"
   1              	#
   2              	# all secondaries / colon words
   3              	# they represend data instead of code
   4              	#
   5              	
   6              	.include "words/warm.s"
   1              	
   2              	COLON "warm", WARM
   2              	>  HEADER Flag_visible,"warm",WARM,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_WARM:
   2 1114 F0100000 	>>  .word 99b
   2 1118 00000000 	>> 99:.word Flag_visible
   2 111c 04       	>>  .byte 8f-7f
   2 111d 7761726D 	>> 7:.ascii "warm"
   2 1121 0000BF   	>> 8:.p2align 2
ARM GAS  lp-stellaris.asm 			page 61


   2 1124 8C080000 	>>  XT_WARM:.word DOCOLON
   2              	>>  PFA_WARM:
   3 1128 50270000 	  .word XT_INIT_RAM
   4 112c E8110000 	  .word XT_LBRACKET
   5 1130 6C2C0000 	  .word XT_TURNKEY
   6 1134 780C0000 	  .word XT_QUIT
   7 1138 7C000000 	  .word XT_EXIT
   7              	.include "words/cr.s"
   1              	COLON "cr", CR
   1              	>  HEADER Flag_visible,"cr",CR,DOCOLON
   1              	>>  .p2align 2
   1              	>> VE_CR:
   1 113c 18110000 	>>  .word 99b
   1 1140 00000000 	>> 99:.word Flag_visible
   1 1144 02       	>>  .byte 8f-7f
   1 1145 6372     	>> 7:.ascii "cr"
   1 1147 00       	>> 8:.p2align 2
   1 1148 8C080000 	>>  XT_CR:.word DOCOLON
   1              	>>  PFA_CR:
   2              	
   3 114c D20F0000 	.word XT_DOLITERAL,13,XT_EMIT
   3      0D000000 
   3      880D0000 
   4 1158 D20F0000 	.word XT_DOLITERAL,10,XT_EMIT
   4      0A000000 
   4      880D0000 
   5 1164 7C000000 	.word XT_EXIT
   8              	.include "words/bl.s"
   1              	
   2              	CONSTANT "bl", BL, 32
   2              	>  HEADER Flag_visible,"bl",BL,PFA_DOVARIABLE
   2              	>>  .p2align 2
   2              	>> VE_BL:
   2 1168 40110000 	>>  .word 99b
   2 116c 00000000 	>> 99:.word Flag_visible
   2 1170 02       	>>  .byte 8f-7f
   2 1171 626C     	>> 7:.ascii "bl"
   2 1173 00       	>> 8:.p2align 2
   2 1174 260F0000 	>>  XT_BL:.word PFA_DOVARIABLE
   2              	>>  PFA_BL:
   2 1178 20000000 	>  .word 32
   9              	.include "words/space.s"
   1              	
   2              	COLON "space", SPACE
   2              	>  HEADER Flag_visible,"space",SPACE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_SPACE:
   2 117c 6C110000 	>>  .word 99b
   2 1180 00000000 	>> 99:.word Flag_visible
   2 1184 05       	>>  .byte 8f-7f
   2 1185 73706163 	>> 7:.ascii "space"
   2      65
   2 118a 00BF     	>> 8:.p2align 2
   2 118c 8C080000 	>>  XT_SPACE:.word DOCOLON
   2              	>>  PFA_SPACE:
   3              	
   4 1190 74110000 	.word XT_BL,XT_EMIT,XT_EXIT
ARM GAS  lp-stellaris.asm 			page 62


   4      880D0000 
   4      7C000000 
  10              	.include "words/spaces.s"
   1              	
   2              	COLON "spaces", SPACES
   2              	>  HEADER Flag_visible,"spaces",SPACES,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_SPACES:
   2 119c 80110000 	>>  .word 99b
   2 11a0 00000000 	>> 99:.word Flag_visible
   2 11a4 06       	>>  .byte 8f-7f
   2 11a5 73706163 	>> 7:.ascii "spaces"
   2      6573
   2 11ab 00       	>> 8:.p2align 2
   2 11ac 8C080000 	>>  XT_SPACES:.word DOCOLON
   2              	>>  PFA_SPACES:
   3              	
   4 11b0 3C100000 	.word XT_ZERO, XT_MAX
   4      8C060000 
   5              	SPCS1:
   6 11b8 C8000000 	  .word XT_DUP,XT_DOCONDBRANCH,SPCS2
   6      BE0F0000 
   6      D4110000 
   7 11c4 8C110000 	  .word XT_SPACE,XT_1MINUS,XT_DOBRANCH,SPCS1
   7      900B0000 
   7      B40F0000 
   7      B8110000 
   8              	SPCS2:  
   9 11d4 98000000 	  .word XT_DROP,XT_EXIT
   9      7C000000 
  11              	.include "words/left-bracket.s"
   1              	
   2              	COLON "[", LBRACKET
   2              	>  HEADER Flag_visible,"[",LBRACKET,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_LBRACKET:
   2 11dc A0110000 	>>  .word 99b
   2 11e0 00000000 	>> 99:.word Flag_visible
   2 11e4 01       	>>  .byte 8f-7f
   2 11e5 5B       	>> 7:.ascii "["
   2 11e6 00BF     	>> 8:.p2align 2
   2 11e8 8C080000 	>>  XT_LBRACKET:.word DOCOLON
   2              	>>  PFA_LBRACKET:
   3 11ec 3C100000 	.word XT_ZERO, XT_STATE, XT_STORE
   3      0C0C0000 
   3      80020000 
   4 11f8 7C000000 	.word XT_EXIT
  12              	.include "words/l-paren.s"
   1              	
   2              	IMMED "(", LPAREN
   2              	>  Header Flag_visible|Flag_immediate,(,LPAREN,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_LPAREN:
   2 11fc E0110000 	>>  .word 99b
   2 1200 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 1204 01       	>>  .byte 8f-7f
   2 1205 28       	>> 7:.ascii "("
ARM GAS  lp-stellaris.asm 			page 63


   2 1206 00BF     	>> 8:.p2align 2
   2 1208 8C080000 	>>  XT_LPAREN:.word DOCOLON
   2              	>>  PFA_LPAREN:
   3 120c D20F0000 	    .word XT_DOLITERAL, 0x29
   3      29000000 
   4 1214 FC1A0000 	    .word XT_PARSE
   5 1218 3C070000 	    .word XT_2DROP
   6 121c 7C000000 	    .word XT_EXIT
  13              	.include "words/decimal.s"
   1              	
   2              	COLON "decimal", DECIMAL
   2              	>  HEADER Flag_visible,"decimal",DECIMAL,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DECIMAL:
   2 1220 00120000 	>>  .word 99b
   2 1224 00000000 	>> 99:.word Flag_visible
   2 1228 07       	>>  .byte 8f-7f
   2 1229 64656369 	>> 7:.ascii "decimal"
   2      6D616C
   2              	>> 8:.p2align 2
   2 1230 8C080000 	>>  XT_DECIMAL:.word DOCOLON
   2              	>>  PFA_DECIMAL:
   3 1234 D20F0000 	.word XT_DOLITERAL,10,XT_BASE,XT_STORE,XT_EXIT
   3      0A000000 
   3      340B0000 
   3      80020000 
   3      7C000000 
  14              	.include "words/hex.s"
   1              	
   2              	COLON "hex", HEX
   2              	>  HEADER Flag_visible,"hex",HEX,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_HEX:
   2 1248 24120000 	>>  .word 99b
   2 124c 00000000 	>> 99:.word Flag_visible
   2 1250 03       	>>  .byte 8f-7f
   2 1251 686578   	>> 7:.ascii "hex"
   2              	>> 8:.p2align 2
   2 1254 8C080000 	>>  XT_HEX:.word DOCOLON
   2              	>>  PFA_HEX:
   3 1258 D20F0000 	.word XT_DOLITERAL,16,XT_BASE,XT_STORE,XT_EXIT
   3      10000000 
   3      340B0000 
   3      80020000 
   3      7C000000 
  15              	
  16              	.include "words/pad.s"
   1              	COLON "pad", PAD
   1              	>  HEADER Flag_visible,"pad",PAD,DOCOLON
   1              	>>  .p2align 2
   1              	>> VE_PAD:
   1 126c 4C120000 	>>  .word 99b
   1 1270 00000000 	>> 99:.word Flag_visible
   1 1274 03       	>>  .byte 8f-7f
   1 1275 706164   	>> 7:.ascii "pad"
   1              	>> 8:.p2align 2
   1 1278 8C080000 	>>  XT_PAD:.word DOCOLON
ARM GAS  lp-stellaris.asm 			page 64


   1              	>>  PFA_PAD:
   2 127c A0120000 	    .word XT_HERE, XT_DOLITERAL, 40
   2      D20F0000 
   2      28000000 
   3 1288 480B0000 	    .word XT_PLUS, XT_EXIT
   3      7C000000 
  17              	.include "words/here.s"
   1              	
   2              	COLON "here", HERE
   2              	>  HEADER Flag_visible,"here",HERE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_HERE:
   2 1290 70120000 	>>  .word 99b
   2 1294 00000000 	>> 99:.word Flag_visible
   2 1298 04       	>>  .byte 8f-7f
   2 1299 68657265 	>> 7:.ascii "here"
   2 129d 0000BF   	>> 8:.p2align 2
   2 12a0 8C080000 	>>  XT_HERE:.word DOCOLON
   2              	>>  PFA_HERE:
   3 12a4 FC320000 	  .word XT_DP, XT_EXIT
   3      7C000000 
  18              	.include "words/allot.s"
   1              	
   2              	COLON "allot", ALLOT
   2              	>  HEADER Flag_visible,"allot",ALLOT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_ALLOT:
   2 12ac 94120000 	>>  .word 99b
   2 12b0 00000000 	>> 99:.word Flag_visible
   2 12b4 05       	>>  .byte 8f-7f
   2 12b5 616C6C6F 	>> 7:.ascii "allot"
   2      74
   2 12ba 00BF     	>> 8:.p2align 2
   2 12bc 8C080000 	>>  XT_ALLOT:.word DOCOLON
   2              	>>  PFA_ALLOT:
   3 12c0 FC320000 	    .word XT_DP
   4 12c4 480B0000 	    .word XT_PLUS
   5 12c8 E4310000 	    .word XT_DOTO, XT_DP
   5      FC320000 
   6 12d0 7C000000 	    .word XT_EXIT
  19              	
  20              	.include "words/hold.s"
   1              	
   2              	VARIABLE "hld", HLD
   2              	>  HEADER Flag_visible|Flag_variable,"hld",HLD,PFA_DOVARIABLE
   2              	>>  .p2align 2
   2              	>> VE_HLD:
   2 12d4 B0120000 	>>  .word 99b
   2 12d8 01010000 	>> 99:.word Flag_visible|Flag_variable
   2 12dc 03       	>>  .byte 8f-7f
   2 12dd 686C64   	>> 7:.ascii "hld"
   2              	>> 8:.p2align 2
   2 12e0 260F0000 	>>  XT_HLD:.word PFA_DOVARIABLE
   2              	>>  PFA_HLD:
   2 12e4 24020020 	>  .word rampointer
   2              	>  .set rampointer,rampointer+cellsize
   3              	
ARM GAS  lp-stellaris.asm 			page 65


   4              	COLON "hold", HOLD
   4              	>  HEADER Flag_visible,"hold",HOLD,DOCOLON
   4              	>>  .p2align 2
   4              	>> VE_HOLD:
   4 12e8 D8120000 	>>  .word 99b
   4 12ec 00000000 	>> 99:.word Flag_visible
   4 12f0 04       	>>  .byte 8f-7f
   4 12f1 686F6C64 	>> 7:.ascii "hold"
   4 12f5 0000BF   	>> 8:.p2align 2
   4 12f8 8C080000 	>>  XT_HOLD:.word DOCOLON
   4              	>>  PFA_HOLD:
   5 12fc E0120000 	    .word XT_HLD, XT_DUP, XT_FETCH
   5      C8000000 
   5      6C020000 
   6 1308 900B0000 	    .word XT_1MINUS, XT_DUP, XT_TO_R
   6      C8000000 
   6      88010000 
   7 1314 B0000000 	    .word XT_SWAP, XT_STORE, XT_R_FROM
   7      80020000 
   7      A0010000 
   8 1320 28050000 	    .word XT_CSTORE, XT_EXIT
   8      7C000000 
  21              	.include "words/sharp.s"
   1              	
   2              	COLON "<#", L_SHARP
   2              	>  HEADER Flag_visible,"<#",L_SHARP,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_L_SHARP:
   2 1328 EC120000 	>>  .word 99b
   2 132c 00000000 	>> 99:.word Flag_visible
   2 1330 02       	>>  .byte 8f-7f
   2 1331 3C23     	>> 7:.ascii "<#"
   2 1333 00       	>> 8:.p2align 2
   2 1334 8C080000 	>>  XT_L_SHARP:.word DOCOLON
   2              	>>  PFA_L_SHARP:
   3              	
   4 1338 78120000 	    .word XT_PAD, XT_HLD, XT_STORE
   4      E0120000 
   4      80020000 
   5 1344 7C000000 	    .word XT_EXIT
   6              	
   7              	COLON "#", SHARP
   7              	>  HEADER Flag_visible,"#",SHARP,DOCOLON
   7              	>>  .p2align 2
   7              	>> VE_SHARP:
   7 1348 2C130000 	>>  .word 99b
   7 134c 00000000 	>> 99:.word Flag_visible
   7 1350 01       	>>  .byte 8f-7f
   7 1351 23       	>> 7:.ascii "#"
   7 1352 00BF     	>> 8:.p2align 2
   7 1354 8C080000 	>>  XT_SHARP:.word DOCOLON
   7              	>>  PFA_SHARP:
   8              	
   9 1358 340B0000 	    .word XT_BASE, XT_FETCH
   9      6C020000 
  10 1360 44090000 	    .word XT_UDSLASHMOD, XT_ROT
  10      10010000 
ARM GAS  lp-stellaris.asm 			page 66


  11 1368 D20F0000 	    .word XT_DOLITERAL, 9
  11      09000000 
  12 1370 F8000000 	    .word XT_OVER, XT_LESS
  12      C8050000 
  13 1378 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_SHARP1
  13      8C130000 
  14 1380 D20F0000 	    .word XT_DOLITERAL, 7, XT_PLUS
  14      07000000 
  14      480B0000 
  15              	PFA_SHARP1:
  16 138c D20F0000 	    .word XT_DOLITERAL, 48, XT_PLUS
  16      30000000 
  16      480B0000 
  17 1398 F8120000 	    .word XT_HOLD, XT_EXIT
  17      7C000000 
  18              	
  19              	COLON "#s", SHARP_S
  19              	>  HEADER Flag_visible,"#s",SHARP_S,DOCOLON
  19              	>>  .p2align 2
  19              	>> VE_SHARP_S:
  19 13a0 4C130000 	>>  .word 99b
  19 13a4 00000000 	>> 99:.word Flag_visible
  19 13a8 02       	>>  .byte 8f-7f
  19 13a9 2373     	>> 7:.ascii "#s"
  19 13ab 00       	>> 8:.p2align 2
  19 13ac 8C080000 	>>  XT_SHARP_S:.word DOCOLON
  19              	>>  PFA_SHARP_S:
  20 13b0 54130000 	    .word XT_SHARP, XT_2DUP, XT_OR
  20      E8080000 
  20      E8030000 
  21 13bc 40050000 	    .word XT_ZEROEQUAL, XT_DOCONDBRANCH, PFA_SHARP_S
  21      BE0F0000 
  21      B0130000 
  22 13c8 7C000000 	    .word XT_EXIT
  23              	
  24              	COLON "#>", SHARP_G
  24              	>  HEADER Flag_visible,"#>",SHARP_G,DOCOLON
  24              	>>  .p2align 2
  24              	>> VE_SHARP_G:
  24 13cc A4130000 	>>  .word 99b
  24 13d0 00000000 	>> 99:.word Flag_visible
  24 13d4 02       	>>  .byte 8f-7f
  24 13d5 233E     	>> 7:.ascii "#>"
  24 13d7 00       	>> 8:.p2align 2
  24 13d8 8C080000 	>>  XT_SHARP_G:.word DOCOLON
  24              	>>  PFA_SHARP_G:
  25 13dc 3C070000 	    .word XT_2DROP, XT_HLD, XT_FETCH
  25      E0120000 
  25      6C020000 
  26 13e8 78120000 	    .word XT_PAD, XT_OVER, XT_MINUS
  26      F8000000 
  26      600B0000 
  27 13f4 7C000000 	    .word XT_EXIT
  22              	.include "words/sign.s"
   1              	
   2              	COLON "sign", SIGN
   2              	>  HEADER Flag_visible,"sign",SIGN,DOCOLON
ARM GAS  lp-stellaris.asm 			page 67


   2              	>>  .p2align 2
   2              	>> VE_SIGN:
   2 13f8 D0130000 	>>  .word 99b
   2 13fc 00000000 	>> 99:.word Flag_visible
   2 1400 04       	>>  .byte 8f-7f
   2 1401 7369676E 	>> 7:.ascii "sign"
   2 1405 0000BF   	>> 8:.p2align 2
   2 1408 8C080000 	>>  XT_SIGN:.word DOCOLON
   2              	>>  PFA_SIGN:
   3 140c 70050000 	    .word XT_ZEROLESS
   4 1410 BE0F0000 	    .word XT_DOCONDBRANCH
   5 1414 24140000 	    .word PFA_SIGN1
   6 1418 D20F0000 	    .word XT_DOLITERAL
   7 141c 2D000000 	    .word 45 
   8 1420 F8120000 	    .word XT_HOLD
   9              	PFA_SIGN1:
  10 1424 7C000000 	    .word XT_EXIT
  23              	.include "words/dot.s"
   1              	
   2              	COLON ".", DOT
   2              	>  HEADER Flag_visible,".",DOT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DOT:
   2 1428 FC130000 	>>  .word 99b
   2 142c 00000000 	>> 99:.word Flag_visible
   2 1430 01       	>>  .byte 8f-7f
   2 1431 2E       	>> 7:.ascii "."
   2 1432 00BF     	>> 8:.p2align 2
   2 1434 8C080000 	>>  XT_DOT:.word DOCOLON
   2              	>>  PFA_DOT:
   3 1438 180B0000 	   .word XT_S2D, XT_DDOT, XT_EXIT
   3      98140000 
   3      7C000000 
  24              	.include "words/d-dot-r.s"
   1              	
   2              	COLON "d.r", DDOTR
   2              	>  HEADER Flag_visible,"d.r",DDOTR,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DDOTR:
   2 1444 2C140000 	>>  .word 99b
   2 1448 00000000 	>> 99:.word Flag_visible
   2 144c 03       	>>  .byte 8f-7f
   2 144d 642E72   	>> 7:.ascii "d.r"
   2              	>> 8:.p2align 2
   2 1450 8C080000 	>>  XT_DDOTR:.word DOCOLON
   2              	>>  PFA_DDOTR:
   3 1454 88010000 	.word XT_TO_R, XT_TUCK, XT_DABS, XT_L_SHARP
   3      50010000 
   3      44080000 
   3      34130000 
   4 1464 AC130000 	.word XT_SHARP_S, XT_ROT, XT_SIGN, XT_SHARP_G
   4      10010000 
   4      08140000 
   4      D8130000 
   5 1474 A0010000 	.word XT_R_FROM, XT_OVER, XT_MINUS, XT_SPACES
   5      F8000000 
   5      600B0000 
ARM GAS  lp-stellaris.asm 			page 68


   5      AC110000 
   6 1484 9C280000 	.word XT_TYPE, XT_EXIT
   6      7C000000 
  25              	.include "words/d-dot.s"
   1              	
   2              	COLON "d.", DDOT
   2              	>  HEADER Flag_visible,"d.",DDOT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DDOT:
   2 148c 48140000 	>>  .word 99b
   2 1490 00000000 	>> 99:.word Flag_visible
   2 1494 02       	>>  .byte 8f-7f
   2 1495 642E     	>> 7:.ascii "d."
   2 1497 00       	>> 8:.p2align 2
   2 1498 8C080000 	>>  XT_DDOT:.word DOCOLON
   2              	>>  PFA_DDOT:
   3 149c 3C100000 	.word  XT_ZERO, XT_DDOTR, XT_SPACE, XT_EXIT
   3      50140000 
   3      8C110000 
   3      7C000000 
  26              	.include "words/u-dot.s"
   1              	COLON "u.", UDOT
   1              	>  HEADER Flag_visible,"u.",UDOT,DOCOLON
   1              	>>  .p2align 2
   1              	>> VE_UDOT:
   1 14ac 90140000 	>>  .word 99b
   1 14b0 00000000 	>> 99:.word Flag_visible
   1 14b4 02       	>>  .byte 8f-7f
   1 14b5 752E     	>> 7:.ascii "u."
   1 14b7 00       	>> 8:.p2align 2
   1 14b8 8C080000 	>>  XT_UDOT:.word DOCOLON
   1              	>>  PFA_UDOT:
   2 14bc 3C100000 	.word  XT_ZERO, XT_UDDOT, XT_EXIT
   2      D4140000 
   2      7C000000 
  27              	.include "words/ud-dot.s"
   1              	
   2              	COLON "ud.", UDDOT
   2              	>  HEADER Flag_visible,"ud.",UDDOT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_UDDOT:
   2 14c8 B0140000 	>>  .word 99b
   2 14cc 00000000 	>> 99:.word Flag_visible
   2 14d0 03       	>>  .byte 8f-7f
   2 14d1 75642E   	>> 7:.ascii "ud."
   2              	>> 8:.p2align 2
   2 14d4 8C080000 	>>  XT_UDDOT:.word DOCOLON
   2              	>>  PFA_UDDOT:
   3 14d8 3C100000 	.word XT_ZERO, XT_UDDOTR, XT_SPACE, XT_EXIT
   3      F8140000 
   3      8C110000 
   3      7C000000 
  28              	.include "words/ud-dot-r.s"
   1              	
   2              	COLON "ud.r", UDDOTR
   2              	>  HEADER Flag_visible,"ud.r",UDDOTR,DOCOLON
   2              	>>  .p2align 2
ARM GAS  lp-stellaris.asm 			page 69


   2              	>> VE_UDDOTR:
   2 14e8 CC140000 	>>  .word 99b
   2 14ec 00000000 	>> 99:.word Flag_visible
   2 14f0 04       	>>  .byte 8f-7f
   2 14f1 75642E72 	>> 7:.ascii "ud.r"
   2 14f5 0000BF   	>> 8:.p2align 2
   2 14f8 8C080000 	>>  XT_UDDOTR:.word DOCOLON
   2              	>>  PFA_UDDOTR:
   3 14fc 88010000 	.word  XT_TO_R, XT_L_SHARP, XT_SHARP_S
   3      34130000 
   3      AC130000 
   4 1508 D8130000 	.word  XT_SHARP_G, XT_R_FROM,  XT_OVER
   4      A0010000 
   4      F8000000 
   5 1514 600B0000 	.word  XT_MINUS, XT_SPACES, XT_TYPE, XT_EXIT
   5      AC110000 
   5      9C280000 
   5      7C000000 
  29              	
  30              	.include "words/dot-s.s"
   1              	
   2              	COLON ".s", DOTS
   2              	>  HEADER Flag_visible,".s",DOTS,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DOTS:
   2 1524 EC140000 	>>  .word 99b
   2 1528 00000000 	>> 99:.word Flag_visible
   2 152c 02       	>>  .byte 8f-7f
   2 152d 2E73     	>> 7:.ascii ".s"
   2 152f 00       	>> 8:.p2align 2
   2 1530 8C080000 	>>  XT_DOTS:.word DOCOLON
   2              	>>  PFA_DOTS:
   3              	
   4 1534 6C030000 	    .word XT_DEPTH
   5 1538 B8140000 	    .word XT_UDOT
   6 153c 8C110000 	    .word XT_SPACE
   7 1540 6C030000 	    .word XT_DEPTH
   8 1544 3C100000 	    .word XT_ZERO
   9 1548 10270000 	    .word XT_QDOCHECK, XT_DOCONDBRANCH,PFA_DOTS2
   9      BE0F0000 
   9      6C150000 
  10 1554 440E0000 	    .word XT_DODO
  11              	PFA_DOTS1:
  12 1558 B40E0000 	    .word XT_I
  13 155c 70010000 	    .word XT_PICK
  14 1560 34140000 	    .word XT_DOT
  15 1564 620E0000 	    .word XT_DOLOOP,PFA_DOTS1
  15      58150000 
  16              	PFA_DOTS2:
  17 156c 7C000000 	    .word XT_EXIT
  31              	
  32              	.include "words/refill.s"
   1              	
   2              	DEFER "refill", REFILL, XT_REFILLTIB
   2              	>  HEADER Flag_visible|Flag_defer|Flag_init,"refill",REFILL,PFA_DODEFER
   2              	>>  .p2align 2
   2              	>> VE_REFILL:
ARM GAS  lp-stellaris.asm 			page 70


   2 1570 28150000 	>>  .word 99b
   2 1574 C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   2 1578 06       	>>  .byte 8f-7f
   2 1579 72656669 	>> 7:.ascii "refill"
   2      6C6C
   2 157f 00       	>> 8:.p2align 2
   2 1580 500F0000 	>>  XT_REFILL:.word PFA_DODEFER
   2              	>>  PFA_REFILL:
   2 1584 28020020 	>  .word rampointer
   2              	>  .equ DEFER_RAM_REFILL,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 1588 A8150000 	>  .word XT_REFILLTIB
   2 158c 6C020000 	>  .word XT_FETCH
   2 1590 80020000 	>  .word XT_STORE
   3              	
   4              	COLON "refill-tib", REFILLTIB
   4              	>  HEADER Flag_visible,"refill-tib",REFILLTIB,DOCOLON
   4              	>>  .p2align 2
   4              	>> VE_REFILLTIB:
   4 1594 74150000 	>>  .word 99b
   4 1598 00000000 	>> 99:.word Flag_visible
   4 159c 0A       	>>  .byte 8f-7f
   4 159d 72656669 	>> 7:.ascii "refill-tib"
   4      6C6C2D74 
   4      6962
   4 15a7 00       	>> 8:.p2align 2
   4 15a8 8C080000 	>>  XT_REFILLTIB:.word DOCOLON
   4              	>>  PFA_REFILLTIB:
   5              	
   6 15ac 380C0000 	    .word XT_TIB
   7 15b0 D20F0000 	    .word XT_DOLITERAL
   8 15b4 60000000 	    .word refill_buf_size
   9 15b8 E8150000 	    .word XT_ACCEPT
  10 15bc 240C0000 	    .word XT_NUMBERTIB
  11 15c0 80020000 	    .word XT_STORE
  12 15c4 3C100000 	    .word XT_ZERO
  13 15c8 E8320000 	    .word XT_TO_IN
  14 15cc 80020000 	    .word XT_STORE
  15 15d0 A4100000 	    .word XT_TRUE 
  16 15d4 7C000000 	    .word XT_EXIT
  33              	.include "words/accept.s"
   1              	
   2              	COLON "accept", ACCEPT
   2              	>  HEADER Flag_visible,"accept",ACCEPT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_ACCEPT:
   2 15d8 98150000 	>>  .word 99b
   2 15dc 00000000 	>> 99:.word Flag_visible
   2 15e0 06       	>>  .byte 8f-7f
   2 15e1 61636365 	>> 7:.ascii "accept"
   2      7074
   2 15e7 00       	>> 8:.p2align 2
   2 15e8 8C080000 	>>  XT_ACCEPT:.word DOCOLON
   2              	>>  PFA_ACCEPT:
   3              	
   4 15ec F8000000 	        .word XT_OVER,XT_PLUS,XT_OVER
   4      480B0000 
ARM GAS  lp-stellaris.asm 			page 71


   4      F8000000 
   5 15f8 240D0000 	ACC1:   .word XT_KEY,XT_DUP,XT_CRLFQ,XT_ZEROEQUAL,XT_DOCONDBRANCH
   5      C8000000 
   5      28170000 
   5      40050000 
   5      BE0F0000 
   6 160c D8160000 	        .word ACC5
   7 1610 C8000000 	        .word XT_DUP,XT_DOLITERAL,8,XT_EQUAL,XT_DOCONDBRANCH
   7      D20F0000 
   7      08000000 
   7      54060000 
   7      BE0F0000 
   8 1624 70160000 	        .word ACC3
   9 1628 98000000 	        .word XT_DROP,XT_ROT,XT_2DUP,XT_GREATER,XT_TO_R,XT_ROT,XT_ROT,XT_R_FROM,XT_DOCONDBRANCH
   9      10010000 
   9      E8080000 
   9      E8050000 
   9      88010000 
  10 164c 68160000 		.word ACC6
  11 1650 F8160000 		.word XT_BS,XT_1MINUS,XT_TO_R,XT_OVER,XT_R_FROM,XT_UMAX
  11      900B0000 
  11      88010000 
  11      F8000000 
  11      A0010000 
  12 1668 B40F0000 	ACC6:   .word XT_DOBRANCH
  13 166c D0160000 	        .word ACC4
  14              	ACC3:    
  15 1670 C8000000 		.word XT_DUP,XT_BL,XT_LESS,XT_DOCONDBRANCH
  15      74110000 
  15      C8050000 
  15      BE0F0000 
  16 1680 8C160000 	        .word PFA_ACCEPT6
  17 1684 98000000 	          .word XT_DROP
  18 1688 74110000 	          .word XT_BL
  19              	PFA_ACCEPT6:
  20 168c 88010000 		.word XT_TO_R,XT_2DUP,XT_GREATER,XT_R_FROM,XT_SWAP,XT_DOCONDBRANCH
  20      E8080000 
  20      E8050000 
  20      A0010000 
  20      B0000000 
  21 16a4 CC160000 	        .word ACC7
  22 16a8 C8000000 	            .word XT_DUP,XT_EMIT,XT_OVER,XT_CSTORE,XT_1PLUS,XT_OVER,XT_UMIN
  22      880D0000 
  22      F8000000 
  22      28050000 
  22      780B0000 
  23 16c4 B40F0000 		    .word XT_DOBRANCH
  24 16c8 D0160000 		    .word ACC4 
  25 16cc 98000000 	ACC7:   .word XT_DROP
  26 16d0 B40F0000 	ACC4:   .word XT_DOBRANCH
  27 16d4 F8150000 	        .word ACC1
  28 16d8 98000000 	ACC5:   .word XT_DROP,XT_NIP,XT_SWAP,XT_MINUS,XT_EXIT
  28      E0000000 
  28      B0000000 
  28      600B0000 
  28      7C000000 
  29              	
ARM GAS  lp-stellaris.asm 			page 72


  30              	
  31              	COLON "bs", BS
  31              	>  HEADER Flag_visible,"bs",BS,DOCOLON
  31              	>>  .p2align 2
  31              	>> VE_BS:
  31 16ec DC150000 	>>  .word 99b
  31 16f0 00000000 	>> 99:.word Flag_visible
  31 16f4 02       	>>  .byte 8f-7f
  31 16f5 6273     	>> 7:.ascii "bs"
  31 16f7 00       	>> 8:.p2align 2
  31 16f8 8C080000 	>>  XT_BS:.word DOCOLON
  31              	>>  PFA_BS:
  32 16fc D20F0000 	    .word XT_DOLITERAL
  33 1700 08000000 	    .word 8
  34 1704 C8000000 	    .word XT_DUP
  35 1708 880D0000 	    .word XT_EMIT
  36 170c 8C110000 	    .word XT_SPACE
  37 1710 880D0000 	    .word XT_EMIT
  38 1714 7C000000 	    .word XT_EXIT
  39              	
  40              	COLON "?crlf", CRLFQ
  40              	>  HEADER Flag_visible,"?crlf",CRLFQ,DOCOLON
  40              	>>  .p2align 2
  40              	>> VE_CRLFQ:
  40 1718 F0160000 	>>  .word 99b
  40 171c 00000000 	>> 99:.word Flag_visible
  40 1720 05       	>>  .byte 8f-7f
  40 1721 3F63726C 	>> 7:.ascii "?crlf"
  40      66
  40 1726 00BF     	>> 8:.p2align 2
  40 1728 8C080000 	>>  XT_CRLFQ:.word DOCOLON
  40              	>>  PFA_CRLFQ:
  41              	
  42 172c C8000000 	    .word XT_DUP
  43 1730 D20F0000 	    .word XT_DOLITERAL
  44 1734 0D000000 	    .word 13
  45 1738 54060000 	    .word XT_EQUAL
  46 173c B0000000 	    .word XT_SWAP
  47 1740 D20F0000 	    .word XT_DOLITERAL
  48 1744 0A000000 	    .word 10
  49 1748 54060000 	    .word XT_EQUAL
  50 174c E8030000 	    .word XT_OR
  51 1750 7C000000 	    .word XT_EXIT
  34              	.include "words/prompt-error.s"
   1              	
   2              	DEFER ".error", PROMPTERROR, XT_PROMPTERROR_DEFAULT
   2              	>  HEADER Flag_visible|Flag_defer|Flag_init,".error",PROMPTERROR,PFA_DODEFER
   2              	>>  .p2align 2
   2              	>> VE_PROMPTERROR:
   2 1754 1C170000 	>>  .word 99b
   2 1758 C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   2 175c 06       	>>  .byte 8f-7f
   2 175d 2E657272 	>> 7:.ascii ".error"
   2      6F72
   2 1763 00       	>> 8:.p2align 2
   2 1764 500F0000 	>>  XT_PROMPTERROR:.word PFA_DODEFER
   2              	>>  PFA_PROMPTERROR:
ARM GAS  lp-stellaris.asm 			page 73


   2 1768 2C020020 	>  .word rampointer
   2              	>  .equ DEFER_RAM_PROMPTERROR,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 176c 78170000 	>  .word XT_PROMPTERROR_DEFAULT
   2 1770 6C020000 	>  .word XT_FETCH
   2 1774 80020000 	>  .word XT_STORE
   3              	
   4              	NONAME PROMPTERROR_DEFAULT
   4 1778 8C080000 	>  XT_PROMPTERROR_DEFAULT:.word DOCOLON
   4              	>  PFA_PROMPTERROR_DEFAULT:
   5              	    STRING " ?? "
   5 177c 020F0000 	>  .word XT_DOSLITERAL
   5 1780 04       	>  .byte 8f-7f
   5 1781 203F3F20 	> 7:.ascii " ?? "
   5 1785 0000BF   	> 8:.p2align 2
   6 1788 9C280000 	    .word XT_TYPE
   7 178c 340B0000 	    .word XT_BASE
   8 1790 6C020000 	    .word XT_FETCH
   9 1794 88010000 	    .word XT_TO_R
  10 1798 30120000 	    .word XT_DECIMAL
  11 179c 34140000 	    .word XT_DOT
  12 17a0 E8320000 	    .word XT_TO_IN
  13 17a4 6C020000 	    .word XT_FETCH
  14 17a8 34140000 	    .word XT_DOT
  15 17ac A0010000 	    .word XT_R_FROM
  16 17b0 340B0000 	    .word XT_BASE
  17 17b4 80020000 	    .word XT_STORE
  18 17b8 7C000000 	    .word XT_EXIT
  35              	.include "words/prompt-input.s"
   1              	
   2              	DEFER ".input", PROMPTINPUT, XT_PROMPTINPUT_DEFAULT
   2              	>  HEADER Flag_visible|Flag_defer|Flag_init,".input",PROMPTINPUT,PFA_DODEFER
   2              	>>  .p2align 2
   2              	>> VE_PROMPTINPUT:
   2 17bc 58170000 	>>  .word 99b
   2 17c0 C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   2 17c4 06       	>>  .byte 8f-7f
   2 17c5 2E696E70 	>> 7:.ascii ".input"
   2      7574
   2 17cb 00       	>> 8:.p2align 2
   2 17cc 500F0000 	>>  XT_PROMPTINPUT:.word PFA_DODEFER
   2              	>>  PFA_PROMPTINPUT:
   2 17d0 30020020 	>  .word rampointer
   2              	>  .equ DEFER_RAM_PROMPTINPUT,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 17d4 E0170000 	>  .word XT_PROMPTINPUT_DEFAULT
   2 17d8 6C020000 	>  .word XT_FETCH
   2 17dc 80020000 	>  .word XT_STORE
   3              	
   4              	NONAME PROMPTINPUT_DEFAULT
   4 17e0 8C080000 	>  XT_PROMPTINPUT_DEFAULT:.word DOCOLON
   4              	>  PFA_PROMPTINPUT_DEFAULT:
   5 17e4 48110000 	    .word XT_CR
   6 17e8 7C000000 	    .word XT_EXIT
  36              	.include "words/prompt-ok.s"
   1              	
   2              	DEFER ".ok", PROMPTOK, XT_PROMPTOKDEFAULT
ARM GAS  lp-stellaris.asm 			page 74


   2              	>  HEADER Flag_visible|Flag_defer|Flag_init,".ok",PROMPTOK,PFA_DODEFER
   2              	>>  .p2align 2
   2              	>> VE_PROMPTOK:
   2 17ec C0170000 	>>  .word 99b
   2 17f0 C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   2 17f4 03       	>>  .byte 8f-7f
   2 17f5 2E6F6B   	>> 7:.ascii ".ok"
   2              	>> 8:.p2align 2
   2 17f8 500F0000 	>>  XT_PROMPTOK:.word PFA_DODEFER
   2              	>>  PFA_PROMPTOK:
   2 17fc 34020020 	>  .word rampointer
   2              	>  .equ DEFER_RAM_PROMPTOK,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 1800 0C180000 	>  .word XT_PROMPTOKDEFAULT
   2 1804 6C020000 	>  .word XT_FETCH
   2 1808 80020000 	>  .word XT_STORE
   3              	
   4              	NONAME PROMPTOKDEFAULT
   4 180c 8C080000 	>  XT_PROMPTOKDEFAULT:.word DOCOLON
   4              	>  PFA_PROMPTOKDEFAULT:
   5 1810 0C0C0000 	    .word XT_STATE,XT_FETCH,XT_DROP
   5      6C020000 
   5      98000000 
   6              	    STRING " ok"
   6 181c 020F0000 	>  .word XT_DOSLITERAL
   6 1820 03       	>  .byte 8f-7f
   6 1821 206F6B   	> 7:.ascii " ok"
   6              	> 8:.p2align 2
   7 1824 9C280000 	    .word XT_TYPE
   8 1828 7C000000 	    .word XT_EXIT
  37              	.include "words/prompt-ready.s"
   1              	
   2              	DEFER ".ready", PROMPTREADY, XT_PROMPTREADYDEFAULT
   2              	>  HEADER Flag_visible|Flag_defer|Flag_init,".ready",PROMPTREADY,PFA_DODEFER
   2              	>>  .p2align 2
   2              	>> VE_PROMPTREADY:
   2 182c F0170000 	>>  .word 99b
   2 1830 C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   2 1834 06       	>>  .byte 8f-7f
   2 1835 2E726561 	>> 7:.ascii ".ready"
   2      6479
   2 183b 00       	>> 8:.p2align 2
   2 183c 500F0000 	>>  XT_PROMPTREADY:.word PFA_DODEFER
   2              	>>  PFA_PROMPTREADY:
   2 1840 38020020 	>  .word rampointer
   2              	>  .equ DEFER_RAM_PROMPTREADY,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 1844 50180000 	>  .word XT_PROMPTREADYDEFAULT
   2 1848 6C020000 	>  .word XT_FETCH
   2 184c 80020000 	>  .word XT_STORE
   3              	
   4              	NONAME PROMPTREADYDEFAULT
   4 1850 8C080000 	>  XT_PROMPTREADYDEFAULT:.word DOCOLON
   4              	>  PFA_PROMPTREADYDEFAULT:
   5              	
   6 1854 48110000 	    .word XT_CR
   7              	    STRING "> "
ARM GAS  lp-stellaris.asm 			page 75


   7 1858 020F0000 	>  .word XT_DOSLITERAL
   7 185c 02       	>  .byte 8f-7f
   7 185d 3E20     	> 7:.ascii "> "
   7 185f 00       	> 8:.p2align 2
   8 1860 9C280000 	    .word XT_TYPE
   9 1864 7C000000 	    .word XT_EXIT
  38              	
  39              	.include "words/catch.s"
   1              	
   2              	USER "handler", HANDLER, USER_HANDLER
   2              	>  HEADER Flag_visible|Flag_variable,"handler",HANDLER,PFA_DOUSER
   2              	>>  .p2align 2
   2              	>> VE_HANDLER:
   2 1868 30180000 	>>  .word 99b
   2 186c 01010000 	>> 99:.word Flag_visible|Flag_variable
   2 1870 07       	>>  .byte 8f-7f
   2 1871 68616E64 	>> 7:.ascii "handler"
   2      6C6572
   2              	>> 8:.p2align 2
   2 1878 5E0F0000 	>>  XT_HANDLER:.word PFA_DOUSER
   2              	>>  PFA_HANDLER:
   2 187c 14000000 	>  .word USER_HANDLER
   2              	>  .equ USER_HANDLER,USER_HANDLER
   3              	
   4              	COLON "catch", CATCH
   4              	>  HEADER Flag_visible,"catch",CATCH,DOCOLON
   4              	>>  .p2align 2
   4              	>> VE_CATCH:
   4 1880 6C180000 	>>  .word 99b
   4 1884 00000000 	>> 99:.word Flag_visible
   4 1888 05       	>>  .byte 8f-7f
   4 1889 63617463 	>> 7:.ascii "catch"
   4      68
   4 188e 00BF     	>> 8:.p2align 2
   4 1890 8C080000 	>>  XT_CATCH:.word DOCOLON
   4              	>>  PFA_CATCH:
   5              	
   6 1894 14020000 	    .word XT_SP_FETCH
   7 1898 88010000 	    .word XT_TO_R
   8 189c 78180000 	    .word XT_HANDLER
   9 18a0 6C020000 	    .word XT_FETCH
  10 18a4 88010000 	    .word XT_TO_R
  11 18a8 D0010000 	    .word XT_RP_FETCH
  12 18ac 78180000 	    .word XT_HANDLER
  13 18b0 80020000 	    .word XT_STORE
  14 18b4 0C0D0000 	    .word XT_EXECUTE
  15 18b8 A0010000 	    .word XT_R_FROM
  16 18bc 78180000 	    .word XT_HANDLER
  17 18c0 80020000 	    .word XT_STORE
  18 18c4 A0010000 	    .word XT_R_FROM
  19 18c8 98000000 	    .word XT_DROP
  20 18cc 3C100000 	    .word XT_ZERO
  21 18d0 7C000000 	    .word XT_EXIT
  40              	.include "words/throw.s"
   1              	COLON "throw", THROW
   1              	>  HEADER Flag_visible,"throw",THROW,DOCOLON
   1              	>>  .p2align 2
ARM GAS  lp-stellaris.asm 			page 76


   1              	>> VE_THROW:
   1 18d4 84180000 	>>  .word 99b
   1 18d8 00000000 	>> 99:.word Flag_visible
   1 18dc 05       	>>  .byte 8f-7f
   1 18dd 7468726F 	>> 7:.ascii "throw"
   1      77
   1 18e2 00BF     	>> 8:.p2align 2
   1 18e4 8C080000 	>>  XT_THROW:.word DOCOLON
   1              	>>  PFA_THROW:
   2              	
   3 18e8 30010000 	    .word XT_QDUP
   4 18ec BE0F0000 	    .word XT_DOCONDBRANCH,PFA_THROW1
   4      24190000 
   5 18f4 78180000 	      .word XT_HANDLER
   6 18f8 6C020000 	      .word XT_FETCH
   7 18fc E8010000 	      .word XT_RP_STORE
   8 1900 A0010000 	      .word XT_R_FROM
   9 1904 78180000 	      .word XT_HANDLER
  10 1908 80020000 	      .word XT_STORE
  11 190c A0010000 	      .word XT_R_FROM
  12 1910 B0000000 	      .word XT_SWAP
  13 1914 88010000 	      .word XT_TO_R
  14 1918 2C020000 	      .word XT_SP_STORE
  15 191c 98000000 	      .word XT_DROP
  16 1920 A0010000 	      .word XT_R_FROM    
  17              	PFA_THROW1:
  18 1924 7C000000 	    .word XT_EXIT
  19              	
  41              	.include "words/source.s"
   1              	
   2              	DEFER "source", SOURCE, XT_SOURCETIB
   2              	>  HEADER Flag_visible|Flag_defer|Flag_init,"source",SOURCE,PFA_DODEFER
   2              	>>  .p2align 2
   2              	>> VE_SOURCE:
   2 1928 D8180000 	>>  .word 99b
   2 192c C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   2 1930 06       	>>  .byte 8f-7f
   2 1931 736F7572 	>> 7:.ascii "source"
   2      6365
   2 1937 00       	>> 8:.p2align 2
   2 1938 500F0000 	>>  XT_SOURCE:.word PFA_DODEFER
   2              	>>  PFA_SOURCE:
   2 193c 3C020020 	>  .word rampointer
   2              	>  .equ DEFER_RAM_SOURCE,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 1940 60190000 	>  .word XT_SOURCETIB
   2 1944 6C020000 	>  .word XT_FETCH
   2 1948 80020000 	>  .word XT_STORE
   3              	
   4              	COLON "source-tib", SOURCETIB
   4              	>  HEADER Flag_visible,"source-tib",SOURCETIB,DOCOLON
   4              	>>  .p2align 2
   4              	>> VE_SOURCETIB:
   4 194c 2C190000 	>>  .word 99b
   4 1950 00000000 	>> 99:.word Flag_visible
   4 1954 0A       	>>  .byte 8f-7f
   4 1955 736F7572 	>> 7:.ascii "source-tib"
ARM GAS  lp-stellaris.asm 			page 77


   4      63652D74 
   4      6962
   4 195f 00       	>> 8:.p2align 2
   4 1960 8C080000 	>>  XT_SOURCETIB:.word DOCOLON
   4              	>>  PFA_SOURCETIB:
   5              	
   6 1964 380C0000 	    .word XT_TIB
   7 1968 240C0000 	    .word XT_NUMBERTIB
   8 196c 6C020000 	    .word XT_FETCH
   9 1970 7C000000 	    .word XT_EXIT
  42              	.include "words/q-stack.s"
   1              	COLON "?stack", QSTACK
   1              	>  HEADER Flag_visible,"?stack",QSTACK,DOCOLON
   1              	>>  .p2align 2
   1              	>> VE_QSTACK:
   1 1974 50190000 	>>  .word 99b
   1 1978 00000000 	>> 99:.word Flag_visible
   1 197c 06       	>>  .byte 8f-7f
   1 197d 3F737461 	>> 7:.ascii "?stack"
   1      636B
   1 1983 00       	>> 8:.p2align 2
   1 1984 8C080000 	>>  XT_QSTACK:.word DOCOLON
   1              	>>  PFA_QSTACK:
   2              	
   3 1988 6C030000 	    .word XT_DEPTH
   4 198c 70050000 	    .word XT_ZEROLESS
   5 1990 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_QSTACK1
   5      A4190000 
   6 1998 D20F0000 	      .word XT_DOLITERAL
   7 199c FCFFFFFF 	      .word -4
   8 19a0 E4180000 	      .word XT_THROW
   9              	PFA_QSTACK1:
  10 19a4 7C000000 	    .word XT_EXIT
  43              	.include "words/cscan.s"
   1              	
   2              	COLON "cscan", CSCAN
   2              	>  HEADER Flag_visible,"cscan",CSCAN,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_CSCAN:
   2 19a8 78190000 	>>  .word 99b
   2 19ac 00000000 	>> 99:.word Flag_visible
   2 19b0 05       	>>  .byte 8f-7f
   2 19b1 63736361 	>> 7:.ascii "cscan"
   2      6E
   2 19b6 00BF     	>> 8:.p2align 2
   2 19b8 8C080000 	>>  XT_CSCAN:.word DOCOLON
   2              	>>  PFA_CSCAN:
   3 19bc 88010000 	    .word XT_TO_R
   4 19c0 F8000000 	    .word XT_OVER
   5              	PFA_CSCAN1:
   6 19c4 C8000000 	    .word XT_DUP
   7 19c8 14050000 	    .word XT_CFETCH
   8 19cc B8010000 	    .word XT_R_FETCH
   9 19d0 54060000 	    .word XT_EQUAL
  10 19d4 40050000 	    .word XT_ZEROEQUAL
  11 19d8 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_CSCAN2
  11      0C1A0000 
ARM GAS  lp-stellaris.asm 			page 78


  12 19e0 B0000000 	      .word XT_SWAP
  13 19e4 900B0000 	      .word XT_1MINUS
  14 19e8 B0000000 	      .word XT_SWAP
  15 19ec F8000000 	      .word XT_OVER
  16 19f0 70050000 	      .word XT_ZEROLESS 
  17 19f4 40050000 	      .word XT_ZEROEQUAL
  18 19f8 BE0F0000 	      .word XT_DOCONDBRANCH, PFA_CSCAN2
  18      0C1A0000 
  19 1a00 780B0000 	        .word XT_1PLUS
  20 1a04 B40F0000 	        .word XT_DOBRANCH, PFA_CSCAN1
  20      C4190000 
  21              	PFA_CSCAN2:
  22 1a0c E0000000 	    .word XT_NIP
  23 1a10 F8000000 	    .word XT_OVER
  24 1a14 600B0000 	    .word XT_MINUS
  25 1a18 A0010000 	    .word XT_R_FROM
  26 1a1c 98000000 	    .word XT_DROP
  27 1a20 7C000000 	    .word XT_EXIT
  44              	.include "words/cskip.s"
   1              	
   2              	COLON "cskip", CSKIP
   2              	>  HEADER Flag_visible,"cskip",CSKIP,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_CSKIP:
   2 1a24 AC190000 	>>  .word 99b
   2 1a28 00000000 	>> 99:.word Flag_visible
   2 1a2c 05       	>>  .byte 8f-7f
   2 1a2d 63736B69 	>> 7:.ascii "cskip"
   2      70
   2 1a32 00BF     	>> 8:.p2align 2
   2 1a34 8C080000 	>>  XT_CSKIP:.word DOCOLON
   2              	>>  PFA_CSKIP:
   3              	
   4 1a38 88010000 	    .word XT_TO_R
   5              	PFA_CSKIP1:
   6 1a3c C8000000 	    .word XT_DUP      
   7 1a40 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_CSKIP2
   7      741A0000 
   8 1a48 F8000000 	    .word XT_OVER         
   9 1a4c 14050000 	    .word XT_CFETCH       
  10 1a50 B8010000 	    .word XT_R_FETCH      
  11 1a54 54060000 	    .word XT_EQUAL        
  12 1a58 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_CSKIP2
  12      741A0000 
  13 1a60 D20F0000 	    .word XT_DOLITERAL,1
  13      01000000 
  14 1a68 4C1B0000 	    .word XT_SLASHSTRING
  15 1a6c B40F0000 	    .word XT_DOBRANCH, PFA_CSKIP1
  15      3C1A0000 
  16              	PFA_CSKIP2:
  17 1a74 A0010000 	    .word XT_R_FROM
  18 1a78 98000000 	    .word XT_DROP          
  19 1a7c 7C000000 	    .word XT_EXIT
  45              	.include "words/parse-name.s"
   1              	
   2              	COLON "parse-name", PARSENAME
   2              	>  HEADER Flag_visible,"parse-name",PARSENAME,DOCOLON
ARM GAS  lp-stellaris.asm 			page 79


   2              	>>  .p2align 2
   2              	>> VE_PARSENAME:
   2 1a80 281A0000 	>>  .word 99b
   2 1a84 00000000 	>> 99:.word Flag_visible
   2 1a88 0A       	>>  .byte 8f-7f
   2 1a89 70617273 	>> 7:.ascii "parse-name"
   2      652D6E61 
   2      6D65
   2 1a93 00       	>> 8:.p2align 2
   2 1a94 8C080000 	>>  XT_PARSENAME:.word DOCOLON
   2              	>>  PFA_PARSENAME:
   3 1a98 74110000 	    .word XT_BL
   4 1a9c A41A0000 	    .word XT_SKIPSCANCHAR
   5 1aa0 7C000000 	    .word XT_EXIT 
   6              	
   7              	NONAME SKIPSCANCHAR
   7 1aa4 8C080000 	>  XT_SKIPSCANCHAR:.word DOCOLON
   7              	>  PFA_SKIPSCANCHAR:
   8 1aa8 88010000 	    .word XT_TO_R
   9 1aac 38190000 	    .word XT_SOURCE 
  10 1ab0 E8320000 	    .word XT_TO_IN 
  11 1ab4 6C020000 	    .word XT_FETCH 
  12 1ab8 4C1B0000 	    .word XT_SLASHSTRING 
  13              	
  14 1abc B8010000 	    .word XT_R_FETCH
  15 1ac0 341A0000 	    .word XT_CSKIP
  16 1ac4 A0010000 	    .word XT_R_FROM
  17 1ac8 B8190000 	    .word XT_CSCAN
  18              	
  19 1acc E8080000 	    .word XT_2DUP
  20 1ad0 480B0000 	    .word XT_PLUS
  21 1ad4 38190000 	    .word XT_SOURCE 
  22 1ad8 98000000 	    .word XT_DROP
  23 1adc 600B0000 	    .word XT_MINUS
  24 1ae0 E8320000 	    .word XT_TO_IN
  25 1ae4 80020000 	    .word XT_STORE
  26 1ae8 7C000000 	    .word XT_EXIT
  46              	.include "words/parse.s"
   1              	
   2              	COLON "parse", PARSE
   2              	>  HEADER Flag_visible,"parse",PARSE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_PARSE:
   2 1aec 841A0000 	>>  .word 99b
   2 1af0 00000000 	>> 99:.word Flag_visible
   2 1af4 05       	>>  .byte 8f-7f
   2 1af5 70617273 	>> 7:.ascii "parse"
   2      65
   2 1afa 00BF     	>> 8:.p2align 2
   2 1afc 8C080000 	>>  XT_PARSE:.word DOCOLON
   2              	>>  PFA_PARSE:
   3 1b00 88010000 	    .word XT_TO_R 
   4 1b04 38190000 	    .word XT_SOURCE
   5 1b08 E8320000 	    .word XT_TO_IN 
   6 1b0c 6C020000 	    .word XT_FETCH
   7 1b10 4C1B0000 	    .word XT_SLASHSTRING 
   8              	
ARM GAS  lp-stellaris.asm 			page 80


   9 1b14 A0010000 	    .word XT_R_FROM
  10 1b18 B8190000 	    .word XT_CSCAN 
  11 1b1c C8000000 	    .word XT_DUP   
  12 1b20 780B0000 	    .word XT_1PLUS
  13 1b24 E8320000 	    .word XT_TO_IN 
  14 1b28 F8040000 	    .word XT_PLUSSTORE
  15 1b2c D20F0000 	    .word XT_DOLITERAL,1
  15      01000000 
  16 1b34 4C1B0000 	    .word XT_SLASHSTRING
  17 1b38 7C000000 	    .word XT_EXIT
  47              	.include "words/slash-string.s"
   1              	
   2              	COLON "/string", SLASHSTRING
   2              	>  HEADER Flag_visible,"/string",SLASHSTRING,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_SLASHSTRING:
   2 1b3c F01A0000 	>>  .word 99b
   2 1b40 00000000 	>> 99:.word Flag_visible
   2 1b44 07       	>>  .byte 8f-7f
   2 1b45 2F737472 	>> 7:.ascii "/string"
   2      696E67
   2              	>> 8:.p2align 2
   2 1b4c 8C080000 	>>  XT_SLASHSTRING:.word DOCOLON
   2              	>>  PFA_SLASHSTRING:
   3              	
   4 1b50 10010000 	    .word XT_ROT
   5 1b54 F8000000 	    .word XT_OVER
   6 1b58 480B0000 	    .word XT_PLUS
   7 1b5c 10010000 	    .word XT_ROT
   8 1b60 10010000 	    .word XT_ROT
   9 1b64 600B0000 	    .word XT_MINUS
  10 1b68 7C000000 	    .word XT_EXIT
  11              	
  48              	
  49              	.include "words/2literal.s"
   1              	
   2              	IMMED "2literal", 2LITERAL
   2              	>  Header Flag_visible|Flag_immediate,2literal,2LITERAL,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_2LITERAL:
   2 1b6c 401B0000 	>>  .word 99b
   2 1b70 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 1b74 08       	>>  .byte 8f-7f
   2 1b75 326C6974 	>> 7:.ascii "2literal"
   2      6572616C 
   2 1b7d 0000BF   	>> 8:.p2align 2
   2 1b80 8C080000 	>>  XT_2LITERAL:.word DOCOLON
   2              	>>  PFA_2LITERAL:
   3 1b84 B0000000 	    .word XT_SWAP
   4 1b88 A41B0000 	    .word XT_LITERAL
   5 1b8c A41B0000 	    .word XT_LITERAL
   6 1b90 7C000000 	    .word XT_EXIT
  50              	.include "words/literal.s"
   1              	
   2              	IMMED "literal", LITERAL
   2              	>  Header Flag_visible|Flag_immediate,literal,LITERAL,DOCOLON
   2              	>>  .p2align 2
ARM GAS  lp-stellaris.asm 			page 81


   2              	>> VE_LITERAL:
   2 1b94 701B0000 	>>  .word 99b
   2 1b98 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 1b9c 07       	>>  .byte 8f-7f
   2 1b9d 6C697465 	>> 7:.ascii "literal"
   2      72616C
   2              	>> 8:.p2align 2
   2 1ba4 8C080000 	>>  XT_LITERAL:.word DOCOLON
   2              	>>  PFA_LITERAL:
   3 1ba8 C81B0000 	        .word XT_COMPILE
   4 1bac D20F0000 	        .word XT_DOLITERAL
   5 1bb0 F41B0000 	        .word XT_COMMA
   6 1bb4 7C000000 	        .word XT_EXIT
  51              	.include "words/compile.s"
   1              	
   2              	COLON "compile", COMPILE
   2              	>  HEADER Flag_visible,"compile",COMPILE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_COMPILE:
   2 1bb8 981B0000 	>>  .word 99b
   2 1bbc 00000000 	>> 99:.word Flag_visible
   2 1bc0 07       	>>  .byte 8f-7f
   2 1bc1 636F6D70 	>> 7:.ascii "compile"
   2      696C65
   2              	>> 8:.p2align 2
   2 1bc8 8C080000 	>>  XT_COMPILE:.word DOCOLON
   2              	>>  PFA_COMPILE:
   3 1bcc A0010000 	    .word XT_R_FROM
   4 1bd0 C8000000 	    .word XT_DUP
   5 1bd4 DC0B0000 	    .word XT_CELLPLUS
   6 1bd8 88010000 	    .word XT_TO_R
   7 1bdc 6C020000 	    .word XT_FETCH
   8 1be0 F41B0000 	    .word XT_COMMA
   9 1be4 7C000000 	    .word XT_EXIT
  52              	.include "words/comma.s"
   1              	
   2              	COLON ",", COMMA
   2              	>  HEADER Flag_visible,",",COMMA,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_COMMA:
   2 1be8 BC1B0000 	>>  .word 99b
   2 1bec 00000000 	>> 99:.word Flag_visible
   2 1bf0 01       	>>  .byte 8f-7f
   2 1bf1 2C       	>> 7:.ascii ","
   2 1bf2 00BF     	>> 8:.p2align 2
   2 1bf4 8C080000 	>>  XT_COMMA:.word DOCOLON
   2              	>>  PFA_COMMA:
   3              	
   4 1bf8 A0120000 	    .word XT_HERE
   5 1bfc 80020000 	    .word XT_STORE
   6 1c00 D20F0000 	    .word XT_DOLITERAL,4
   6      04000000 
   7 1c08 BC120000 	    .word XT_ALLOT
   8 1c0c 7C000000 	    .word XT_EXIT
   9              	
  10              	COLON "c,", CCOMMA
  10              	>  HEADER Flag_visible,"c,",CCOMMA,DOCOLON
ARM GAS  lp-stellaris.asm 			page 82


  10              	>>  .p2align 2
  10              	>> VE_CCOMMA:
  10 1c10 EC1B0000 	>>  .word 99b
  10 1c14 00000000 	>> 99:.word Flag_visible
  10 1c18 02       	>>  .byte 8f-7f
  10 1c19 632C     	>> 7:.ascii "c,"
  10 1c1b 00       	>> 8:.p2align 2
  10 1c1c 8C080000 	>>  XT_CCOMMA:.word DOCOLON
  10              	>>  PFA_CCOMMA:
  11 1c20 A0120000 	   .word XT_HERE
  12 1c24 28050000 	   .word XT_CSTORE
  13 1c28 50100000 	   .word XT_ONE, XT_ALLOT
  13      BC120000 
  14 1c30 7C000000 	   .word XT_EXIT
  53              	.include "words/immediate-q.s"
   1              	
   2              	NONAME IMMEDIATEQ
   2 1c34 8C080000 	>  XT_IMMEDIATEQ:.word DOCOLON
   2              	>  PFA_IMMEDIATEQ:
   3 1c38 6C020000 	    .word XT_FETCH
   4 1c3c D20F0000 	    .word  XT_DOLITERAL
   5 1c40 10000000 	    .word  Flag_immediate
   6 1c44 50010000 	    .word  XT_TUCK
   7 1c48 D0030000 	    .word  XT_AND
   8 1c4c 54060000 	    .word  XT_EQUAL
   9 1c50 BE0F0000 	    .word  XT_DOCONDBRANCH,IMMEDIATEQ1
   9      601C0000 
  10 1c58 50100000 	     .word  XT_ONE
  11 1c5c 7C000000 	     .word  XT_EXIT
  12              	IMMEDIATEQ1:
  13 1c60 8C100000 	    .word  XT_MINUSONE
  14 1c64 7C000000 	    .word  XT_EXIT
  54              	.include "words/order.s"
   1              	
   2              	DATA "cfg-order", CFG_ORDER
   2              	>  HEADER Flag_visible,"cfg-order",CFG_ORDER,PFA_DODATA
   2              	>>  .p2align 2
   2              	>> VE_CFG_ORDER:
   2 1c68 141C0000 	>>  .word 99b
   2 1c6c 00000000 	>> 99:.word Flag_visible
   2 1c70 09       	>>  .byte 8f-7f
   2 1c71 6366672D 	>> 7:.ascii "cfg-order"
   2      6F726465 
   2      72
   2 1c7a 00BF     	>> 8:.p2align 2
   2 1c7c 340F0000 	>>  XT_CFG_ORDER:.word PFA_DODATA
   2              	>>  PFA_CFG_ORDER:
   3 1c80 03000000 	.word 3
   4 1c84 AC330000 	.word XT_RAM_WORDLIST
   5 1c88 A03D0000 	.word XT_FORTH_WORDLIST
   6 1c8c 743D0000 	.word XT_ENVIRONMENT
  55              	.include "words/find-xt.s"
   1              	
   2              	COLON "find-xt", FINDXT
   2              	>  HEADER Flag_visible,"find-xt",FINDXT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_FINDXT:
ARM GAS  lp-stellaris.asm 			page 83


   2 1c90 6C1C0000 	>>  .word 99b
   2 1c94 00000000 	>> 99:.word Flag_visible
   2 1c98 07       	>>  .byte 8f-7f
   2 1c99 66696E64 	>> 7:.ascii "find-xt"
   2      2D7874
   2              	>> 8:.p2align 2
   2 1ca0 8C080000 	>>  XT_FINDXT:.word DOCOLON
   2              	>>  PFA_FINDXT:
   3              	
   4 1ca4 D20F0000 	    .word XT_DOLITERAL
   5 1ca8 CC1C0000 	    .word XT_FINDXTA
   6 1cac 7C1C0000 	    .word XT_CFG_ORDER
   7 1cb0 64260000 	    .word XT_MAPSTACK
   8 1cb4 40050000 	    .word XT_ZEROEQUAL
   9 1cb8 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_FINDXT1
   9      C81C0000 
  10 1cc0 3C070000 	      .word XT_2DROP
  11 1cc4 3C100000 	      .word XT_ZERO
  12              	PFA_FINDXT1:
  13 1cc8 7C000000 	    .word XT_EXIT
  14              	
  15              	NONAME FINDXTA
  15 1ccc 8C080000 	>  XT_FINDXTA:.word DOCOLON
  15              	>  PFA_FINDXTA:
  16 1cd0 88010000 	    .word XT_TO_R
  17 1cd4 E8080000 	    .word XT_2DUP
  18 1cd8 A0010000 	    .word XT_R_FROM, XT_EXECUTE
  18      0C0D0000 
  19 1ce0 3C1E0000 	    .word XT_SEARCH_WORDLIST
  20 1ce4 C8000000 	    .word XT_DUP
  21 1ce8 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_FINDXTA1
  21      041D0000 
  22 1cf0 88010000 	      .word XT_TO_R
  23 1cf4 E0000000 	      .word XT_NIP
  24 1cf8 E0000000 	      .word XT_NIP
  25 1cfc A0010000 	      .word XT_R_FROM
  26 1d00 A4100000 	      .word XT_TRUE
  27              	PFA_FINDXTA1:
  28 1d04 7C000000 	    .word XT_EXIT
  29              	
  56              	.include "words/nfa2lfa.s"
   1              	
   2              	COLON "nfa>lfa", NFA2LFA
   2              	>  HEADER Flag_visible,"nfa>lfa",NFA2LFA,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_NFA2LFA:
   2 1d08 941C0000 	>>  .word 99b
   2 1d0c 00000000 	>> 99:.word Flag_visible
   2 1d10 07       	>>  .byte 8f-7f
   2 1d11 6E66613E 	>> 7:.ascii "nfa>lfa"
   2      6C6661
   2              	>> 8:.p2align 2
   2 1d18 8C080000 	>>  XT_NFA2LFA:.word DOCOLON
   2              	>>  PFA_NFA2LFA:
   3 1d1c D20F0000 	    .word XT_DOLITERAL,4
   3      04000000 
   4 1d24 600B0000 	    .word XT_MINUS
ARM GAS  lp-stellaris.asm 			page 84


   5 1d28 7C000000 	    .word XT_EXIT
  57              	.include "words/nfa2cfa.s"
   1              	
   2              	COLON "nfa2cfa", NFA2CFA
   2              	>  HEADER Flag_visible,"nfa2cfa",NFA2CFA,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_NFA2CFA:
   2 1d2c 0C1D0000 	>>  .word 99b
   2 1d30 00000000 	>> 99:.word Flag_visible
   2 1d34 07       	>>  .byte 8f-7f
   2 1d35 6E666132 	>> 7:.ascii "nfa2cfa"
   2      636661
   2              	>> 8:.p2align 2
   2 1d3c 8C080000 	>>  XT_NFA2CFA:.word DOCOLON
   2              	>>  PFA_NFA2CFA:
   3 1d40 DC0B0000 	    .word XT_CELLPLUS,XT_COUNT,XT_PLUS,XT_ALIGNED
   3      74280000 
   3      480B0000 
   3      F40E0000 
   4 1d50 7C000000 	.word XT_EXIT
  58              	.include "words/traverse-wordlist.s"
   1              	
   2              	COLON "traverse-wordlist",TRAVERSEWORDLIST
   2              	>  HEADER Flag_visible,"traverse-wordlist",TRAVERSEWORDLIST,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_TRAVERSEWORDLIST:
   2 1d54 301D0000 	>>  .word 99b
   2 1d58 00000000 	>> 99:.word Flag_visible
   2 1d5c 11       	>>  .byte 8f-7f
   2 1d5d 74726176 	>> 7:.ascii "traverse-wordlist"
   2      65727365 
   2      2D776F72 
   2      646C6973 
   2      74
   2 1d6e 00BF     	>> 8:.p2align 2
   2 1d70 8C080000 	>>  XT_TRAVERSEWORDLIST:.word DOCOLON
   2              	>>  PFA_TRAVERSEWORDLIST:
   3              	
   4              	PFA_TRAVERSEWORDLIST1:
   5 1d74 C8000000 	    .word XT_DUP
   6 1d78 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_TRAVERSEWORDLIST2
   6      B01D0000 
   7 1d80 E8080000 	    .word XT_2DUP
   8 1d84 9C070000 	    .word XT_2TO_R
   9 1d88 B0000000 	    .word XT_SWAP
  10 1d8c 0C0D0000 	    .word XT_EXECUTE
  11 1d90 B8070000 	    .word XT_2R_FROM
  12 1d94 10010000 	    .word XT_ROT
  13 1d98 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_TRAVERSEWORDLIST2
  13      B01D0000 
  14 1da0 181D0000 	    .word XT_NFA2LFA
  15 1da4 6C020000 	    .word XT_FETCH
  16 1da8 B40F0000 	    .word XT_DOBRANCH,PFA_TRAVERSEWORDLIST1
  16      741D0000 
  17              	PFA_TRAVERSEWORDLIST2:
  18 1db0 3C070000 	    .word XT_2DROP
  19 1db4 7C000000 	    .word XT_EXIT
ARM GAS  lp-stellaris.asm 			page 85


  59              	.include "words/show-wordlist.s"
   1              	
   2              	COLON "show-wordlist", SHOWWORDLIST
   2              	>  HEADER Flag_visible,"show-wordlist",SHOWWORDLIST,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_SHOWWORDLIST:
   2 1db8 581D0000 	>>  .word 99b
   2 1dbc 00000000 	>> 99:.word Flag_visible
   2 1dc0 0D       	>>  .byte 8f-7f
   2 1dc1 73686F77 	>> 7:.ascii "show-wordlist"
   2      2D776F72 
   2      646C6973 
   2      74
   2 1dce 00BF     	>> 8:.p2align 2
   2 1dd0 8C080000 	>>  XT_SHOWWORDLIST:.word DOCOLON
   2              	>>  PFA_SHOWWORDLIST:
   3 1dd4 D20F0000 	    .word XT_DOLITERAL
   4 1dd8 E81D0000 	    .word XT_SHOWWORD
   5 1ddc B0000000 	    .word XT_SWAP
   6 1de0 701D0000 	    .word XT_TRAVERSEWORDLIST
   7 1de4 7C000000 	    .word XT_EXIT
   8              	
   9              	NONAME SHOWWORD
   9 1de8 8C080000 	>  XT_SHOWWORD:.word DOCOLON
   9              	>  PFA_SHOWWORD:
  10 1dec EC1E0000 	    .word XT_NAME2STRING
  11 1df0 9C280000 	    .word XT_TYPE
  12 1df4 8C110000 	    .word XT_SPACE
  13 1df8 A4100000 	    .word XT_TRUE
  14 1dfc 7C000000 	    .word XT_EXIT
  60              	.include "words/current.s"
   1              	
   2              	VALUE "current", CURRENT, XT_RAM_WORDLIST
   2              	>  HEADER Flag_visible|Flag_value|Flag_init,"current",CURRENT,PFA_DOVALUE
   2              	>>  .p2align 2
   2              	>> VE_CURRENT:
   2 1e00 BC1D0000 	>>  .word 99b
   2 1e04 A0000000 	>> 99:.word Flag_visible|Flag_value|Flag_init
   2 1e08 07       	>>  .byte 8f-7f
   2 1e09 63757272 	>> 7:.ascii "current"
   2      656E74
   2              	>> 8:.p2align 2
   2 1e10 400F0000 	>>  XT_CURRENT:.word PFA_DOVALUE
   2              	>>  PFA_CURRENT:
   2 1e14 40020020 	>  .word rampointer
   2              	>  .equ RAM_CURRENT,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 1e18 AC330000 	>  .word XT_RAM_WORDLIST
   2 1e1c 6C020000 	>  .word XT_FETCH
   2 1e20 80020000 	>  .word XT_STORE
  61              	.include "words/search-wordlist.s"
   1              	
   2              	COLON "search-wordlist",SEARCH_WORDLIST
   2              	>  HEADER Flag_visible,"search-wordlist",SEARCH_WORDLIST,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_SEARCH_WORDLIST:
   2 1e24 041E0000 	>>  .word 99b
ARM GAS  lp-stellaris.asm 			page 86


   2 1e28 00000000 	>> 99:.word Flag_visible
   2 1e2c 0F       	>>  .byte 8f-7f
   2 1e2d 73656172 	>> 7:.ascii "search-wordlist"
   2      63682D77 
   2      6F72646C 
   2      697374
   2              	>> 8:.p2align 2
   2 1e3c 8C080000 	>>  XT_SEARCH_WORDLIST:.word DOCOLON
   2              	>>  PFA_SEARCH_WORDLIST:
   3              	
   4 1e40 88010000 	    .word XT_TO_R
   5 1e44 3C100000 	    .word XT_ZERO
   6 1e48 D20F0000 	    .word XT_DOLITERAL
   7 1e4c 901E0000 	    .word XT_ISWORD
   8 1e50 A0010000 	    .word XT_R_FROM
   9 1e54 701D0000 	    .word XT_TRAVERSEWORDLIST
  10 1e58 C8000000 	    .word XT_DUP
  11 1e5c 40050000 	    .word XT_ZEROEQUAL
  12 1e60 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_SEARCH_WORDLIST1
  12      781E0000 
  13 1e68 3C070000 	       .word XT_2DROP
  14 1e6c 98000000 	       .word XT_DROP
  15 1e70 3C100000 	       .word XT_ZERO
  16 1e74 7C000000 	       .word XT_EXIT
  17              	PFA_SEARCH_WORDLIST1:
  18 1e78 C8000000 	      .word XT_DUP
  19 1e7c 3C1D0000 	      .word XT_NFA2CFA
  20 1e80 B0000000 	      .word XT_SWAP
  21 1e84 1C1F0000 	      .word XT_NAME2FLAGS
  22 1e88 341C0000 	      .word XT_IMMEDIATEQ
  23 1e8c 7C000000 	    .word XT_EXIT
  24              	
  25              	NONAME ISWORD
  25 1e90 8C080000 	>  XT_ISWORD:.word DOCOLON
  25              	>  PFA_ISWORD:
  26 1e94 88010000 	    .word XT_TO_R
  27 1e98 98000000 	    .word XT_DROP
  28 1e9c E8080000 	    .word XT_2DUP
  29 1ea0 B8010000 	    .word XT_R_FETCH
  30 1ea4 EC1E0000 	    .word XT_NAME2STRING
  31 1ea8 F40F0000 	    .word XT_COMPARE
  32 1eac BE0F0000 	    .word XT_DOCONDBRANCH,PFA_ISWORD3
  32      C81E0000 
  33 1eb4 A0010000 	      .word XT_R_FROM
  34 1eb8 98000000 	      .word XT_DROP
  35 1ebc 3C100000 	      .word XT_ZERO
  36 1ec0 A4100000 	      .word XT_TRUE
  37 1ec4 7C000000 	      .word XT_EXIT
  38              	PFA_ISWORD3:
  39 1ec8 3C070000 	      .word XT_2DROP
  40 1ecc A0010000 	      .word XT_R_FROM
  41 1ed0 3C100000 	      .word XT_ZERO
  42 1ed4 7C000000 	      .word XT_EXIT
  62              	.include "words/name2string.s"
   1              	
   2              	COLON "name>string",NAME2STRING
   2              	>  HEADER Flag_visible,"name>string",NAME2STRING,DOCOLON
ARM GAS  lp-stellaris.asm 			page 87


   2              	>>  .p2align 2
   2              	>> VE_NAME2STRING:
   2 1ed8 281E0000 	>>  .word 99b
   2 1edc 00000000 	>> 99:.word Flag_visible
   2 1ee0 0B       	>>  .byte 8f-7f
   2 1ee1 6E616D65 	>> 7:.ascii "name>string"
   2      3E737472 
   2      696E67
   2              	>> 8:.p2align 2
   2 1eec 8C080000 	>>  XT_NAME2STRING:.word DOCOLON
   2              	>>  PFA_NAME2STRING:
   3 1ef0 DC0B0000 	    .word XT_CELLPLUS
   4 1ef4 74280000 	    .word XT_COUNT
   5 1ef8 D20F0000 	    .word XT_DOLITERAL
   6 1efc FF000000 	    .word 255
   7 1f00 D0030000 	    .word XT_AND
   8 1f04 7C000000 	    .word XT_EXIT
  63              	.include "words/name2flags.s"
   1              	COLON "name>flags", NAME2FLAGS
   1              	>  HEADER Flag_visible,"name>flags",NAME2FLAGS,DOCOLON
   1              	>>  .p2align 2
   1              	>> VE_NAME2FLAGS:
   1 1f08 DC1E0000 	>>  .word 99b
   1 1f0c 00000000 	>> 99:.word Flag_visible
   1 1f10 0A       	>>  .byte 8f-7f
   1 1f11 6E616D65 	>> 7:.ascii "name>flags"
   1      3E666C61 
   1      6773
   1 1f1b 00       	>> 8:.p2align 2
   1 1f1c 8C080000 	>>  XT_NAME2FLAGS:.word DOCOLON
   1              	>>  PFA_NAME2FLAGS:
   2 1f20 7C000000 	.word XT_EXIT
  64              	
  65              	.include "words/mplus.s"
   1              	
   2              	COLON "m+", MPLUS
   2              	>  HEADER Flag_visible,"m+",MPLUS,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_MPLUS:
   2 1f24 0C1F0000 	>>  .word 99b
   2 1f28 00000000 	>> 99:.word Flag_visible
   2 1f2c 02       	>>  .byte 8f-7f
   2 1f2d 6D2B     	>> 7:.ascii "m+"
   2 1f2f 00       	>> 8:.p2align 2
   2 1f30 8C080000 	>>  XT_MPLUS:.word DOCOLON
   2              	>>  PFA_MPLUS:
   3 1f34 180B0000 	    .word XT_S2D
   4 1f38 A8080000 	    .word XT_DPLUS
   5 1f3c 7C000000 	    .word XT_EXIT
  66              	.include "words/ud-star.s"
   1              	
   2              	COLON "ud*", UDSTAR
   2              	>  HEADER Flag_visible,"ud*",UDSTAR,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_UDSTAR:
   2 1f40 281F0000 	>>  .word 99b
   2 1f44 00000000 	>> 99:.word Flag_visible
ARM GAS  lp-stellaris.asm 			page 88


   2 1f48 03       	>>  .byte 8f-7f
   2 1f49 75642A   	>> 7:.ascii "ud*"
   2              	>> 8:.p2align 2
   2 1f4c 8C080000 	>>  XT_UDSTAR:.word DOCOLON
   2              	>>  PFA_UDSTAR:
   3              	
   4 1f50 C8000000 	    .word XT_DUP,XT_TO_R,XT_UMSTAR,XT_DROP
   4      88010000 
   4      08090000 
   4      98000000 
   5 1f60 B0000000 	    .word XT_SWAP,XT_R_FROM,XT_UMSTAR,XT_ROT,XT_PLUS,XT_EXIT
   5      A0010000 
   5      08090000 
   5      10010000 
   5      480B0000 
  67              	.include "words/within.s"
   1              	
   2              	COLON "within", WITHIN
   2              	>  HEADER Flag_visible,"within",WITHIN,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_WITHIN:
   2 1f78 441F0000 	>>  .word 99b
   2 1f7c 00000000 	>> 99:.word Flag_visible
   2 1f80 06       	>>  .byte 8f-7f
   2 1f81 77697468 	>> 7:.ascii "within"
   2      696E
   2 1f87 00       	>> 8:.p2align 2
   2 1f88 8C080000 	>>  XT_WITHIN:.word DOCOLON
   2              	>>  PFA_WITHIN:
   3              	
   4 1f8c F8000000 	    .word XT_OVER
   5 1f90 600B0000 	    .word XT_MINUS
   6 1f94 88010000 	    .word XT_TO_R
   7 1f98 600B0000 	    .word XT_MINUS
   8 1f9c A0010000 	    .word XT_R_FROM
   9 1fa0 08060000 	    .word XT_ULESS
  10 1fa4 7C000000 	    .word XT_EXIT
  68              	.include "words/to-upper.s"
   1              	
   2              	COLON "toupper", TOUPPER
   2              	>  HEADER Flag_visible,"toupper",TOUPPER,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_TOUPPER:
   2 1fa8 7C1F0000 	>>  .word 99b
   2 1fac 00000000 	>> 99:.word Flag_visible
   2 1fb0 07       	>>  .byte 8f-7f
   2 1fb1 746F7570 	>> 7:.ascii "toupper"
   2      706572
   2              	>> 8:.p2align 2
   2 1fb8 8C080000 	>>  XT_TOUPPER:.word DOCOLON
   2              	>>  PFA_TOUPPER:
   3 1fbc C8000000 	    .word XT_DUP 
   4 1fc0 D20F0000 	    .word XT_DOLITERAL 
   5 1fc4 61000000 	    .word 'a' 
   6 1fc8 D20F0000 	    .word XT_DOLITERAL 
   7 1fcc 7B000000 	    .word 'z'+1
   8 1fd0 881F0000 	    .word XT_WITHIN 
ARM GAS  lp-stellaris.asm 			page 89


   9 1fd4 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_TOUPPER0
   9      E81F0000 
  10 1fdc D20F0000 	    .word XT_DOLITERAL
  11 1fe0 DF000000 	    .word 223 
  12 1fe4 D0030000 	    .word XT_AND 
  13              	PFA_TOUPPER0:
  14 1fe8 7C000000 	    .word XT_EXIT 
  69              	.include "words/digit-q.s"
   1              	
   2              	COLON "digit?", DIGITQ
   2              	>  HEADER Flag_visible,"digit?",DIGITQ,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DIGITQ:
   2 1fec AC1F0000 	>>  .word 99b
   2 1ff0 00000000 	>> 99:.word Flag_visible
   2 1ff4 06       	>>  .byte 8f-7f
   2 1ff5 64696769 	>> 7:.ascii "digit?"
   2      743F
   2 1ffb 00       	>> 8:.p2align 2
   2 1ffc 8C080000 	>>  XT_DIGITQ:.word DOCOLON
   2              	>>  PFA_DIGITQ:
   3 2000 B81F0000 	    .word XT_TOUPPER
   4 2004 C8000000 	    .word XT_DUP,XT_DOLITERAL,57,XT_GREATER,XT_DOLITERAL,256
   4      D20F0000 
   4      39000000 
   4      E8050000 
   4      D20F0000 
   5 201c D0030000 	    .word XT_AND,XT_PLUS,XT_DUP,XT_DOLITERAL,320,XT_GREATER
   5      480B0000 
   5      C8000000 
   5      D20F0000 
   5      40010000 
   6 2034 D20F0000 	    .word XT_DOLITERAL,263,XT_AND,XT_MINUS,XT_DOLITERAL,48
   6      07010000 
   6      D0030000 
   6      600B0000 
   6      D20F0000 
   7 204c 600B0000 	    .word XT_MINUS,XT_DUP,XT_BASE,XT_FETCH,XT_ULESS
   7      C8000000 
   7      340B0000 
   7      6C020000 
   7      08060000 
   8 2060 7C000000 	    .word XT_EXIT
  70              	.include "words/to-number.s"
   1              	
   2              	COLON ">number", TO_NUMBER
   2              	>  HEADER Flag_visible,">number",TO_NUMBER,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_TO_NUMBER:
   2 2064 F01F0000 	>>  .word 99b
   2 2068 00000000 	>> 99:.word Flag_visible
   2 206c 07       	>>  .byte 8f-7f
   2 206d 3E6E756D 	>> 7:.ascii ">number"
   2      626572
   2              	>> 8:.p2align 2
   2 2074 8C080000 	>>  XT_TO_NUMBER:.word DOCOLON
   2              	>>  PFA_TO_NUMBER:
ARM GAS  lp-stellaris.asm 			page 90


   3              	
   4              	
   5 2078 C8000000 	TONUM1: .word XT_DUP,XT_DOCONDBRANCH,TONUM3
   5      BE0F0000 
   5      D8200000 
   6 2084 F8000000 	        .word XT_OVER,XT_CFETCH,XT_DIGITQ
   6      14050000 
   6      FC1F0000 
   7 2090 40050000 	        .word XT_ZEROEQUAL,XT_DOCONDBRANCH,TONUM2
   7      BE0F0000 
   7      A4200000 
   8 209c 98000000 	        .word XT_DROP,XT_EXIT
   8      7C000000 
   9 20a4 88010000 	TONUM2: .word XT_TO_R,XT_2SWAP,XT_BASE,XT_FETCH,XT_UDSTAR
   9      EC060000 
   9      340B0000 
   9      6C020000 
   9      4C1F0000 
  10 20b8 A0010000 	        .word XT_R_FROM,XT_MPLUS,XT_2SWAP
  10      301F0000 
  10      EC060000 
  11 20c4 D20F0000 	        .word XT_DOLITERAL,1,XT_SLASHSTRING,XT_DOBRANCH,TONUM1
  11      01000000 
  11      4C1B0000 
  11      B40F0000 
  11      78200000 
  12 20d8 7C000000 	TONUM3: .word XT_EXIT
  71              	.include "words/number.s"
   1              	COLON "number", NUMBER
   1              	>  HEADER Flag_visible,"number",NUMBER,DOCOLON
   1              	>>  .p2align 2
   1              	>> VE_NUMBER:
   1 20dc 68200000 	>>  .word 99b
   1 20e0 00000000 	>> 99:.word Flag_visible
   1 20e4 06       	>>  .byte 8f-7f
   1 20e5 6E756D62 	>> 7:.ascii "number"
   1      6572
   1 20eb 00       	>> 8:.p2align 2
   1 20ec 8C080000 	>>  XT_NUMBER:.word DOCOLON
   1              	>>  PFA_NUMBER:
   2              	
   3 20f0 340B0000 	    .word XT_BASE
   4 20f4 6C020000 	    .word XT_FETCH
   5 20f8 88010000 	    .word XT_TO_R
   6 20fc 08220000 	    .word XT_QSIGN
   7 2100 88010000 	    .word XT_TO_R
   8 2104 7C220000 	    .word XT_SET_BASE
   9 2108 08220000 	    .word XT_QSIGN
  10 210c A0010000 	    .word XT_R_FROM
  11 2110 E8030000 	    .word XT_OR
  12 2114 88010000 	    .word XT_TO_R
  13              	
  14 2118 C8000000 	    .word XT_DUP
  15 211c 40050000 	    .word XT_ZEROEQUAL
  16 2120 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_NUMBER0
  16      48210000 
  17 2128 3C070000 	      .word XT_2DROP
ARM GAS  lp-stellaris.asm 			page 91


  18 212c A0010000 	      .word XT_R_FROM
  19 2130 98000000 	      .word XT_DROP
  20 2134 A0010000 	      .word XT_R_FROM
  21 2138 340B0000 	      .word XT_BASE
  22 213c 80020000 	      .word XT_STORE
  23 2140 3C100000 	      .word XT_ZERO
  24 2144 7C000000 	      .word XT_EXIT
  25              	PFA_NUMBER0:
  26 2148 9C070000 	    .word XT_2TO_R
  27 214c 3C100000 	    .word XT_ZERO       
  28 2150 3C100000 	    .word XT_ZERO
  29 2154 B8070000 	    .word XT_2R_FROM
  30 2158 74200000 	    .word XT_TO_NUMBER 
  31 215c 30010000 	    .word XT_QDUP
  32 2160 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_NUMBER1
  32      D8210000 
  33 2168 D20F0000 	      .word XT_DOLITERAL,1
  33      01000000 
  34 2170 54060000 	      .word XT_EQUAL
  35 2174 BE0F0000 	      .word XT_DOCONDBRANCH,PFA_NUMBER2
  35      B4210000 
  36 217c 14050000 		.word XT_CFETCH
  37 2180 D20F0000 		.word XT_DOLITERAL, 0x2e 
  37      2E000000 
  38 2188 54060000 		.word XT_EQUAL
  39 218c BE0F0000 		.word XT_DOCONDBRANCH, PFA_NUMBER6
  39      B8210000 
  40 2194 A0010000 		.word XT_R_FROM
  41 2198 BE0F0000 	        .word XT_DOCONDBRANCH, PFA_NUMBER3
  41      A4210000 
  42 21a0 70080000 	        .word XT_DNEGATE
  43              	PFA_NUMBER3:
  44 21a4 D20F0000 		.word XT_DOLITERAL,2
  44      02000000 
  45 21ac B40F0000 		.word XT_DOBRANCH, PFA_NUMBER5
  45      F4210000 
  46              	PFA_NUMBER2:
  47 21b4 98000000 		.word XT_DROP
  48              	PFA_NUMBER6:
  49 21b8 3C070000 		.word XT_2DROP
  50 21bc A0010000 		.word XT_R_FROM
  51 21c0 98000000 		.word XT_DROP
  52 21c4 A0010000 	        .word XT_R_FROM
  53 21c8 340B0000 	        .word XT_BASE
  54 21cc 80020000 	        .word XT_STORE
  55 21d0 3C100000 		.word XT_ZERO
  56 21d4 7C000000 		.word XT_EXIT
  57              	PFA_NUMBER1:
  58 21d8 3C070000 	    .word XT_2DROP 
  59 21dc A0010000 	    .word XT_R_FROM
  60 21e0 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_NUMBER4
  60      EC210000 
  61 21e8 9C020000 	    .word XT_NEGATE
  62              	PFA_NUMBER4:
  63 21ec D20F0000 	    .word XT_DOLITERAL, 1
  63      01000000 
  64              	PFA_NUMBER5:
ARM GAS  lp-stellaris.asm 			page 92


  65 21f4 A0010000 	    .word XT_R_FROM
  66 21f8 340B0000 	    .word XT_BASE
  67 21fc 80020000 	    .word XT_STORE
  68 2200 A4100000 	    .word XT_TRUE
  69 2204 7C000000 	    .word XT_EXIT
  72              	.include "words/q-sign.s"
   1              	
   2              	NONAME QSIGN
   2 2208 8C080000 	>  XT_QSIGN:.word DOCOLON
   2              	>  PFA_QSIGN:
   3              	
   4 220c F8000000 	    .word XT_OVER 
   5 2210 14050000 	    .word XT_CFETCH
   6 2214 D20F0000 	    .word XT_DOLITERAL
   7 2218 2D000000 	    .word 45 
   8 221c 54060000 	    .word XT_EQUAL  
   9 2220 C8000000 	    .word XT_DUP
  10 2224 88010000 	    .word XT_TO_R
  11 2228 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_NUMBERSIGN_DONE
  11      3C220000 
  12 2230 D20F0000 	    .word XT_DOLITERAL, 1
  12      01000000 
  13 2238 4C1B0000 	    .word XT_SLASHSTRING
  14              	PFA_NUMBERSIGN_DONE:
  15 223c A0010000 	    .word XT_R_FROM
  16 2240 7C000000 	    .word XT_EXIT
  73              	.include "words/set-base.s"
   1              	
   2              	DATA "bases", BASES
   2              	>  HEADER Flag_visible,"bases",BASES,PFA_DODATA
   2              	>>  .p2align 2
   2              	>> VE_BASES:
   2 2244 E0200000 	>>  .word 99b
   2 2248 00000000 	>> 99:.word Flag_visible
   2 224c 05       	>>  .byte 8f-7f
   2 224d 62617365 	>> 7:.ascii "bases"
   2      73
   2 2252 00BF     	>> 8:.p2align 2
   2 2254 340F0000 	>>  XT_BASES:.word PFA_DODATA
   2              	>>  PFA_BASES:
   3 2258 0A000000 	    .word 10,16,2,10 
   3      10000000 
   3      02000000 
   3      0A000000 
   4              	
   5              	COLON "set-base", SET_BASE
   5              	>  HEADER Flag_visible,"set-base",SET_BASE,DOCOLON
   5              	>>  .p2align 2
   5              	>> VE_SET_BASE:
   5 2268 48220000 	>>  .word 99b
   5 226c 00000000 	>> 99:.word Flag_visible
   5 2270 08       	>>  .byte 8f-7f
   5 2271 7365742D 	>> 7:.ascii "set-base"
   5      62617365 
   5 2279 0000BF   	>> 8:.p2align 2
   5 227c 8C080000 	>>  XT_SET_BASE:.word DOCOLON
   5              	>>  PFA_SET_BASE:
ARM GAS  lp-stellaris.asm 			page 93


   6 2280 F8000000 	    .word XT_OVER
   7 2284 14050000 	    .word XT_CFETCH
   8 2288 D20F0000 	    .word XT_DOLITERAL
   9 228c 23000000 	    .word 35
  10 2290 600B0000 	    .word XT_MINUS
  11 2294 C8000000 	    .word XT_DUP
  12 2298 3C100000 	    .word XT_ZERO
  13 229c D20F0000 	    .word XT_DOLITERAL
  14 22a0 04000000 	    .word 4
  15 22a4 881F0000 	    .word XT_WITHIN
  16 22a8 BE0F0000 	    .word XT_DOCONDBRANCH,SET_BASE1
  16      DC220000 
  17 22b0 F40B0000 	        .word XT_CELLS
  18 22b4 54220000 		.word XT_BASES
  19 22b8 480B0000 		.word XT_PLUS
  20 22bc 6C020000 		.word XT_FETCH
  21 22c0 340B0000 		.word XT_BASE
  22 22c4 80020000 		.word XT_STORE
  23 22c8 D20F0000 		.word XT_DOLITERAL,1
  23      01000000 
  24 22d0 4C1B0000 		.word XT_SLASHSTRING
  25 22d4 B40F0000 		.word XT_DOBRANCH,SET_BASE2
  25      E0220000 
  26              	SET_BASE1:
  27 22dc 98000000 		.word XT_DROP
  28              	SET_BASE2:
  29 22e0 7C000000 	    .word XT_EXIT 
  74              	.include "words/rec-null.s"
   1              	
   2              	DATA "rectype-null", RECTYPE_NULL
   2              	>  HEADER Flag_visible,"rectype-null",RECTYPE_NULL,PFA_DODATA
   2              	>>  .p2align 2
   2              	>> VE_RECTYPE_NULL:
   2 22e4 6C220000 	>>  .word 99b
   2 22e8 00000000 	>> 99:.word Flag_visible
   2 22ec 0C       	>>  .byte 8f-7f
   2 22ed 72656374 	>> 7:.ascii "rectype-null"
   2      7970652D 
   2      6E756C6C 
   2 22f9 0000BF   	>> 8:.p2align 2
   2 22fc 340F0000 	>>  XT_RECTYPE_NULL:.word PFA_DODATA
   2              	>>  PFA_RECTYPE_NULL:
   3 2300 0C230000 	    .word XT_FAIL  
   4 2304 0C230000 	    .word XT_FAIL  
   5 2308 0C230000 	    .word XT_FAIL  
   6              	
   7              	NONAME FAIL
   7 230c 8C080000 	>  XT_FAIL:.word DOCOLON
   7              	>  PFA_FAIL:
   8 2310 D20F0000 	    .word XT_DOLITERAL
   9 2314 F3FFFFFF 	    .word -13
  10 2318 E4180000 	    .word XT_THROW
  75              	.include "words/rec-find.s"
   1              	
   2              	COLON "rec-find", REC_FIND
   2              	>  HEADER Flag_visible,"rec-find",REC_FIND,DOCOLON
   2              	>>  .p2align 2
ARM GAS  lp-stellaris.asm 			page 94


   2              	>> VE_REC_FIND:
   2 231c E8220000 	>>  .word 99b
   2 2320 00000000 	>> 99:.word Flag_visible
   2 2324 08       	>>  .byte 8f-7f
   2 2325 7265632D 	>> 7:.ascii "rec-find"
   2      66696E64 
   2 232d 0000BF   	>> 8:.p2align 2
   2 2330 8C080000 	>>  XT_REC_FIND:.word DOCOLON
   2              	>>  PFA_REC_FIND:
   3 2334 A01C0000 	    .word XT_FINDXT
   4 2338 C8000000 	    .word XT_DUP
   5 233c 40050000 	    .word XT_ZEROEQUAL, XT_DOCONDBRANCH, PFA_REC_WORD_FOUND
   5      BE0F0000 
   5      54230000 
   6 2348 98000000 	        .word XT_DROP
   7 234c FC220000 		.word XT_RECTYPE_NULL
   8 2350 7C000000 		.word XT_EXIT
   9              	PFA_REC_WORD_FOUND:
  10 2354 70230000 	    .word XT_RECTYPE_XT
  11              	
  12 2358 7C000000 	    .word XT_EXIT
  13              	
  14              	DATA "rectype-xt", RECTYPE_XT
  14              	>  HEADER Flag_visible,"rectype-xt",RECTYPE_XT,PFA_DODATA
  14              	>>  .p2align 2
  14              	>> VE_RECTYPE_XT:
  14 235c 20230000 	>>  .word 99b
  14 2360 00000000 	>> 99:.word Flag_visible
  14 2364 0A       	>>  .byte 8f-7f
  14 2365 72656374 	>> 7:.ascii "rectype-xt"
  14      7970652D 
  14      7874
  14 236f 00       	>> 8:.p2align 2
  14 2370 340F0000 	>>  XT_RECTYPE_XT:.word PFA_DODATA
  14              	>>  PFA_RECTYPE_XT:
  15 2374 80230000 	    .word XT_R_WORD_INTERPRET
  16 2378 90230000 	    .word XT_R_WORD_COMPILE
  17 237c 801B0000 	    .word XT_2LITERAL
  18              	
  19              	NONAME R_WORD_INTERPRET
  19 2380 8C080000 	>  XT_R_WORD_INTERPRET:.word DOCOLON
  19              	>  PFA_R_WORD_INTERPRET:
  20 2384 98000000 	    .word XT_DROP 
  21 2388 0C0D0000 	    .word XT_EXECUTE
  22 238c 7C000000 	    .word XT_EXIT
  23              	
  24              	NONAME R_WORD_COMPILE
  24 2390 8C080000 	>  XT_R_WORD_COMPILE:.word DOCOLON
  24              	>  PFA_R_WORD_COMPILE:
  25 2394 70050000 	    .word XT_ZEROLESS
  26 2398 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_R_WORD_COMPILE1
  26      A8230000 
  27 23a0 F41B0000 		.word XT_COMMA
  28 23a4 7C000000 	        .word XT_EXIT
  29              	PFA_R_WORD_COMPILE1:
  30 23a8 0C0D0000 	        .word XT_EXECUTE
  31 23ac 7C000000 	    .word XT_EXIT
ARM GAS  lp-stellaris.asm 			page 95


  76              	.include "words/rec-intnum.s"
   1              	
   2              	DATA "rectype-num", RECTYPE_NUM
   2              	>  HEADER Flag_visible,"rectype-num",RECTYPE_NUM,PFA_DODATA
   2              	>>  .p2align 2
   2              	>> VE_RECTYPE_NUM:
   2 23b0 60230000 	>>  .word 99b
   2 23b4 00000000 	>> 99:.word Flag_visible
   2 23b8 0B       	>>  .byte 8f-7f
   2 23b9 72656374 	>> 7:.ascii "rectype-num"
   2      7970652D 
   2      6E756D
   2              	>> 8:.p2align 2
   2 23c4 340F0000 	>>  XT_RECTYPE_NUM:.word PFA_DODATA
   2              	>>  PFA_RECTYPE_NUM:
   3 23c8 0C0E0000 	    .word XT_NOOP    
   4 23cc A41B0000 	    .word XT_LITERAL 
   5 23d0 A41B0000 	    .word XT_LITERAL 
   6              	
   7              	DATA "rectype-dnum", RECTYPE_DNUM
   7              	>  HEADER Flag_visible,"rectype-dnum",RECTYPE_DNUM,PFA_DODATA
   7              	>>  .p2align 2
   7              	>> VE_RECTYPE_DNUM:
   7 23d4 B4230000 	>>  .word 99b
   7 23d8 00000000 	>> 99:.word Flag_visible
   7 23dc 0C       	>>  .byte 8f-7f
   7 23dd 72656374 	>> 7:.ascii "rectype-dnum"
   7      7970652D 
   7      646E756D 
   7 23e9 0000BF   	>> 8:.p2align 2
   7 23ec 340F0000 	>>  XT_RECTYPE_DNUM:.word PFA_DODATA
   7              	>>  PFA_RECTYPE_DNUM:
   8 23f0 0C0E0000 	    .word XT_NOOP 
   9 23f4 801B0000 	    .word XT_2LITERAL
  10 23f8 801B0000 	    .word XT_2LITERAL
  11              	
  12              	COLON "rec-num", REC_NUM
  12              	>  HEADER Flag_visible,"rec-num",REC_NUM,DOCOLON
  12              	>>  .p2align 2
  12              	>> VE_REC_NUM:
  12 23fc D8230000 	>>  .word 99b
  12 2400 00000000 	>> 99:.word Flag_visible
  12 2404 07       	>>  .byte 8f-7f
  12 2405 7265632D 	>> 7:.ascii "rec-num"
  12      6E756D
  12              	>> 8:.p2align 2
  12 240c 8C080000 	>>  XT_REC_NUM:.word DOCOLON
  12              	>>  PFA_REC_NUM:
  13 2410 EC200000 	    .word XT_NUMBER
  14 2414 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_REC_NONUMBER
  14      40240000 
  15 241c D20F0000 	    .word XT_DOLITERAL,1
  15      01000000 
  16 2424 54060000 	    .word XT_EQUAL
  17 2428 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_REC_INTNUM2
  17      38240000 
  18 2430 C4230000 	      .word XT_RECTYPE_NUM
ARM GAS  lp-stellaris.asm 			page 96


  19 2434 7C000000 	      .word XT_EXIT
  20              	PFA_REC_INTNUM2:
  21 2438 EC230000 	      .word XT_RECTYPE_DNUM
  22 243c 7C000000 	      .word XT_EXIT
  23              	PFA_REC_NONUMBER:
  24 2440 FC220000 	    .word XT_RECTYPE_NULL
  25 2444 7C000000 	    .word XT_EXIT
  77              	.include "words/rec-split.s"
   1              	COLON "rec-split", REC_SPLIT
   1              	>  HEADER Flag_visible,"rec-split",REC_SPLIT,DOCOLON
   1              	>>  .p2align 2
   1              	>> VE_REC_SPLIT:
   1 2448 00240000 	>>  .word 99b
   1 244c 00000000 	>> 99:.word Flag_visible
   1 2450 09       	>>  .byte 8f-7f
   1 2451 7265632D 	>> 7:.ascii "rec-split"
   1      73706C69 
   1      74
   1 245a 00BF     	>> 8:.p2align 2
   1 245c 8C080000 	>>  XT_REC_SPLIT:.word DOCOLON
   1              	>>  PFA_REC_SPLIT:
   2 2460 80240000 	    .word XT_RECTYPE_SPLIT
   3 2464 7C000000 	    .word XT_EXIT
   4              	
   5              	DATA "rectype-split", RECTYPE_SPLIT
   5              	>  HEADER Flag_visible,"rectype-split",RECTYPE_SPLIT,PFA_DODATA
   5              	>>  .p2align 2
   5              	>> VE_RECTYPE_SPLIT:
   5 2468 4C240000 	>>  .word 99b
   5 246c 00000000 	>> 99:.word Flag_visible
   5 2470 0D       	>>  .byte 8f-7f
   5 2471 72656374 	>> 7:.ascii "rectype-split"
   5      7970652D 
   5      73706C69 
   5      74
   5 247e 00BF     	>> 8:.p2align 2
   5 2480 340F0000 	>>  XT_RECTYPE_SPLIT:.word PFA_DODATA
   5              	>>  PFA_RECTYPE_SPLIT:
   6 2484 A0240000 	    .word XT_SPLIT  
   7 2488 A0240000 	    .word XT_SPLIT  
   8 248c A0240000 	    .word XT_SPLIT  
   9              	
  10              	COLON "split", SPLIT
  10              	>  HEADER Flag_visible,"split",SPLIT,DOCOLON
  10              	>>  .p2align 2
  10              	>> VE_SPLIT:
  10 2490 6C240000 	>>  .word 99b
  10 2494 00000000 	>> 99:.word Flag_visible
  10 2498 05       	>>  .byte 8f-7f
  10 2499 73706C69 	>> 7:.ascii "split"
  10      74
  10 249e 00BF     	>> 8:.p2align 2
  10 24a0 8C080000 	>>  XT_SPLIT:.word DOCOLON
  10              	>>  PFA_SPLIT:
  11 24a4 30150000 	    .word XT_DOTS,XT_CR,XT_TYPE,XT_CR
  11      48110000 
  11      9C280000 
ARM GAS  lp-stellaris.asm 			page 97


  11      48110000 
  12 24b4 7C000000 	    .word XT_EXIT
  78              	.include "words/rec-trace.s"
   1              	
   2              	COLON "rec-trace", REC_TRACE
   2              	>  HEADER Flag_visible,"rec-trace",REC_TRACE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_REC_TRACE:
   2 24b8 94240000 	>>  .word 99b
   2 24bc 00000000 	>> 99:.word Flag_visible
   2 24c0 09       	>>  .byte 8f-7f
   2 24c1 7265632D 	>> 7:.ascii "rec-trace"
   2      74726163 
   2      65
   2 24ca 00BF     	>> 8:.p2align 2
   2 24cc 8C080000 	>>  XT_REC_TRACE:.word DOCOLON
   2              	>>  PFA_REC_TRACE:
   3              	
   4 24d0 98000000 	    .word XT_DROP, XT_TO_R
   4      88010000 
   5              	    STRING " | "
   5 24d8 020F0000 	>  .word XT_DOSLITERAL
   5 24dc 03       	>  .byte 8f-7f
   5 24dd 207C20   	> 7:.ascii " | "
   5              	> 8:.p2align 2
   6 24e0 A0010000 	    .word XT_R_FROM,XT_SOURCE,XT_PLUS,XT_OVER
   6      38190000 
   6      480B0000 
   6      F8000000 
   7 24f0 600B0000 	    .word XT_MINUS,XT_TYPE,XT_CR
   7      9C280000 
   7      48110000 
   8 24fc FC220000 	    .word XT_RECTYPE_NULL
   9 2500 7C000000 	    .word XT_EXIT
  79              	.include "words/forth-recognizer.s"
   1              	
   2              	VALUE "forth-recognizer", FORTHRECOGNIZER, PFA_CFG_RECOGNIZER
   2              	>  HEADER Flag_visible|Flag_value|Flag_init,"forth-recognizer",FORTHRECOGNIZER,PFA_DOVALUE
   2              	>>  .p2align 2
   2              	>> VE_FORTHRECOGNIZER:
   2 2504 BC240000 	>>  .word 99b
   2 2508 A0000000 	>> 99:.word Flag_visible|Flag_value|Flag_init
   2 250c 10       	>>  .byte 8f-7f
   2 250d 666F7274 	>> 7:.ascii "forth-recognizer"
   2      682D7265 
   2      636F676E 
   2      697A6572 
   2 251d 0000BF   	>> 8:.p2align 2
   2 2520 400F0000 	>>  XT_FORTHRECOGNIZER:.word PFA_DOVALUE
   2              	>>  PFA_FORTHRECOGNIZER:
   2 2524 44020020 	>  .word rampointer
   2              	>  .equ RAM_FORTHRECOGNIZER,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 2528 50250000 	>  .word PFA_CFG_RECOGNIZER
   2 252c 6C020000 	>  .word XT_FETCH
   2 2530 80020000 	>  .word XT_STORE
   3              	
ARM GAS  lp-stellaris.asm 			page 98


   4              	DATA "cfg-recognizer", CFG_RECOGNIZER
   4              	>  HEADER Flag_visible,"cfg-recognizer",CFG_RECOGNIZER,PFA_DODATA
   4              	>>  .p2align 2
   4              	>> VE_CFG_RECOGNIZER:
   4 2534 08250000 	>>  .word 99b
   4 2538 00000000 	>> 99:.word Flag_visible
   4 253c 0E       	>>  .byte 8f-7f
   4 253d 6366672D 	>> 7:.ascii "cfg-recognizer"
   4      7265636F 
   4      676E697A 
   4      6572
   4 254b 00       	>> 8:.p2align 2
   4 254c 340F0000 	>>  XT_CFG_RECOGNIZER:.word PFA_DODATA
   4              	>>  PFA_CFG_RECOGNIZER:
   5              	
   6 2550 02000000 	.word 2
   7              	
   8 2554 30230000 	.word XT_REC_FIND
   9 2558 0C240000 	.word XT_REC_NUM
  10              	
  80              	.include "words/recognize.s"
   1              	
   2              	COLON "recognize", RECOGNIZE
   2              	>  HEADER Flag_visible,"recognize",RECOGNIZE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_RECOGNIZE:
   2 255c 38250000 	>>  .word 99b
   2 2560 00000000 	>> 99:.word Flag_visible
   2 2564 09       	>>  .byte 8f-7f
   2 2565 7265636F 	>> 7:.ascii "recognize"
   2      676E697A 
   2      65
   2 256e 00BF     	>> 8:.p2align 2
   2 2570 8C080000 	>>  XT_RECOGNIZE:.word DOCOLON
   2              	>>  PFA_RECOGNIZE:
   3              	
   4 2574 D20F0000 	    .word XT_DOLITERAL
   5 2578 9C250000 	    .word XT_RECOGNIZE_A
   6 257c B0000000 	    .word XT_SWAP
   7 2580 64260000 	    .word XT_MAPSTACK
   8 2584 40050000 	    .word XT_ZEROEQUAL
   9 2588 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_RECOGNIZE1
   9      98250000 
  10 2590 3C070000 	      .word XT_2DROP
  11 2594 FC220000 	      .word XT_RECTYPE_NULL
  12              	PFA_RECOGNIZE1:
  13 2598 7C000000 	    .word XT_EXIT
  14              	
  15              	NONAME RECOGNIZE_A
  15 259c 8C080000 	>  XT_RECOGNIZE_A:.word DOCOLON
  15              	>  PFA_RECOGNIZE_A:
  16 25a0 10010000 	   .word XT_ROT
  17 25a4 10010000 	   .word XT_ROT
  18 25a8 E8080000 	   .word XT_2DUP 
  19 25ac 9C070000 	   .word XT_2TO_R
  20 25b0 10010000 	   .word XT_ROT
  21 25b4 0C0D0000 	   .word XT_EXECUTE
ARM GAS  lp-stellaris.asm 			page 99


  22 25b8 B8070000 	   .word XT_2R_FROM
  23 25bc 10010000 	   .word XT_ROT
  24 25c0 C8000000 	   .word XT_DUP
  25 25c4 FC220000 	   .word XT_RECTYPE_NULL
  26 25c8 54060000 	   .word XT_EQUAL
  27 25cc BE0F0000 	   .word XT_DOCONDBRANCH,PFA_RECOGNIZE_A1
  27      E0250000 
  28 25d4 98000000 	     .word XT_DROP
  29 25d8 3C100000 	     .word XT_ZERO
  30 25dc 7C000000 	     .word XT_EXIT
  31              	PFA_RECOGNIZE_A1:
  32 25e0 E0000000 	   .word XT_NIP 
  33 25e4 E0000000 	   .word XT_NIP
  34 25e8 A4100000 	   .word XT_TRUE
  35 25ec 7C000000 	   .word XT_EXIT
  81              	
  82              	.include "words/interpret.s"
   1              	
   2              	COLON "interpret", INTERPRET
   2              	>  HEADER Flag_visible,"interpret",INTERPRET,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_INTERPRET:
   2 25f0 60250000 	>>  .word 99b
   2 25f4 00000000 	>> 99:.word Flag_visible
   2 25f8 09       	>>  .byte 8f-7f
   2 25f9 696E7465 	>> 7:.ascii "interpret"
   2      72707265 
   2      74
   2 2602 00BF     	>> 8:.p2align 2
   2 2604 8C080000 	>>  XT_INTERPRET:.word DOCOLON
   2              	>>  PFA_INTERPRET:
   3 2608 941A0000 	    .word XT_PARSENAME 
   4 260c C8000000 	    .word XT_DUP
   5 2610 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_INTERPRET2
   5      48260000 
   6 2618 20250000 	      .word XT_FORTHRECOGNIZER
   7 261c 70250000 	      .word XT_RECOGNIZE
   8 2620 0C0C0000 	      .word XT_STATE
   9 2624 6C020000 	      .word XT_FETCH
  10 2628 BE0F0000 	      .word XT_DOCONDBRANCH, PFA_INTERPRET1
  10      34260000 
  11 2630 DC0B0000 	        .word XT_CELLPLUS   
  12              	PFA_INTERPRET1:
  13 2634 6C020000 	      .word XT_FETCH
  14 2638 0C0D0000 	      .word XT_EXECUTE
  15 263c 84190000 	      .word XT_QSTACK
  16 2640 B40F0000 	    .word XT_DOBRANCH, PFA_INTERPRET
  16      08260000 
  17              	PFA_INTERPRET2:
  18 2648 3C070000 	    .word XT_2DROP
  19 264c 7C000000 	    .word XT_EXIT
  83              	.include "words/map-stack.s"
   1              	
   2              	COLON "map-stack", MAPSTACK
   2              	>  HEADER Flag_visible,"map-stack",MAPSTACK,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_MAPSTACK:
ARM GAS  lp-stellaris.asm 			page 100


   2 2650 F4250000 	>>  .word 99b
   2 2654 00000000 	>> 99:.word Flag_visible
   2 2658 09       	>>  .byte 8f-7f
   2 2659 6D61702D 	>> 7:.ascii "map-stack"
   2      73746163 
   2      6B
   2 2662 00BF     	>> 8:.p2align 2
   2 2664 8C080000 	>>  XT_MAPSTACK:.word DOCOLON
   2              	>>  PFA_MAPSTACK:
   3 2668 C8000000 	    .word XT_DUP
   4 266c DC0B0000 	    .word XT_CELLPLUS
   5 2670 B0000000 	    .word XT_SWAP
   6 2674 6C020000 	    .word XT_FETCH
   7 2678 F40B0000 	    .word XT_CELLS
   8 267c 300E0000 	    .word XT_BOUNDS
   9 2680 10270000 	    .word XT_QDOCHECK, XT_DOCONDBRANCH,PFA_MAPSTACK3
   9      BE0F0000 
   9      D8260000 
  10 268c 440E0000 	    .word XT_DODO
  11              	PFA_MAPSTACK1:
  12 2690 B40E0000 	      .word XT_I
  13 2694 6C020000 	      .word XT_FETCH
  14 2698 B0000000 	      .word XT_SWAP
  15 269c 88010000 	      .word XT_TO_R
  16 26a0 B8010000 	      .word XT_R_FETCH
  17 26a4 0C0D0000 	      .word XT_EXECUTE
  18 26a8 30010000 	      .word XT_QDUP
  19 26ac BE0F0000 	      .word XT_DOCONDBRANCH,PFA_MAPSTACK2
  19      C4260000 
  20 26b4 A0010000 	         .word XT_R_FROM
  21 26b8 98000000 	         .word XT_DROP
  22 26bc 9C0E0000 	         .word XT_UNLOOP
  23 26c0 7C000000 	         .word XT_EXIT
  24              	PFA_MAPSTACK2:
  25 26c4 A0010000 	      .word XT_R_FROM
  26 26c8 D20F0000 	      .word XT_DOLITERAL,4
  26      04000000 
  27 26d0 6C0E0000 	      .word XT_DOPLUSLOOP,PFA_MAPSTACK1
  27      90260000 
  28              	PFA_MAPSTACK3:
  29 26d8 98000000 	    .word XT_DROP
  30 26dc 3C100000 	    .word XT_ZERO
  31 26e0 7C000000 	    .word XT_EXIT
  84              	.include "words/qdo.s"
   1              	
   2              	IMMED "?do", QDO
   2              	>  Header Flag_visible|Flag_immediate,?do,QDO,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_QDO:
   2 26e4 54260000 	>>  .word 99b
   2 26e8 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 26ec 03       	>>  .byte 8f-7f
   2 26ed 3F646F   	>> 7:.ascii "?do"
   2              	>> 8:.p2align 2
   2 26f0 8C080000 	>>  XT_QDO:.word DOCOLON
   2              	>>  PFA_QDO:
   3 26f4 C81B0000 	    .word XT_COMPILE
ARM GAS  lp-stellaris.asm 			page 101


   4 26f8 10270000 	    .word XT_QDOCHECK
   5 26fc F82B0000 	    .word XT_IF
   6 2700 602F0000 	    .word XT_DO
   7 2704 B0000000 	    .word XT_SWAP
   8 2708 5C2B0000 	    .word XT_TO_L
   9 270c 7C000000 	    .word XT_EXIT
  10              	
  11              	NONAME QDOCHECK
  11 2710 8C080000 	>  XT_QDOCHECK:.word DOCOLON
  11              	>  PFA_QDOCHECK:
  12 2714 E8080000 	    .word XT_2DUP
  13 2718 54060000 	    .word XT_EQUAL
  14 271c C8000000 	    .word XT_DUP
  15 2720 88010000 	    .word XT_TO_R
  16 2724 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_QDOCHECK1
  16      30270000 
  17 272c 3C070000 	    .word XT_2DROP
  18              	PFA_QDOCHECK1:
  19 2730 A0010000 	    .word XT_R_FROM
  20 2734 30040000 	    .word XT_INVERT
  21 2738 7C000000 	    .word XT_EXIT
  22              	
  85              	
  86              	.include "words/init-ram.s"
   1              	
   2              	COLON "init-ram", INIT_RAM
   2              	>  HEADER Flag_visible,"init-ram",INIT_RAM,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_INIT_RAM:
   2 273c E8260000 	>>  .word 99b
   2 2740 00000000 	>> 99:.word Flag_visible
   2 2744 08       	>>  .byte 8f-7f
   2 2745 696E6974 	>> 7:.ascii "init-ram"
   2      2D72616D 
   2 274d 0000BF   	>> 8:.p2align 2
   2 2750 8C080000 	>>  XT_INIT_RAM:.word DOCOLON
   2              	>>  PFA_INIT_RAM:
   3              	
   4 2754 D20F0000 	    .word XT_DOLITERAL, RAM_lower_userarea, XT_UP_STORE
   4      00010020 
   4      A80F0000 
   5 2760 D20F0000 	    .word XT_DOLITERAL, XT_FORTH_WORDLIST, XT_TO_BODY,XT_DUP,XT_CELLPLUS,XT_FETCH,XT_SWAP,XT_FETCH,
   5      A03D0000 
   5      94320000 
   5      C8000000 
   5      DC0B0000 
   6 2784 D20F0000 	    .word XT_DOLITERAL, XT_DOINITS, XT_FORTH_WORDLIST, XT_TRAVERSEWORDLIST
   6      98270000 
   6      A03D0000 
   6      701D0000 
   7 2794 7C000000 	    .word XT_EXIT
   8              	
   9              	NONAME DOINITS
   9 2798 8C080000 	>  XT_DOINITS:.word DOCOLON
   9              	>  PFA_DOINITS:
  10 279c C8000000 	    .word XT_DUP
  11 27a0 1C1F0000 	    .word XT_NAME2FLAGS,XT_FETCH, XT_DOLITERAL, Flag_init, XT_DUP,XT_ROT,XT_AND,XT_EQUAL
ARM GAS  lp-stellaris.asm 			page 102


  11      6C020000 
  11      D20F0000 
  11      80000000 
  11      C8000000 
  12 27c0 BE0F0000 	    .word XT_DOCONDBRANCH,PFA_DOINIT_1
  12      F0270000 
  13 27c8 3C1D0000 		.word XT_NFA2CFA 
  14 27cc 94320000 		.word XT_TO_BODY,XT_DUP,XT_CELLPLUS, XT_FETCH, XT_SWAP, XT_FETCH, XT_STORE
  14      C8000000 
  14      DC0B0000 
  14      6C020000 
  14      B0000000 
  15 27e8 A4100000 		.word XT_TRUE
  16 27ec 7C000000 		.word XT_EXIT
  17              	PFA_DOINIT_1:
  18 27f0 98000000 	    .word XT_DROP
  19 27f4 A4100000 	    .word XT_TRUE
  20 27f8 7C000000 	    .word XT_EXIT
  87              	.include "words/ver.s"
   1              	
   2              	COLON "ver", DOT_VER
   2              	>  HEADER Flag_visible,"ver",DOT_VER,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DOT_VER:
   2 27fc 40270000 	>>  .word 99b
   2 2800 00000000 	>> 99:.word Flag_visible
   2 2804 03       	>>  .byte 8f-7f
   2 2805 766572   	>> 7:.ascii "ver"
   2              	>> 8:.p2align 2
   2 2808 8C080000 	>>  XT_DOT_VER:.word DOCOLON
   2              	>>  PFA_DOT_VER:
   3              	
   4 280c D0330000 	.word XT_ENV_FORTHNAME, XT_TYPE, XT_SPACE
   4      9C280000 
   4      8C110000 
   5              	
   6 2818 340B0000 	.word XT_BASE, XT_FETCH
   6      6C020000 
   7 2820 F4330000 	.word XT_ENV_FORTHVERSION, XT_DECIMAL, XT_S2D
   7      30120000 
   7      180B0000 
   8 282c 34130000 	.word XT_L_SHARP, XT_SHARP
   8      54130000 
   9 2834 D20F0000 	.word XT_DOLITERAL, '.'
   9      2E000000 
  10 283c F8120000 	.word XT_HOLD, XT_SHARP_S, XT_SHARP_G
  10      AC130000 
  10      D8130000 
  11 2848 9C280000 	.word XT_TYPE, XT_BASE, XT_STORE
  11      340B0000 
  11      80020000 
  12              	
  13 2854 8C110000 	.word XT_SPACE, XT_ENV_CPU, XT_TYPE
  13      10340000 
  13      9C280000 
  14              	
  15 2860 7C000000 	.word XT_EXIT
ARM GAS  lp-stellaris.asm 			page 103


  88              	
  89              	.include "words/count.s"
   1              	
   2              	COLON "count", COUNT
   2              	>  HEADER Flag_visible,"count",COUNT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_COUNT:
   2 2864 00280000 	>>  .word 99b
   2 2868 00000000 	>> 99:.word Flag_visible
   2 286c 05       	>>  .byte 8f-7f
   2 286d 636F756E 	>> 7:.ascii "count"
   2      74
   2 2872 00BF     	>> 8:.p2align 2
   2 2874 8C080000 	>>  XT_COUNT:.word DOCOLON
   2              	>>  PFA_COUNT:
   3              	
   4 2878 C8000000 	.word XT_DUP,XT_1PLUS,XT_SWAP,XT_CFETCH,XT_EXIT
   4      780B0000 
   4      B0000000 
   4      14050000 
   4      7C000000 
  90              	.include "words/type.s"
   1              	
   2              	COLON "type", TYPE
   2              	>  HEADER Flag_visible,"type",TYPE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_TYPE:
   2 288c 68280000 	>>  .word 99b
   2 2890 00000000 	>> 99:.word Flag_visible
   2 2894 04       	>>  .byte 8f-7f
   2 2895 74797065 	>> 7:.ascii "type"
   2 2899 0000BF   	>> 8:.p2align 2
   2 289c 8C080000 	>>  XT_TYPE:.word DOCOLON
   2              	>>  PFA_TYPE:
   3              	
   4 28a0 300E0000 	 .word XT_BOUNDS
   5 28a4 10270000 	 .word XT_QDOCHECK,XT_DOCONDBRANCH,PFA_TYPE_LEAVE
   5      BE0F0000 
   5      C8280000 
   6 28b0 440E0000 	 .word XT_DODO
   7              	PFA_TYPE_LOOP:
   8 28b4 B40E0000 	   .word XT_I, XT_CFETCH, XT_EMIT
   8      14050000 
   8      880D0000 
   9 28c0 620E0000 	   .word XT_DOLOOP,PFA_TYPE_LOOP
   9      B4280000 
  10              	PFA_TYPE_LEAVE:
  11 28c8 7C000000 	 .word XT_EXIT
  12              	
  13              	COLON "itype", ITYPE
  13              	>  HEADER Flag_visible,"itype",ITYPE,DOCOLON
  13              	>>  .p2align 2
  13              	>> VE_ITYPE:
  13 28cc 90280000 	>>  .word 99b
  13 28d0 00000000 	>> 99:.word Flag_visible
  13 28d4 05       	>>  .byte 8f-7f
  13 28d5 69747970 	>> 7:.ascii "itype"
ARM GAS  lp-stellaris.asm 			page 104


  13      65
  13 28da 00BF     	>> 8:.p2align 2
  13 28dc 8C080000 	>>  XT_ITYPE:.word DOCOLON
  13              	>>  PFA_ITYPE:
  14 28e0 9C280000 	    .word XT_TYPE,XT_EXIT
  14      7C000000 
  91              	.include "words/squote.s"
   1              	
   2              	IMMED "s\x22", SQUOTE 
   2              	>  Header Flag_visible|Flag_immediate,s\x22,SQUOTE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_SQUOTE:
   2 28e8 D0280000 	>>  .word 99b
   2 28ec 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 28f0 02       	>>  .byte 8f-7f
   2 28f1 7322     	>> 7:.ascii "s\x22"
   2 28f3 00       	>> 8:.p2align 2
   2 28f4 8C080000 	>>  XT_SQUOTE:.word DOCOLON
   2              	>>  PFA_SQUOTE:
   3 28f8 D20F0000 	    .word XT_DOLITERAL
   4 28fc 22000000 	    .word 34  
   5 2900 FC1A0000 	    .word XT_PARSE       
   6 2904 0C0C0000 	    .word XT_STATE
   7 2908 6C020000 	    .word XT_FETCH
   8 290c BE0F0000 	    .word XT_DOCONDBRANCH, PFA_SQUOTE1
   8      18290000 
   9 2914 AC290000 	      .word XT_SLITERAL
  10              	PFA_SQUOTE1:
  11 2918 7C000000 	    .word XT_EXIT
  92              	.include "words/dot-quote.s"
   1              	
   2              	IMMED ".\x22", DOT_QUOTE
   2              	>  Header Flag_visible|Flag_immediate,.\x22,DOT_QUOTE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DOT_QUOTE:
   2 291c EC280000 	>>  .word 99b
   2 2920 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2924 02       	>>  .byte 8f-7f
   2 2925 2E22     	>> 7:.ascii ".\x22"
   2 2927 00       	>> 8:.p2align 2
   2 2928 8C080000 	>>  XT_DOT_QUOTE:.word DOCOLON
   2              	>>  PFA_DOT_QUOTE:
   3 292c F4280000 	    .word XT_SQUOTE
   4 2930 C81B0000 	    .word XT_COMPILE
   5 2934 9C280000 	    .word XT_TYPE
   6 2938 7C000000 	    .word XT_EXIT
  93              	.include "words/scomma.s"
   1              	
   2              	COLON "s,", SCOMMA
   2              	>  HEADER Flag_visible,"s,",SCOMMA,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_SCOMMA:
   2 293c 20290000 	>>  .word 99b
   2 2940 00000000 	>> 99:.word Flag_visible
   2 2944 02       	>>  .byte 8f-7f
   2 2945 732C     	>> 7:.ascii "s,"
   2 2947 00       	>> 8:.p2align 2
ARM GAS  lp-stellaris.asm 			page 105


   2 2948 8C080000 	>>  XT_SCOMMA:.word DOCOLON
   2              	>>  PFA_SCOMMA:
   3 294c C8000000 	    .word XT_DUP, XT_CCOMMA
   3      1C1C0000 
   4 2954 3C100000 	    .word XT_ZERO
   5 2958 10270000 	    .word XT_QDOCHECK
   6 295c BE0F0000 	    .word XT_DOCONDBRANCH, PFA_SCOMMA2
   6      80290000 
   7 2964 440E0000 	    .word XT_DODO
   8              	PFA_SCOMMA1:
   9 2968 C8000000 	    .word XT_DUP
  10 296c 14050000 	    .word XT_CFETCH
  11 2970 1C1C0000 	    .word XT_CCOMMA
  12 2974 780B0000 	    .word XT_1PLUS
  13 2978 620E0000 	    .word XT_DOLOOP
  14 297c 68290000 	    .word PFA_SCOMMA1
  15              	PFA_SCOMMA2:
  16 2980 98000000 	    .word XT_DROP
  17 2984 FC320000 	    .word XT_DP, XT_ALIGNED, XT_DOTO, XT_DP
  17      F40E0000 
  17      E4310000 
  17      FC320000 
  18 2994 7C000000 	    .word XT_EXIT
  94              	.include "words/sliteral.s"
   1              	
   2              	IMMED "sliteral", SLITERAL
   2              	>  Header Flag_visible|Flag_immediate,sliteral,SLITERAL,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_SLITERAL:
   2 2998 40290000 	>>  .word 99b
   2 299c 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 29a0 08       	>>  .byte 8f-7f
   2 29a1 736C6974 	>> 7:.ascii "sliteral"
   2      6572616C 
   2 29a9 0000BF   	>> 8:.p2align 2
   2 29ac 8C080000 	>>  XT_SLITERAL:.word DOCOLON
   2              	>>  PFA_SLITERAL:
   3 29b0 C81B0000 	    .word XT_COMPILE
   4 29b4 020F0000 	    .word XT_DOSLITERAL
   5 29b8 48290000 	    .word XT_SCOMMA
   6 29bc 7C000000 	    .word XT_EXIT
  95              	.include "words/words.s"
   1              	
   2              	COLON "words", WORDS
   2              	>  HEADER Flag_visible,"words",WORDS,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_WORDS:
   2 29c0 9C290000 	>>  .word 99b
   2 29c4 00000000 	>> 99:.word Flag_visible
   2 29c8 05       	>>  .byte 8f-7f
   2 29c9 776F7264 	>> 7:.ascii "words"
   2      73
   2 29ce 00BF     	>> 8:.p2align 2
   2 29d0 8C080000 	>>  XT_WORDS:.word DOCOLON
   2              	>>  PFA_WORDS:
   3 29d4 A03D0000 	    .word XT_FORTH_WORDLIST, XT_SHOWWORDLIST
   3      D01D0000 
ARM GAS  lp-stellaris.asm 			page 106


   4 29dc 7C000000 	    .word XT_EXIT
  96              	
  97              	.include "words/l-mark.s"
   1              	
   2              	NONAME LMARK
   2 29e0 8C080000 	>  XT_LMARK:.word DOCOLON
   2              	>  PFA_LMARK:
   3 29e4 FC320000 	    .word XT_DP
   4 29e8 7C000000 	    .word XT_EXIT
  98              	.include "words/l-resolve.s"
   1              	
   2              	NONAME LRESOLVE
   2 29ec 8C080000 	>  XT_LRESOLVE:.word DOCOLON
   2              	>  PFA_LRESOLVE:
   3 29f0 84190000 	    .word XT_QSTACK
   4 29f4 F41B0000 	    .word XT_COMMA
   5 29f8 7C000000 	    .word XT_EXIT
  99              	.include "words/g-mark.s"
   1              	
   2              	NONAME GMARK
   2 29fc 8C080000 	>  XT_GMARK:.word DOCOLON
   2              	>  PFA_GMARK:
   3 2a00 FC320000 	    .word XT_DP
   4 2a04 C81B0000 	    .word XT_COMPILE
   5 2a08 FFFFFFFF 	    .word -1
   6 2a0c 7C000000 	    .word XT_EXIT
 100              	.include "words/g-resolve.s"
   1              	
   2              	NONAME GRESOLVE
   2 2a10 8C080000 	>  XT_GRESOLVE:.word DOCOLON
   2              	>  PFA_GRESOLVE:
   3 2a14 84190000 	    .word XT_QSTACK
   4 2a18 FC320000 	    .word XT_DP
   5 2a1c B0000000 	    .word XT_SWAP
   6 2a20 80020000 	    .word XT_STORE
   7 2a24 7C000000 	    .word XT_EXIT
 101              	.include "words/ahead.s"
   1              	
   2              	IMMED "ahead", AHEAD
   2              	>  Header Flag_visible|Flag_immediate,ahead,AHEAD,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_AHEAD:
   2 2a28 C4290000 	>>  .word 99b
   2 2a2c 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2a30 05       	>>  .byte 8f-7f
   2 2a31 61686561 	>> 7:.ascii "ahead"
   2      64
   2 2a36 00BF     	>> 8:.p2align 2
   2 2a38 8C080000 	>>  XT_AHEAD:.word DOCOLON
   2              	>>  PFA_AHEAD:
   3 2a3c C81B0000 	    .word XT_COMPILE
   4 2a40 B40F0000 	    .word XT_DOBRANCH
   5 2a44 FC290000 	    .word XT_GMARK
   6 2a48 7C000000 	    .word XT_EXIT
 102              	.include "words/begin.s"
   1              	
   2              	IMMED "begin", BEGIN
ARM GAS  lp-stellaris.asm 			page 107


   2              	>  Header Flag_visible|Flag_immediate,begin,BEGIN,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_BEGIN:
   2 2a4c 2C2A0000 	>>  .word 99b
   2 2a50 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2a54 05       	>>  .byte 8f-7f
   2 2a55 62656769 	>> 7:.ascii "begin"
   2      6E
   2 2a5a 00BF     	>> 8:.p2align 2
   2 2a5c 8C080000 	>>  XT_BEGIN:.word DOCOLON
   2              	>>  PFA_BEGIN:
   3 2a60 E0290000 	    .word XT_LMARK
   4 2a64 7C000000 	    .word XT_EXIT
 103              	.include "words/then.s"
   1              	
   2              	IMMED "then", THEN
   2              	>  Header Flag_visible|Flag_immediate,then,THEN,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_THEN:
   2 2a68 502A0000 	>>  .word 99b
   2 2a6c 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2a70 04       	>>  .byte 8f-7f
   2 2a71 7468656E 	>> 7:.ascii "then"
   2 2a75 0000BF   	>> 8:.p2align 2
   2 2a78 8C080000 	>>  XT_THEN:.word DOCOLON
   2              	>>  PFA_THEN:
   3 2a7c 102A0000 	    .word XT_GRESOLVE
   4 2a80 7C000000 	    .word XT_EXIT
 104              	.include "words/until.s"
   1              	
   2              	IMMED "until", UNTIL
   2              	>  Header Flag_visible|Flag_immediate,until,UNTIL,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_UNTIL:
   2 2a84 6C2A0000 	>>  .word 99b
   2 2a88 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2a8c 05       	>>  .byte 8f-7f
   2 2a8d 756E7469 	>> 7:.ascii "until"
   2      6C
   2 2a92 00BF     	>> 8:.p2align 2
   2 2a94 8C080000 	>>  XT_UNTIL:.word DOCOLON
   2              	>>  PFA_UNTIL:
   3 2a98 D20F0000 	    .word XT_DOLITERAL
   4 2a9c BE0F0000 	    .word XT_DOCONDBRANCH
   5 2aa0 F41B0000 	    .word XT_COMMA
   6              	
   7 2aa4 EC290000 	    .word XT_LRESOLVE
   8 2aa8 7C000000 	    .word XT_EXIT
 105              	.include "words/while.s"
   1              	
   2              	IMMED "while", WHILE
   2              	>  Header Flag_visible|Flag_immediate,while,WHILE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_WHILE:
   2 2aac 882A0000 	>>  .word 99b
   2 2ab0 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2ab4 05       	>>  .byte 8f-7f
ARM GAS  lp-stellaris.asm 			page 108


   2 2ab5 7768696C 	>> 7:.ascii "while"
   2      65
   2 2aba 00BF     	>> 8:.p2align 2
   2 2abc 8C080000 	>>  XT_WHILE:.word DOCOLON
   2              	>>  PFA_WHILE:
   3 2ac0 F82B0000 	    .word XT_IF
   4 2ac4 B0000000 	    .word XT_SWAP
   5 2ac8 7C000000 	    .word XT_EXIT
 106              	.include "words/repeat.s"
   1              	
   2              	IMMED "repeat", REPEAT
   2              	>  Header Flag_visible|Flag_immediate,repeat,REPEAT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_REPEAT:
   2 2acc B02A0000 	>>  .word 99b
   2 2ad0 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2ad4 06       	>>  .byte 8f-7f
   2 2ad5 72657065 	>> 7:.ascii "repeat"
   2      6174
   2 2adb 00       	>> 8:.p2align 2
   2 2adc 8C080000 	>>  XT_REPEAT:.word DOCOLON
   2              	>>  PFA_REPEAT:
   3 2ae0 482C0000 	    .word XT_AGAIN
   4 2ae4 782A0000 	    .word XT_THEN
   5 2ae8 7C000000 	    .word XT_EXIT
 107              	.include "words/leave.s"
   1              	
   2              	VALUE "lp0", LP0, RAM_upper_leavestack
   2              	>  HEADER Flag_visible|Flag_value|Flag_init,"lp0",LP0,PFA_DOVALUE
   2              	>>  .p2align 2
   2              	>> VE_LP0:
   2 2aec D02A0000 	>>  .word 99b
   2 2af0 A0000000 	>> 99:.word Flag_visible|Flag_value|Flag_init
   2 2af4 03       	>>  .byte 8f-7f
   2 2af5 6C7030   	>> 7:.ascii "lp0"
   2              	>> 8:.p2align 2
   2 2af8 400F0000 	>>  XT_LP0:.word PFA_DOVALUE
   2              	>>  PFA_LP0:
   2 2afc 48020020 	>  .word rampointer
   2              	>  .equ RAM_LP0,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 2b00 08020020 	>  .word RAM_upper_leavestack
   2 2b04 6C020000 	>  .word XT_FETCH
   2 2b08 80020000 	>  .word XT_STORE
   3              	VARIABLE "lp", LP
   3              	>  HEADER Flag_visible|Flag_variable,"lp",LP,PFA_DOVARIABLE
   3              	>>  .p2align 2
   3              	>> VE_LP:
   3 2b0c F02A0000 	>>  .word 99b
   3 2b10 01010000 	>> 99:.word Flag_visible|Flag_variable
   3 2b14 02       	>>  .byte 8f-7f
   3 2b15 6C70     	>> 7:.ascii "lp"
   3 2b17 00       	>> 8:.p2align 2
   3 2b18 260F0000 	>>  XT_LP:.word PFA_DOVARIABLE
   3              	>>  PFA_LP:
   3 2b1c 4C020020 	>  .word rampointer
   3              	>  .set rampointer,rampointer+cellsize
ARM GAS  lp-stellaris.asm 			page 109


   4              	
   5              	COLON "l>", L_FROM
   5              	>  HEADER Flag_visible,"l>",L_FROM,DOCOLON
   5              	>>  .p2align 2
   5              	>> VE_L_FROM:
   5 2b20 102B0000 	>>  .word 99b
   5 2b24 00000000 	>> 99:.word Flag_visible
   5 2b28 02       	>>  .byte 8f-7f
   5 2b29 6C3E     	>> 7:.ascii "l>"
   5 2b2b 00       	>> 8:.p2align 2
   5 2b2c 8C080000 	>>  XT_L_FROM:.word DOCOLON
   5              	>>  PFA_L_FROM:
   6 2b30 182B0000 	    .word XT_LP
   7 2b34 6C020000 	    .word XT_FETCH
   8 2b38 6C020000 	    .word XT_FETCH
   9 2b3c D20F0000 	    .word XT_DOLITERAL
  10 2b40 04000000 	    .word 4
  11 2b44 182B0000 	    .word XT_LP
  12 2b48 F8040000 	    .word XT_PLUSSTORE
  13 2b4c 7C000000 	    .word XT_EXIT
  14              	
  15              	COLON ">l", TO_L
  15              	>  HEADER Flag_visible,">l",TO_L,DOCOLON
  15              	>>  .p2align 2
  15              	>> VE_TO_L:
  15 2b50 242B0000 	>>  .word 99b
  15 2b54 00000000 	>> 99:.word Flag_visible
  15 2b58 02       	>>  .byte 8f-7f
  15 2b59 3E6C     	>> 7:.ascii ">l"
  15 2b5b 00       	>> 8:.p2align 2
  15 2b5c 8C080000 	>>  XT_TO_L:.word DOCOLON
  15              	>>  PFA_TO_L:
  16              	
  17 2b60 D20F0000 	    .word XT_DOLITERAL,-4
  17      FCFFFFFF 
  18 2b68 182B0000 	    .word XT_LP
  19 2b6c F8040000 	    .word XT_PLUSSTORE
  20 2b70 182B0000 	    .word XT_LP
  21 2b74 6C020000 	    .word XT_FETCH
  22 2b78 80020000 	    .word XT_STORE
  23 2b7c 7C000000 	    .word XT_EXIT
  24              	
  25              	IMMED "leave", LEAVE
  25              	>  Header Flag_visible|Flag_immediate,leave,LEAVE,DOCOLON
  25              	>>  .p2align 2
  25              	>> VE_LEAVE:
  25 2b80 542B0000 	>>  .word 99b
  25 2b84 10000000 	>> 99:.word Flag_visible|Flag_immediate
  25 2b88 05       	>>  .byte 8f-7f
  25 2b89 6C656176 	>> 7:.ascii "leave"
  25      65
  25 2b8e 00BF     	>> 8:.p2align 2
  25 2b90 8C080000 	>>  XT_LEAVE:.word DOCOLON
  25              	>>  PFA_LEAVE:
  26 2b94 C81B0000 	    .word XT_COMPILE,XT_UNLOOP
  26      9C0E0000 
  27 2b9c 382A0000 	    .word XT_AHEAD,XT_TO_L,XT_EXIT
ARM GAS  lp-stellaris.asm 			page 110


  27      5C2B0000 
  27      7C000000 
 108              	.include "words/immediate.s"
   1              	
   2              	COLON "immediate", IMMEDIATE
   2              	>  HEADER Flag_visible,"immediate",IMMEDIATE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_IMMEDIATE:
   2 2ba8 842B0000 	>>  .word 99b
   2 2bac 00000000 	>> 99:.word Flag_visible
   2 2bb0 09       	>>  .byte 8f-7f
   2 2bb1 696D6D65 	>> 7:.ascii "immediate"
   2      64696174 
   2      65
   2 2bba 00BF     	>> 8:.p2align 2
   2 2bbc 8C080000 	>>  XT_IMMEDIATE:.word DOCOLON
   2              	>>  PFA_IMMEDIATE:
   3              	
   4 2bc0 B4320000 	    .word XT_GET_CURRENT,XT_EXECUTE
   4      0C0D0000 
   5 2bc8 C8000000 	    .word XT_DUP, XT_DOLITERAL,Flag_immediate
   5      D20F0000 
   5      10000000 
   6 2bd4 10010000 	    .word XT_ROT, XT_FETCH, XT_OR, XT_SWAP, XT_STORE
   6      6C020000 
   6      E8030000 
   6      B0000000 
   6      80020000 
   7 2be8 7C000000 	    .word XT_EXIT
 109              	.include "words/if.s"
   1              	
   2              	IMMED "if", IF
   2              	>  Header Flag_visible|Flag_immediate,if,IF,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_IF:
   2 2bec AC2B0000 	>>  .word 99b
   2 2bf0 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2bf4 02       	>>  .byte 8f-7f
   2 2bf5 6966     	>> 7:.ascii "if"
   2 2bf7 00       	>> 8:.p2align 2
   2 2bf8 8C080000 	>>  XT_IF:.word DOCOLON
   2              	>>  PFA_IF:
   3 2bfc C81B0000 	    .word XT_COMPILE
   4 2c00 BE0F0000 	    .word XT_DOCONDBRANCH
   5 2c04 FC290000 	    .word XT_GMARK
   6 2c08 7C000000 	    .word XT_EXIT
 110              	.include "words/else.s"
   1              	
   2              	IMMED "else", ELSE
   2              	>  Header Flag_visible|Flag_immediate,else,ELSE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_ELSE:
   2 2c0c F02B0000 	>>  .word 99b
   2 2c10 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2c14 04       	>>  .byte 8f-7f
   2 2c15 656C7365 	>> 7:.ascii "else"
   2 2c19 0000BF   	>> 8:.p2align 2
ARM GAS  lp-stellaris.asm 			page 111


   2 2c1c 8C080000 	>>  XT_ELSE:.word DOCOLON
   2              	>>  PFA_ELSE:
   3              	
   4 2c20 C81B0000 	    .word XT_COMPILE
   5 2c24 B40F0000 	    .word XT_DOBRANCH
   6 2c28 FC290000 	    .word XT_GMARK
   7 2c2c B0000000 	    .word XT_SWAP
   8 2c30 102A0000 	    .word XT_GRESOLVE
   9 2c34 7C000000 	    .word XT_EXIT
 111              	.include "words/again.s"
   1              	
   2              	IMMED "again", AGAIN
   2              	>  Header Flag_visible|Flag_immediate,again,AGAIN,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_AGAIN:
   2 2c38 102C0000 	>>  .word 99b
   2 2c3c 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2c40 05       	>>  .byte 8f-7f
   2 2c41 61676169 	>> 7:.ascii "again"
   2      6E
   2 2c46 00BF     	>> 8:.p2align 2
   2 2c48 8C080000 	>>  XT_AGAIN:.word DOCOLON
   2              	>>  PFA_AGAIN:
   3 2c4c C81B0000 	    .word XT_COMPILE
   4 2c50 B40F0000 	    .word XT_DOBRANCH
   5 2c54 EC290000 	    .word XT_LRESOLVE
   6 2c58 7C000000 	    .word XT_EXIT
 112              	.include "words/turnkey.s"
   1              	
   2              	DEFER "turnkey", TURNKEY, XT_APPLTURNKEY
   2              	>  HEADER Flag_visible|Flag_defer|Flag_init,"turnkey",TURNKEY,PFA_DODEFER
   2              	>>  .p2align 2
   2              	>> VE_TURNKEY:
   2 2c5c 3C2C0000 	>>  .word 99b
   2 2c60 C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   2 2c64 07       	>>  .byte 8f-7f
   2 2c65 7475726E 	>> 7:.ascii "turnkey"
   2      6B6579
   2              	>> 8:.p2align 2
   2 2c6c 500F0000 	>>  XT_TURNKEY:.word PFA_DODEFER
   2              	>>  PFA_TURNKEY:
   2 2c70 50020020 	>  .word rampointer
   2              	>  .equ DEFER_RAM_TURNKEY,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 2c74 B8350000 	>  .word XT_APPLTURNKEY
   2 2c78 6C020000 	>  .word XT_FETCH
   2 2c7c 80020000 	>  .word XT_STORE
 113              	
 114              	.include "words/tick.s"
   1              	
   2              	COLON "'", TICK
   2              	>  HEADER Flag_visible,"'",TICK,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_TICK:
   2 2c80 602C0000 	>>  .word 99b
   2 2c84 00000000 	>> 99:.word Flag_visible
   2 2c88 01       	>>  .byte 8f-7f
ARM GAS  lp-stellaris.asm 			page 112


   2 2c89 27       	>> 7:.ascii "'"
   2 2c8a 00BF     	>> 8:.p2align 2
   2 2c8c 8C080000 	>>  XT_TICK:.word DOCOLON
   2              	>>  PFA_TICK:
   3 2c90 941A0000 	    .word XT_PARSENAME
   4 2c94 20250000 	    .word XT_FORTHRECOGNIZER
   5 2c98 70250000 	    .word XT_RECOGNIZE
   6              	    # a word is tickable unless RECTYPE-TOKEN is RECTYPE-NULL or 
   7              	    # the interpret action is a NOOP
   8 2c9c C8000000 	    .word XT_DUP
   9 2ca0 FC220000 	    .word XT_RECTYPE_NULL
  10 2ca4 54060000 	    .word XT_EQUAL
  11 2ca8 B0000000 	    .word XT_SWAP
  12 2cac 6C020000 	    .word XT_FETCH
  13 2cb0 D20F0000 	    .word XT_DOLITERAL
  14 2cb4 0C0E0000 	    .word XT_NOOP
  15 2cb8 54060000 	    .word XT_EQUAL
  16 2cbc E8030000 	    .word XT_OR
  17 2cc0 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_TICK1
  17      D42C0000 
  18 2cc8 D20F0000 	      .word XT_DOLITERAL
  19 2ccc F3FFFFFF 	      .word -13
  20 2cd0 E4180000 	      .word XT_THROW
  21              	PFA_TICK1:
  22 2cd4 98000000 	    .word XT_DROP
  23 2cd8 7C000000 	    .word XT_EXIT
  24              	
 115              	.include "words/abort.s"
   1              	
   2              	COLON "abort" ABORT
   2              	>  HEADER Flag_visible,"abort",ABORT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_ABORT:
   2 2cdc 842C0000 	>>  .word 99b
   2 2ce0 00000000 	>> 99:.word Flag_visible
   2 2ce4 05       	>>  .byte 8f-7f
   2 2ce5 61626F72 	>> 7:.ascii "abort"
   2      74
   2 2cea 00BF     	>> 8:.p2align 2
   2 2cec 8C080000 	>>  XT_ABORT:.word DOCOLON
   2              	>>  PFA_ABORT:
   3 2cf0 A4100000 	    .word XT_TRUE
   4 2cf4 E4180000 	    .word XT_THROW
 116              	
 117              	.include "words/abort-string.s"
   1              	
   2              	IMMED "abort\x22", ABORTQUOTE
   2              	>  Header Flag_visible|Flag_immediate,abort\x22,ABORTQUOTE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_ABORTQUOTE:
   2 2cf8 E02C0000 	>>  .word 99b
   2 2cfc 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2d00 06       	>>  .byte 8f-7f
   2 2d01 61626F72 	>> 7:.ascii "abort\x22"
   2      7422
   2 2d07 00       	>> 8:.p2align 2
   2 2d08 8C080000 	>>  XT_ABORTQUOTE:.word DOCOLON
ARM GAS  lp-stellaris.asm 			page 113


   2              	>>  PFA_ABORTQUOTE:
   3              	
   4 2d0c F4280000 	    .word XT_SQUOTE
   5 2d10 C81B0000 	    .word XT_COMPILE
   6 2d14 E4300000 	    .word XT_QABORT
   7 2d18 7C000000 	    .word XT_EXIT
 118              	.include "words/backslash.s"
   1              	
   2              	IMMED "\\", BACKSLASH
   2              	>  Header Flag_visible|Flag_immediate,\\,BACKSLASH,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_BACKSLASH:
   2 2d1c FC2C0000 	>>  .word 99b
   2 2d20 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2d24 01       	>>  .byte 8f-7f
   2 2d25 5C       	>> 7:.ascii "\\"
   2 2d26 00BF     	>> 8:.p2align 2
   2 2d28 8C080000 	>>  XT_BACKSLASH:.word DOCOLON
   2              	>>  PFA_BACKSLASH:
   3              	
   4 2d2c 38190000 	    .word XT_SOURCE
   5 2d30 E0000000 	    .word XT_NIP
   6 2d34 E8320000 	    .word XT_TO_IN
   7 2d38 80020000 	    .word XT_STORE
   8 2d3c 7C000000 	    .word XT_EXIT
 119              	.include "words/bracketchar.s"
   1              	
   2              	IMMED "[char]", BRACKETCHAR
   2              	>  Header Flag_visible|Flag_immediate,[char],BRACKETCHAR,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_BRACKETCHAR:
   2 2d40 202D0000 	>>  .word 99b
   2 2d44 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2d48 06       	>>  .byte 8f-7f
   2 2d49 5B636861 	>> 7:.ascii "[char]"
   2      725D
   2 2d4f 00       	>> 8:.p2align 2
   2 2d50 8C080000 	>>  XT_BRACKETCHAR:.word DOCOLON
   2              	>>  PFA_BRACKETCHAR:
   3 2d54 C81B0000 	    .word XT_COMPILE
   4 2d58 D20F0000 	    .word XT_DOLITERAL
   5 2d5c C02D0000 	    .word XT_CHAR
   6 2d60 F41B0000 	    .word XT_COMMA
   7 2d64 7C000000 	    .word XT_EXIT
 120              	.include "words/bracketcompile.s"
   1              	
   2              	IMMED "[compile]", BRACKETCOMPILE
   2              	>  Header Flag_visible|Flag_immediate,[compile],BRACKETCOMPILE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_BRACKETCOMPILE:
   2 2d68 442D0000 	>>  .word 99b
   2 2d6c 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2d70 09       	>>  .byte 8f-7f
   2 2d71 5B636F6D 	>> 7:.ascii "[compile]"
   2      70696C65 
   2      5D
   2 2d7a 00BF     	>> 8:.p2align 2
ARM GAS  lp-stellaris.asm 			page 114


   2 2d7c 8C080000 	>>  XT_BRACKETCOMPILE:.word DOCOLON
   2              	>>  PFA_BRACKETCOMPILE:
   3 2d80 C81B0000 	    .word XT_COMPILE
   4 2d84 C81B0000 	    .word XT_COMPILE
   5 2d88 8C2C0000 	    .word XT_TICK
   6 2d8c F41B0000 	    .word XT_COMMA
   7 2d90 7C000000 	    .word XT_EXIT
 121              	.include "words/brackettick.s"
   1              	
   2              	IMMED "[\x27]" BRACKETTICK
   2              	>  Header Flag_visible|Flag_immediate,[\x27],BRACKETTICK,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_BRACKETTICK:
   2 2d94 6C2D0000 	>>  .word 99b
   2 2d98 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2d9c 03       	>>  .byte 8f-7f
   2 2d9d 5B275D   	>> 7:.ascii "[\x27]"
   2              	>> 8:.p2align 2
   2 2da0 8C080000 	>>  XT_BRACKETTICK:.word DOCOLON
   2              	>>  PFA_BRACKETTICK:
   3 2da4 8C2C0000 	    .word XT_TICK
   4 2da8 A41B0000 	    .word XT_LITERAL
   5 2dac 7C000000 	    .word XT_EXIT
 122              	.include "words/char.s"
   1              	
   2              	COLON "char", CHAR
   2              	>  HEADER Flag_visible,"char",CHAR,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_CHAR:
   2 2db0 982D0000 	>>  .word 99b
   2 2db4 00000000 	>> 99:.word Flag_visible
   2 2db8 04       	>>  .byte 8f-7f
   2 2db9 63686172 	>> 7:.ascii "char"
   2 2dbd 0000BF   	>> 8:.p2align 2
   2 2dc0 8C080000 	>>  XT_CHAR:.word DOCOLON
   2              	>>  PFA_CHAR:
   3 2dc4 941A0000 	    .word XT_PARSENAME
   4 2dc8 40050000 	    .word XT_ZEROEQUAL,XT_DOCONDBRANCH,CHAR_1
   4      BE0F0000 
   4      E02D0000 
   5 2dd4 D20F0000 	       .word XT_DOLITERAL, -16, XT_THROW
   5      F0FFFFFF 
   5      E4180000 
   6              	CHAR_1:
   7 2de0 14050000 	    .word XT_CFETCH
   8 2de4 7C000000 	    .word XT_EXIT
 123              	.include "words/colon-noname.s"
   1              	
   2              	COLON ":noname", COLONNONAME
   2              	>  HEADER Flag_visible,":noname",COLONNONAME,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_COLONNONAME:
   2 2de8 B42D0000 	>>  .word 99b
   2 2dec 00000000 	>> 99:.word Flag_visible
   2 2df0 07       	>>  .byte 8f-7f
   2 2df1 3A6E6F6E 	>> 7:.ascii ":noname"
   2      616D65
ARM GAS  lp-stellaris.asm 			page 115


   2              	>> 8:.p2align 2
   2 2df8 8C080000 	>>  XT_COLONNONAME:.word DOCOLON
   2              	>>  PFA_COLONNONAME:
   3 2dfc A0120000 	    .word XT_HERE
   4 2e00 C8000000 	    .word XT_DUP
   5 2e04 1C300000 	    .word XT_LATEST
   6 2e08 80020000 	    .word XT_STORE
   7              	
   8 2e0c C81B0000 	    .word XT_COMPILE
   9 2e10 8C080000 	    .word DOCOLON
  10              	
  11 2e14 74310000 	    .word XT_RBRACKET
  12 2e18 7C000000 	    .word XT_EXIT
 124              	.include "words/colon.s"
   1              	
   2              	COLON ":", COLON
   2              	>  HEADER Flag_visible,":",COLON,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_COLON:
   2 2e1c EC2D0000 	>>  .word 99b
   2 2e20 00000000 	>> 99:.word Flag_visible
   2 2e24 01       	>>  .byte 8f-7f
   2 2e25 3A       	>> 7:.ascii ":"
   2 2e26 00BF     	>> 8:.p2align 2
   2 2e28 8C080000 	>>  XT_COLON:.word DOCOLON
   2              	>>  PFA_COLON:
   3 2e2c 1C2F0000 	    .word XT_DOCREATE
   4 2e30 F82D0000 	    .word XT_COLONNONAME
   5 2e34 98000000 	    .word XT_DROP
   6 2e38 7C000000 	    .word XT_EXIT
 125              	.include "words/constant.s"
   1              	
   2              	COLON "constant", CONSTANT
   2              	>  HEADER Flag_visible,"constant",CONSTANT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_CONSTANT:
   2 2e3c 202E0000 	>>  .word 99b
   2 2e40 00000000 	>> 99:.word Flag_visible
   2 2e44 08       	>>  .byte 8f-7f
   2 2e45 636F6E73 	>> 7:.ascii "constant"
   2      74616E74 
   2 2e4d 0000BF   	>> 8:.p2align 2
   2 2e50 8C080000 	>>  XT_CONSTANT:.word DOCOLON
   2              	>>  PFA_CONSTANT:
   3 2e54 1C2F0000 	    .word XT_DOCREATE
   4 2e58 38310000 	    .word XT_REVEAL
   5 2e5c C81B0000 	    .word XT_COMPILE
   6 2e60 260F0000 	    .word PFA_DOVARIABLE
   7 2e64 F41B0000 	    .word XT_COMMA
   8 2e68 7C000000 	    .word XT_EXIT
 126              	.include "words/create.s"
   1              	
   2              	COLON "create", CREATE
   2              	>  HEADER Flag_visible,"create",CREATE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_CREATE:
   2 2e6c 402E0000 	>>  .word 99b
ARM GAS  lp-stellaris.asm 			page 116


   2 2e70 00000000 	>> 99:.word Flag_visible
   2 2e74 06       	>>  .byte 8f-7f
   2 2e75 63726561 	>> 7:.ascii "create"
   2      7465
   2 2e7b 00       	>> 8:.p2align 2
   2 2e7c 8C080000 	>>  XT_CREATE:.word DOCOLON
   2              	>>  PFA_CREATE:
   3 2e80 1C2F0000 	    .word XT_DOCREATE
   4 2e84 38310000 	    .word XT_REVEAL
   5 2e88 C81B0000 	    .word XT_COMPILE
   6 2e8c 260F0000 	    .word PFA_DOVARIABLE
   7 2e90 7C000000 	    .word XT_EXIT
 127              	.include "words/defer-fetch.s"
   1              	
   2              	COLON "defer@", DEFERFETCH
   2              	>  HEADER Flag_visible,"defer@",DEFERFETCH,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DEFERFETCH:
   2 2e94 702E0000 	>>  .word 99b
   2 2e98 00000000 	>> 99:.word Flag_visible
   2 2e9c 06       	>>  .byte 8f-7f
   2 2e9d 64656665 	>> 7:.ascii "defer@"
   2      7240
   2 2ea3 00       	>> 8:.p2align 2
   2 2ea4 8C080000 	>>  XT_DEFERFETCH:.word DOCOLON
   2              	>>  PFA_DEFERFETCH:
   3 2ea8 94320000 	    .word XT_TO_BODY
   4 2eac C8000000 	    .word XT_DUP, XT_FETCH,XT_SWAP
   4      6C020000 
   4      B0000000 
   5 2eb8 DC0B0000 	    .word XT_CELLPLUS
   6 2ebc DC0B0000 	    .word XT_CELLPLUS
   7 2ec0 6C020000 	    .word XT_FETCH
   8 2ec4 0C0D0000 	    .word XT_EXECUTE
   9 2ec8 7C000000 	    .word XT_EXIT
 128              	.include "words/defer-store.s"
   1              	
   2              	COLON "defer!", DEFERSTORE
   2              	>  HEADER Flag_visible,"defer!",DEFERSTORE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DEFERSTORE:
   2 2ecc 982E0000 	>>  .word 99b
   2 2ed0 00000000 	>> 99:.word Flag_visible
   2 2ed4 06       	>>  .byte 8f-7f
   2 2ed5 64656665 	>> 7:.ascii "defer!"
   2      7221
   2 2edb 00       	>> 8:.p2align 2
   2 2edc 8C080000 	>>  XT_DEFERSTORE:.word DOCOLON
   2              	>>  PFA_DEFERSTORE:
   3 2ee0 94320000 	    .word XT_TO_BODY
   4 2ee4 C8000000 	    .word XT_DUP, XT_FETCH,XT_SWAP
   4      6C020000 
   4      B0000000 
   5 2ef0 DC0B0000 	    .word XT_CELLPLUS
   6 2ef4 DC0B0000 	    .word XT_CELLPLUS
   7 2ef8 DC0B0000 	    .word XT_CELLPLUS
   8 2efc 6C020000 	    .word XT_FETCH
ARM GAS  lp-stellaris.asm 			page 117


   9 2f00 0C0D0000 	    .word XT_EXECUTE
  10 2f04 7C000000 	    .word XT_EXIT
  11              	
 129              	.include "words/do-create.s"
   1              	
   2              	COLON "(create)", DOCREATE
   2              	>  HEADER Flag_visible,"(create)",DOCREATE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DOCREATE:
   2 2f08 D02E0000 	>>  .word 99b
   2 2f0c 00000000 	>> 99:.word Flag_visible
   2 2f10 08       	>>  .byte 8f-7f
   2 2f11 28637265 	>> 7:.ascii "(create)"
   2      61746529 
   2 2f19 0000BF   	>> 8:.p2align 2
   2 2f1c 8C080000 	>>  XT_DOCREATE:.word DOCOLON
   2              	>>  PFA_DOCREATE:
   3 2f20 941A0000 	    .word XT_PARSENAME,XT_WLSCOPE
   3      70320000 
   4 2f28 302F0000 	    .word XT_DOCREATE_IN
   5 2f2c 7C000000 	    .word XT_EXIT
   6              	
   7              	NONAME DOCREATE_IN
   7 2f30 8C080000 	>  XT_DOCREATE_IN:.word DOCOLON
   7              	>  PFA_DOCREATE_IN:
   8 2f34 C8000000 	    .word XT_DUP,XT_NEWEST,XT_CELLPLUS,XT_STORE
   8      58300000 
   8      DC0B0000 
   8      80020000 
   9 2f44 C42F0000 	    .word XT_HEADER,XT_NEWEST,XT_STORE         
   9      58300000 
   9      80020000 
  10 2f50 7C000000 	    .word XT_EXIT
 130              	.include "words/do.s"
   1              	
   2              	IMMED "do", DO
   2              	>  Header Flag_visible|Flag_immediate,do,DO,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_DO:
   2 2f54 0C2F0000 	>>  .word 99b
   2 2f58 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2f5c 02       	>>  .byte 8f-7f
   2 2f5d 646F     	>> 7:.ascii "do"
   2 2f5f 00       	>> 8:.p2align 2
   2 2f60 8C080000 	>>  XT_DO:.word DOCOLON
   2              	>>  PFA_DO:
   3 2f64 C81B0000 	    .word XT_COMPILE
   4 2f68 440E0000 	    .word XT_DODO
   5 2f6c E0290000 	    .word XT_LMARK
   6 2f70 3C100000 	    .word XT_ZERO, XT_TO_L
   6      5C2B0000 
   7 2f78 7C000000 	    .word XT_EXIT
 131              	.include "words/endloop.s"
   1              	
   2              	IMMED "endloop", ENDLOOP
   2              	>  Header Flag_visible|Flag_immediate,endloop,ENDLOOP,DOCOLON
   2              	>>  .p2align 2
ARM GAS  lp-stellaris.asm 			page 118


   2              	>> VE_ENDLOOP:
   2 2f7c 582F0000 	>>  .word 99b
   2 2f80 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 2f84 07       	>>  .byte 8f-7f
   2 2f85 656E646C 	>> 7:.ascii "endloop"
   2      6F6F70
   2              	>> 8:.p2align 2
   2 2f8c 8C080000 	>>  XT_ENDLOOP:.word DOCOLON
   2              	>>  PFA_ENDLOOP:
   3              	
   4 2f90 EC290000 	        .word XT_LRESOLVE
   5              	ENDLOOP1:
   6 2f94 2C2B0000 	        .word XT_L_FROM,XT_QDUP,XT_DOCONDBRANCH, ENDLOOP2
   6      30010000 
   6      BE0F0000 
   6      B02F0000 
   7 2fa4 782A0000 	        .word XT_THEN, XT_DOBRANCH, ENDLOOP1
   7      B40F0000 
   7      942F0000 
   8              	ENDLOOP2:
   9 2fb0 7C000000 		.word XT_EXIT
  10              	
 132              	.include "words/header.s"
   1              	
   2              	COLON "header", HEADER
   2              	>  HEADER Flag_visible,"header",HEADER,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_HEADER:
   2 2fb4 802F0000 	>>  .word 99b
   2 2fb8 00000000 	>> 99:.word Flag_visible
   2 2fbc 06       	>>  .byte 8f-7f
   2 2fbd 68656164 	>> 7:.ascii "header"
   2      6572
   2 2fc3 00       	>> 8:.p2align 2
   2 2fc4 8C080000 	>>  XT_HEADER:.word DOCOLON
   2              	>>  PFA_HEADER:
   3              	
   4 2fc8 F8000000 	    .word XT_OVER,XT_GREATERZERO 
   4      CC320000 
   5 2fd0 BE0F0000 	    .word XT_DOCONDBRANCH, PFA_HEADER1
   5      00300000 
   6 2fd8 0C0D0000 	    .word XT_EXECUTE
   7 2fdc F41B0000 	    .word XT_COMMA
   8 2fe0 A0120000 	    .word XT_HERE,XT_TO_R
   8      88010000 
   9 2fe8 D20F0000 	    .word XT_DOLITERAL
  10 2fec 00000000 	    .word Flag_visible
  11 2ff0 F41B0000 	    .word XT_COMMA
  12 2ff4 48290000 	    .word XT_SCOMMA
  13 2ff8 A0010000 	    .word XT_R_FROM
  14 2ffc 7C000000 	    .word XT_EXIT
  15              	
  16              	PFA_HEADER1:
  17 3000 D20F0000 	    .word XT_DOLITERAL
  18 3004 F0FFFFFF 	    .word -16
  19 3008 E4180000 	    .word XT_THROW
 133              	.include "words/latest.s"
ARM GAS  lp-stellaris.asm 			page 119


   1              	
   2              	VARIABLE "latest", LATEST
   2              	>  HEADER Flag_visible|Flag_variable,"latest",LATEST,PFA_DOVARIABLE
   2              	>>  .p2align 2
   2              	>> VE_LATEST:
   2 300c B82F0000 	>>  .word 99b
   2 3010 01010000 	>> 99:.word Flag_visible|Flag_variable
   2 3014 06       	>>  .byte 8f-7f
   2 3015 6C617465 	>> 7:.ascii "latest"
   2      7374
   2 301b 00       	>> 8:.p2align 2
   2 301c 260F0000 	>>  XT_LATEST:.word PFA_DOVARIABLE
   2              	>>  PFA_LATEST:
   2 3020 54020020 	>  .word rampointer
   2              	>  .set rampointer,rampointer+cellsize
   3              	
 134              	.include "words/loop.s"
   1              	
   2              	IMMED "loop", LOOP
   2              	>  Header Flag_visible|Flag_immediate,loop,LOOP,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_LOOP:
   2 3024 10300000 	>>  .word 99b
   2 3028 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 302c 04       	>>  .byte 8f-7f
   2 302d 6C6F6F70 	>> 7:.ascii "loop"
   2 3031 0000BF   	>> 8:.p2align 2
   2 3034 8C080000 	>>  XT_LOOP:.word DOCOLON
   2              	>>  PFA_LOOP:
   3 3038 C81B0000 	    .word XT_COMPILE
   4 303c 620E0000 	    .word XT_DOLOOP
   5 3040 8C2F0000 	    .word XT_ENDLOOP
   6 3044 7C000000 	    .word XT_EXIT
 135              	.include "words/newest.s"
   1              	
   2              	DVARIABLE "newest", NEWEST
   2              	>  HEADER Flag_visible|Flag_variable,"newest",NEWEST,PFA_DOVARIABLE
   2              	>>  .p2align 2
   2              	>> VE_NEWEST:
   2 3048 28300000 	>>  .word 99b
   2 304c 01010000 	>> 99:.word Flag_visible|Flag_variable
   2 3050 06       	>>  .byte 8f-7f
   2 3051 6E657765 	>> 7:.ascii "newest"
   2      7374
   2 3057 00       	>> 8:.p2align 2
   2 3058 260F0000 	>>  XT_NEWEST:.word PFA_DOVARIABLE
   2              	>>  PFA_NEWEST:
   2 305c 58020020 	>  .word rampointer
   2              	>  .set rampointer,rampointer+2*cellsize
 136              	.include "words/plusloop.s"
   1              	
   2              	IMMED "+loop", PLUSLOOP
   2              	>  Header Flag_visible|Flag_immediate,+loop,PLUSLOOP,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_PLUSLOOP:
   2 3060 4C300000 	>>  .word 99b
   2 3064 10000000 	>> 99:.word Flag_visible|Flag_immediate
ARM GAS  lp-stellaris.asm 			page 120


   2 3068 05       	>>  .byte 8f-7f
   2 3069 2B6C6F6F 	>> 7:.ascii "+loop"
   2      70
   2 306e 00BF     	>> 8:.p2align 2
   2 3070 8C080000 	>>  XT_PLUSLOOP:.word DOCOLON
   2              	>>  PFA_PLUSLOOP:
   3 3074 C81B0000 	    .word XT_COMPILE
   4 3078 6C0E0000 	    .word XT_DOPLUSLOOP
   5 307c 8C2F0000 	    .word XT_ENDLOOP
   6 3080 7C000000 	    .word XT_EXIT
 137              	.include "words/postpone.s"
   1              	
   2              	IMMED "postpone", POSTPONE
   2              	>  Header Flag_visible|Flag_immediate,postpone,POSTPONE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_POSTPONE:
   2 3084 64300000 	>>  .word 99b
   2 3088 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 308c 08       	>>  .byte 8f-7f
   2 308d 706F7374 	>> 7:.ascii "postpone"
   2      706F6E65 
   2 3095 0000BF   	>> 8:.p2align 2
   2 3098 8C080000 	>>  XT_POSTPONE:.word DOCOLON
   2              	>>  PFA_POSTPONE:
   3 309c 941A0000 	    .word XT_PARSENAME
   4 30a0 20250000 	    .word XT_FORTHRECOGNIZER
   5 30a4 70250000 	    .word XT_RECOGNIZE
   6 30a8 C8000000 	    .word XT_DUP
   7 30ac 88010000 	    .word XT_TO_R
   8 30b0 DC0B0000 	    .word XT_CELLPLUS
   9 30b4 DC0B0000 	    .word XT_CELLPLUS
  10 30b8 6C020000 	    .word XT_FETCH
  11 30bc 0C0D0000 	    .word XT_EXECUTE
  12 30c0 A0010000 	    .word XT_R_FROM
  13 30c4 DC0B0000 	    .word XT_CELLPLUS
  14 30c8 6C020000 	    .word XT_FETCH
  15 30cc F41B0000 	    .word XT_COMMA
  16 30d0 7C000000 	    .word XT_EXIT
 138              	.include "words/q-abort.s"
   1              	
   2              	COLON "?abort", QABORT
   2              	>  HEADER Flag_visible,"?abort",QABORT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_QABORT:
   2 30d4 88300000 	>>  .word 99b
   2 30d8 00000000 	>> 99:.word Flag_visible
   2 30dc 06       	>>  .byte 8f-7f
   2 30dd 3F61626F 	>> 7:.ascii "?abort"
   2      7274
   2 30e3 00       	>> 8:.p2align 2
   2 30e4 8C080000 	>>  XT_QABORT:.word DOCOLON
   2              	>>  PFA_QABORT:
   3              	
   4 30e8 10010000 	        .word XT_ROT,XT_DOCONDBRANCH,QABO1
   4      BE0F0000 
   4      FC300000 
   5 30f4 9C280000 	        .word XT_TYPE,XT_ABORT
ARM GAS  lp-stellaris.asm 			page 121


   5      EC2C0000 
   6 30fc 3C070000 	QABO1:  .word XT_2DROP,XT_EXIT
   6      7C000000 
 139              	.include "words/recurse.s"
   1              	
   2              	IMMED "recurse", RECURSE
   2              	>  Header Flag_visible|Flag_immediate,recurse,RECURSE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_RECURSE:
   2 3104 D8300000 	>>  .word 99b
   2 3108 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 310c 07       	>>  .byte 8f-7f
   2 310d 72656375 	>> 7:.ascii "recurse"
   2      727365
   2              	>> 8:.p2align 2
   2 3114 8C080000 	>>  XT_RECURSE:.word DOCOLON
   2              	>>  PFA_RECURSE:
   3 3118 1C300000 	    .word XT_LATEST
   4 311c 6C020000 	    .word XT_FETCH
   5 3120 F41B0000 	    .word XT_COMMA
   6 3124 7C000000 	    .word XT_EXIT
 140              	.include "words/reveal.s"
   1              	
   2              	COLON "reveal", REVEAL
   2              	>  HEADER Flag_visible,"reveal",REVEAL,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_REVEAL:
   2 3128 08310000 	>>  .word 99b
   2 312c 00000000 	>> 99:.word Flag_visible
   2 3130 06       	>>  .byte 8f-7f
   2 3131 72657665 	>> 7:.ascii "reveal"
   2      616C
   2 3137 00       	>> 8:.p2align 2
   2 3138 8C080000 	>>  XT_REVEAL:.word DOCOLON
   2              	>>  PFA_REVEAL:
   3 313c 58300000 	    .word XT_NEWEST,XT_CELLPLUS,XT_FETCH
   3      DC0B0000 
   3      6C020000 
   4 3148 30010000 	    .word XT_QDUP,XT_DOCONDBRANCH, REVEAL1
   4      BE0F0000 
   4      64310000 
   5 3154 58300000 	    .word XT_NEWEST,XT_FETCH,XT_SWAP,XT_DOTO1
   5      6C020000 
   5      B0000000 
   5      04320000 
   6              	REVEAL1:
   7 3164 7C000000 	    .word XT_EXIT
 141              	.include "words/right-bracket.s"
   1              	
   2              	COLON "]", RBRACKET
   2              	>  HEADER Flag_visible,"]",RBRACKET,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_RBRACKET:
   2 3168 2C310000 	>>  .word 99b
   2 316c 00000000 	>> 99:.word Flag_visible
   2 3170 01       	>>  .byte 8f-7f
   2 3171 5D       	>> 7:.ascii "]"
ARM GAS  lp-stellaris.asm 			page 122


   2 3172 00BF     	>> 8:.p2align 2
   2 3174 8C080000 	>>  XT_RBRACKET:.word DOCOLON
   2              	>>  PFA_RBRACKET:
   3 3178 50100000 	    .word XT_ONE
   4 317c 0C0C0000 	    .word XT_STATE
   5 3180 80020000 	    .word XT_STORE
   6 3184 7C000000 	    .word XT_EXIT
 142              	.include "words/semicolon.s"
   1              	
   2              	IMMED "\x3b", SEMICOLON
   2              	>  Header Flag_visible|Flag_immediate,\x3b,SEMICOLON,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_SEMICOLON:
   2 3188 6C310000 	>>  .word 99b
   2 318c 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 3190 01       	>>  .byte 8f-7f
   2 3191 3B       	>> 7:.ascii "\x3b"
   2 3192 00BF     	>> 8:.p2align 2
   2 3194 8C080000 	>>  XT_SEMICOLON:.word DOCOLON
   2              	>>  PFA_SEMICOLON:
   3 3198 C81B0000 	    .word XT_COMPILE
   4 319c 7C000000 	    .word XT_EXIT
   5 31a0 E8110000 	    .word XT_LBRACKET
   6 31a4 38310000 	    .word XT_REVEAL
   7 31a8 7C000000 	    .word XT_EXIT
 143              	.include "words/to.s"
   1              	
   2              	IMMED "to", TO
   2              	>  Header Flag_visible|Flag_immediate,to,TO,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_TO:
   2 31ac 8C310000 	>>  .word 99b
   2 31b0 10000000 	>> 99:.word Flag_visible|Flag_immediate
   2 31b4 02       	>>  .byte 8f-7f
   2 31b5 746F     	>> 7:.ascii "to"
   2 31b7 00       	>> 8:.p2align 2
   2 31b8 8C080000 	>>  XT_TO:.word DOCOLON
   2              	>>  PFA_TO:
   3 31bc 8C2C0000 	    .word XT_TICK
   4 31c0 94320000 	    .word XT_TO_BODY
   5 31c4 0C0C0000 	    .word XT_STATE
   6 31c8 6C020000 	    .word XT_FETCH
   7 31cc BE0F0000 	    .word XT_DOCONDBRANCH, PFA_DOTO1
   7      08320000 
   8 31d4 C81B0000 	      .word XT_COMPILE
   9 31d8 E4310000 	      .word XT_DOTO
  10 31dc F41B0000 	      .word XT_COMMA
  11 31e0 7C000000 	      .word XT_EXIT
  12              	
  13              	NONAME DOTO
  13 31e4 8C080000 	>  XT_DOTO:.word DOCOLON
  13              	>  PFA_DOTO:
  14 31e8 A0010000 	    .word XT_R_FROM
  15 31ec C8000000 	    .word XT_DUP
  16 31f0 DC0B0000 	    .word XT_CELLPLUS
  17 31f4 88010000 	    .word XT_TO_R
  18 31f8 6C020000 	    .word XT_FETCH
ARM GAS  lp-stellaris.asm 			page 123


  19 31fc 04320000 	    .word XT_DOTO1
  20 3200 7C000000 	    .word XT_EXIT
  21              	
  22              	NONAME DOTO1
  22 3204 8C080000 	>  XT_DOTO1:.word DOCOLON
  22              	>  PFA_DOTO1:
  23 3208 DC0B0000 	    .word XT_CELLPLUS
  24 320c C8000000 	    .word XT_DUP, XT_FETCH, XT_SWAP
  24      6C020000 
  24      B0000000 
  25 3218 DC0B0000 	    .word XT_CELLPLUS
  26 321c DC0B0000 	    .word XT_CELLPLUS
  27 3220 DC0B0000 	    .word XT_CELLPLUS
  28 3224 6C020000 	    .word XT_FETCH
  29 3228 0C0D0000 	    .word XT_EXECUTE
  30 322c 7C000000 	    .word XT_EXIT
 144              	.include "words/variable.s"
   1              	
   2              	COLON "variable", VARIABLE
   2              	>  HEADER Flag_visible,"variable",VARIABLE,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_VARIABLE:
   2 3230 B0310000 	>>  .word 99b
   2 3234 00000000 	>> 99:.word Flag_visible
   2 3238 08       	>>  .byte 8f-7f
   2 3239 76617269 	>> 7:.ascii "variable"
   2      61626C65 
   2 3241 0000BF   	>> 8:.p2align 2
   2 3244 8C080000 	>>  XT_VARIABLE:.word DOCOLON
   2              	>>  PFA_VARIABLE:
   3 3248 A0120000 	    .word XT_HERE
   4 324c 502E0000 	    .word XT_CONSTANT
   5 3250 D20F0000 	    .word XT_DOLITERAL,4
   5      04000000 
   6 3258 BC120000 	    .word XT_ALLOT
   7 325c 7C000000 	    .word XT_EXIT
 145              	.include "words/wlscope.s"
   1              	
   2              	DEFER "wlscope", WLSCOPE, XT_GET_CURRENT
   2              	>  HEADER Flag_visible|Flag_defer|Flag_init,"wlscope",WLSCOPE,PFA_DODEFER
   2              	>>  .p2align 2
   2              	>> VE_WLSCOPE:
   2 3260 34320000 	>>  .word 99b
   2 3264 C0000000 	>> 99:.word Flag_visible|Flag_defer|Flag_init
   2 3268 07       	>>  .byte 8f-7f
   2 3269 776C7363 	>> 7:.ascii "wlscope"
   2      6F7065
   2              	>> 8:.p2align 2
   2 3270 500F0000 	>>  XT_WLSCOPE:.word PFA_DODEFER
   2              	>>  PFA_WLSCOPE:
   2 3274 60020020 	>  .word rampointer
   2              	>  .equ DEFER_RAM_WLSCOPE,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 3278 B4320000 	>  .word XT_GET_CURRENT
   2 327c 6C020000 	>  .word XT_FETCH
   2 3280 80020000 	>  .word XT_STORE
 146              	.include "words/to-body.s"
ARM GAS  lp-stellaris.asm 			page 124


   1              	
   2              	COLON ">body", TO_BODY
   2              	>  HEADER Flag_visible,">body",TO_BODY,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_TO_BODY:
   2 3284 64320000 	>>  .word 99b
   2 3288 00000000 	>> 99:.word Flag_visible
   2 328c 05       	>>  .byte 8f-7f
   2 328d 3E626F64 	>> 7:.ascii ">body"
   2      79
   2 3292 00BF     	>> 8:.p2align 2
   2 3294 8C080000 	>>  XT_TO_BODY:.word DOCOLON
   2              	>>  PFA_TO_BODY:
   3 3298 DC0B0000 	    .word XT_CELLPLUS,XT_EXIT
   3      7C000000 
 147              	.include "words/get-current.s"
   1              	
   2              	COLON "get-current", GET_CURRENT
   2              	>  HEADER Flag_visible,"get-current",GET_CURRENT,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_GET_CURRENT:
   2 32a0 88320000 	>>  .word 99b
   2 32a4 00000000 	>> 99:.word Flag_visible
   2 32a8 0B       	>>  .byte 8f-7f
   2 32a9 6765742D 	>> 7:.ascii "get-current"
   2      63757272 
   2      656E74
   2              	>> 8:.p2align 2
   2 32b4 8C080000 	>>  XT_GET_CURRENT:.word DOCOLON
   2              	>>  PFA_GET_CURRENT:
   3              	
   4 32b8 101E0000 	    .word XT_CURRENT,XT_EXIT
   4      7C000000 
 148              	.include "words/greater-zero.s"
   1              	
   2              	COLON "0>", GREATERZERO
   2              	>  HEADER Flag_visible,"0>",GREATERZERO,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_GREATERZERO:
   2 32c0 A4320000 	>>  .word 99b
   2 32c4 00000000 	>> 99:.word Flag_visible
   2 32c8 02       	>>  .byte 8f-7f
   2 32c9 303E     	>> 7:.ascii "0>"
   2 32cb 00       	>> 8:.p2align 2
   2 32cc 8C080000 	>>  XT_GREATERZERO:.word DOCOLON
   2              	>>  PFA_GREATERZERO:
   3 32d0 3C100000 	    .word XT_ZERO,XT_GREATER,XT_EXIT
   3      E8050000 
   3      7C000000 
 149              	.include "words/to-in.s"
   1              	VARIABLE ">in", TO_IN 
   1              	>  HEADER Flag_visible|Flag_variable,">in",TO_IN,PFA_DOVARIABLE
   1              	>>  .p2align 2
   1              	>> VE_TO_IN:
   1 32dc C4320000 	>>  .word 99b
   1 32e0 01010000 	>> 99:.word Flag_visible|Flag_variable
   1 32e4 03       	>>  .byte 8f-7f
ARM GAS  lp-stellaris.asm 			page 125


   1 32e5 3E696E   	>> 7:.ascii ">in"
   1              	>> 8:.p2align 2
   1 32e8 260F0000 	>>  XT_TO_IN:.word PFA_DOVARIABLE
   1              	>>  PFA_TO_IN:
   1 32ec 64020020 	>  .word rampointer
   1              	>  .set rampointer,rampointer+cellsize
 150              	.include "words/dp.s"
   1              	
   2              	VALUE "dp", DP, HERESTART
   2              	>  HEADER Flag_visible|Flag_value|Flag_init,"dp",DP,PFA_DOVALUE
   2              	>>  .p2align 2
   2              	>> VE_DP:
   2 32f0 E0320000 	>>  .word 99b
   2 32f4 A0000000 	>> 99:.word Flag_visible|Flag_value|Flag_init
   2 32f8 02       	>>  .byte 8f-7f
   2 32f9 6470     	>> 7:.ascii "dp"
   2 32fb 00       	>> 8:.p2align 2
   2 32fc 400F0000 	>>  XT_DP:.word PFA_DOVALUE
   2              	>>  PFA_DP:
   2 3300 68020020 	>  .word rampointer
   2              	>  .equ RAM_DP,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 3304 7C020020 	>  .word HERESTART
   2 3308 6C020000 	>  .word XT_FETCH
   2 330c 80020000 	>  .word XT_STORE
 151              	.include "words/udefer.s"
   1              	
   2              	COLON "Udefer@", UDEFER_FETCH
   2              	>  HEADER Flag_visible,"Udefer@",UDEFER_FETCH,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_UDEFER_FETCH:
   2 3310 F4320000 	>>  .word 99b
   2 3314 00000000 	>> 99:.word Flag_visible
   2 3318 07       	>>  .byte 8f-7f
   2 3319 55646566 	>> 7:.ascii "Udefer@"
   2      657240
   2              	>> 8:.p2align 2
   2 3320 8C080000 	>>  XT_UDEFER_FETCH:.word DOCOLON
   2              	>>  PFA_UDEFER_FETCH:
   3 3324 900F0000 	  .word XT_UP_FETCH, XT_PLUS, XT_FETCH
   3      480B0000 
   3      6C020000 
   4 3330 7C000000 	.word XT_EXIT
   5              	
   6              	COLON "Udefer!", UDEFER_STORE
   6              	>  HEADER Flag_visible,"Udefer!",UDEFER_STORE,DOCOLON
   6              	>>  .p2align 2
   6              	>> VE_UDEFER_STORE:
   6 3334 14330000 	>>  .word 99b
   6 3338 00000000 	>> 99:.word Flag_visible
   6 333c 07       	>>  .byte 8f-7f
   6 333d 55646566 	>> 7:.ascii "Udefer!"
   6      657221
   6              	>> 8:.p2align 2
   6 3344 8C080000 	>>  XT_UDEFER_STORE:.word DOCOLON
   6              	>>  PFA_UDEFER_STORE:
   7 3348 900F0000 	  .word XT_UP_FETCH, XT_PLUS, XT_STORE
ARM GAS  lp-stellaris.asm 			page 126


   7      480B0000 
   7      80020000 
   8 3354 7C000000 	.word XT_EXIT
 152              	.include "words/wordlist.s"
   1              	
   2              	COLON "wordlist", WORDLIST
   2              	>  HEADER Flag_visible,"wordlist",WORDLIST,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_WORDLIST:
   2 3358 38330000 	>>  .word 99b
   2 335c 00000000 	>> 99:.word Flag_visible
   2 3360 08       	>>  .byte 8f-7f
   2 3361 776F7264 	>> 7:.ascii "wordlist"
   2      6C697374 
   2 3369 0000BF   	>> 8:.p2align 2
   2 336c 8C080000 	>>  XT_WORDLIST:.word DOCOLON
   2              	>>  PFA_WORDLIST:
   3              	
   4 3370 A0120000 	    .word XT_HERE
   5 3374 D20F0000 	    .word XT_DOLITERAL,4
   5      04000000 
   6 337c BC120000 	    .word XT_ALLOT
   7 3380 C8000000 	    .word XT_DUP,XT_ZERO,XT_SWAP,XT_STORE
   7      3C100000 
   7      B0000000 
   7      80020000 
   8 3390 7C000000 	    .word XT_EXIT
 153              	.include "words/ramwordlist.s"
   1              	
   2              	VALUE "ram-wordlist", RAM_WORDLIST, 0
   2              	>  HEADER Flag_visible|Flag_value|Flag_init,"ram-wordlist",RAM_WORDLIST,PFA_DOVALUE
   2              	>>  .p2align 2
   2              	>> VE_RAM_WORDLIST:
   2 3394 5C330000 	>>  .word 99b
   2 3398 A0000000 	>> 99:.word Flag_visible|Flag_value|Flag_init
   2 339c 0C       	>>  .byte 8f-7f
   2 339d 72616D2D 	>> 7:.ascii "ram-wordlist"
   2      776F7264 
   2      6C697374 
   2 33a9 0000BF   	>> 8:.p2align 2
   2 33ac 400F0000 	>>  XT_RAM_WORDLIST:.word PFA_DOVALUE
   2              	>>  PFA_RAM_WORDLIST:
   2 33b0 6C020020 	>  .word rampointer
   2              	>  .equ RAM_RAM_WORDLIST,rampointer
   2              	>  .set rampointer,rampointer+cellsize
   2 33b4 00000000 	>  .word 0
   2 33b8 6C020000 	>  .word XT_FETCH
   2 33bc 80020000 	>  .word XT_STORE
  13              	.include "dict_env.inc"
   1              	
   2              	.include "words/env-forthname.s"
   1              	
   2              	ENVIRONMENT "name", FORTHNAME
   2              	>  .p2align 2
   2              	> VE_ENV_FORTHNAME:
   2 33c0 6A000000 	>  .word 98b
   2              	> 98:
ARM GAS  lp-stellaris.asm 			page 127


   2 33c4 00000000 	>  .word Flag_visible
   2              	> 
   2 33c8 04       	>  .byte 8f-7f
   2 33c9 6E616D65 	> 7:.ascii "name"
   2 33cd 0000BF   	> 8:.p2align 2
   2              	> 
   2 33d0 8C080000 	>  XT_ENV_FORTHNAME:.word DOCOLON
   2              	>  PFA_ENV_FORTHNAME:
   3              	    STRING "amforth"
   3 33d4 020F0000 	>  .word XT_DOSLITERAL
   3 33d8 07       	>  .byte 8f-7f
   3 33d9 616D666F 	> 7:.ascii "amforth"
   3      727468
   3              	> 8:.p2align 2
   4 33e0 7C000000 	    .word XT_EXIT
   3              	.include "words/env-forthversion.s"
   1              	
   2              	ENVIRONMENT "version", FORTHVERSION
   2              	>  .p2align 2
   2              	> VE_ENV_FORTHVERSION:
   2 33e4 C4330000 	>  .word 98b
   2              	> 98:
   2 33e8 00000000 	>  .word Flag_visible
   2              	> 
   2 33ec 07       	>  .byte 8f-7f
   2 33ed 76657273 	> 7:.ascii "version"
   2      696F6E
   2              	> 8:.p2align 2
   2              	> 
   2 33f4 8C080000 	>  XT_ENV_FORTHVERSION:.word DOCOLON
   2              	>  PFA_ENV_FORTHVERSION:
   3 33f8 D20F0000 	    .word XT_DOLITERAL, 69, XT_EXIT
   3      45000000 
   3      7C000000 
   4              	.include "words/env-cpu.s"
   1              	
   2              	ENVIRONMENT "cpu", CPU
   2              	>  .p2align 2
   2              	> VE_ENV_CPU:
   2 3404 E8330000 	>  .word 98b
   2              	> 98:
   2 3408 00000000 	>  .word Flag_visible
   2              	> 
   2 340c 03       	>  .byte 8f-7f
   2 340d 637075   	> 7:.ascii "cpu"
   2              	> 8:.p2align 2
   2              	> 
   2 3410 8C080000 	>  XT_ENV_CPU:.word DOCOLON
   2              	>  PFA_ENV_CPU:
   3              	
   4              	  STRING "CORTEX-M4"
   4 3414 020F0000 	>  .word XT_DOSLITERAL
   4 3418 09       	>  .byte 8f-7f
   4 3419 434F5254 	> 7:.ascii "CORTEX-M4"
   4      45582D4D 
   4      34
   4 3422 00BF     	> 8:.p2align 2
ARM GAS  lp-stellaris.asm 			page 128


   5 3424 7C000000 	.word XT_EXIT
   5              	.include "words/env-usersize.s"
   1              	
   2              	ENVIRONMENT "/user", SLASH_USER
   2              	>  .p2align 2
   2              	> VE_ENV_SLASH_USER:
   2 3428 08340000 	>  .word 98b
   2              	> 98:
   2 342c 00000000 	>  .word Flag_visible
   2              	> 
   2 3430 05       	>  .byte 8f-7f
   2 3431 2F757365 	> 7:.ascii "/user"
   2      72
   2 3436 00BF     	> 8:.p2align 2
   2              	> 
   2 3438 8C080000 	>  XT_ENV_SLASH_USER:.word DOCOLON
   2              	>  PFA_ENV_SLASH_USER:
   3 343c D20F0000 	    .word XT_DOLITERAL, userarea_size
   3      88000000 
   4 3444 7C000000 	    .word XT_EXIT
  14              	
  15              	.include "dict_appl.inc"
   1              	
   2              	.include "words/led.s"
   1              	
   2              	
   3              	# -----------------------------------------------------------------------------
   4              	# Labels for a few hardware ports
   5              	# -----------------------------------------------------------------------------
   6              	
   7              	.equ GPIOBASE, 0x10012000
   8              	
   9              	.equ GPIO_VALUE        , GPIOBASE + 0x00
  10              	.equ GPIO_INPUT_EN     , GPIOBASE + 0x04
  11              	.equ GPIO_OUTPUT_EN    , GPIOBASE + 0x08
  12              	.equ GPIO_PORT         , GPIOBASE + 0x0C
  13              	.equ GPIO_PUE          , GPIOBASE + 0x10
  14              	.equ GPIO_IOF_EN       , GPIOBASE + 0x38
  15              	.equ GPIO_IOF_SEL      , GPIOBASE + 0x3C
  16              	.equ GPIO_OUT_XOR      , GPIOBASE + 0x40
  17              	
  18              	
  19              	
  20              	   .equ SYSCTL_RCGC2_R , 0x400FE108
  21              	   .equ SYSCTL_RCGC2_GPIOF, 0x00000020
  22              	   .equ GPIO_PORTF_DIR_R, 0x40025400
  23              	   .equ GPIO_PORTF_DATA_R,0x400253FC
  24              	   .equ GPIO_PORTF_DEN_R, 0x4002551C
  25              	   .equ LED_ALL, 0x0e
  26              	   .equ LED_GREEN, 0x08
  27              	   .equ LED_BLUE, 0x04
  28              	   .equ LED_RED, 0x02
  29              	
  30              	
  31              	CODEWORD  "led-init", LED_INIT
  31              	>  HEADER Flag_visible,"led-init",LED_INIT,PFA_LED_INIT
  31              	>>  .p2align 2
ARM GAS  lp-stellaris.asm 			page 129


  31              	>> VE_LED_INIT:
  31 3448 98330000 	>>  .word 99b
  31 344c 00000000 	>> 99:.word Flag_visible
  31 3450 08       	>>  .byte 8f-7f
  31 3451 6C65642D 	>> 7:.ascii "led-init"
  31      696E6974 
  31 3459 0000BF   	>> 8:.p2align 2
  31 345c 60340000 	>>  XT_LED_INIT:.word PFA_LED_INIT
  31              	>>  PFA_LED_INIT:
  32 3460 0548     	   ldr r0, =SYSCTL_RCGC2_R
  33 3462 4FF02001 	   ldr r1, =SYSCTL_RCGC2_GPIOF
  34 3466 0160     	   str r1, [r0]
  35 3468 0448     	   ldr r0, =GPIO_PORTF_DIR_R
  36 346a 4FF00E01 	   ldr r1, =LED_ALL
  37 346e 0160     	   str r1, [r0]
  38 3470 0348     	   ldr r0, =GPIO_PORTF_DEN_R
  39 3472 0160     	   str r1, [r0]
  40              	NEXT
  40 3474 FDF70DBA 	>  b DO_NEXT
  40 3478 08E10F40 	>  .ltorg
  40      00540240 
  40      1C550240 
  41              	
  42              	CODEWORD "green", GREEN
  42              	>  HEADER Flag_visible,"green",GREEN,PFA_GREEN
  42              	>>  .p2align 2
  42              	>> VE_GREEN:
  42 3484 4C340000 	>>  .word 99b
  42 3488 00000000 	>> 99:.word Flag_visible
  42 348c 05       	>>  .byte 8f-7f
  42 348d 67726565 	>> 7:.ascii "green"
  42      6E
  42 3492 00BF     	>> 8:.p2align 2
  42 3494 98340000 	>>  XT_GREEN:.word PFA_GREEN
  42              	>>  PFA_GREEN:
  43 3498 4FF00801 	   ldr r1, =LED_GREEN
  44 349c 0148     	   ldr r0, =GPIO_PORTF_DATA_R
  45 349e 0160     	   str r1, [r0]
  46              	   NEXT
  46 34a0 FDF7F7B9 	>  b DO_NEXT
  46 34a4 FC530240 	>  .ltorg
  47              	
  48              	CODEWORD "blue", BLUE
  48              	>  HEADER Flag_visible,"blue",BLUE,PFA_BLUE
  48              	>>  .p2align 2
  48              	>> VE_BLUE:
  48 34a8 88340000 	>>  .word 99b
  48 34ac 00000000 	>> 99:.word Flag_visible
  48 34b0 04       	>>  .byte 8f-7f
  48 34b1 626C7565 	>> 7:.ascii "blue"
  48 34b5 0000BF   	>> 8:.p2align 2
  48 34b8 BC340000 	>>  XT_BLUE:.word PFA_BLUE
  48              	>>  PFA_BLUE:
  49 34bc 4FF00401 	   ldr r1, =LED_BLUE
  50 34c0 0148     	   ldr r0, =GPIO_PORTF_DATA_R
  51 34c2 0160     	   str r1, [r0]
  52              	   NEXT
ARM GAS  lp-stellaris.asm 			page 130


  52 34c4 FDF7E5B9 	>  b DO_NEXT
  52 34c8 FC530240 	>  .ltorg
  53              	
  54              	CODEWORD "red", RED
  54              	>  HEADER Flag_visible,"red",RED,PFA_RED
  54              	>>  .p2align 2
  54              	>> VE_RED:
  54 34cc AC340000 	>>  .word 99b
  54 34d0 00000000 	>> 99:.word Flag_visible
  54 34d4 03       	>>  .byte 8f-7f
  54 34d5 726564   	>> 7:.ascii "red"
  54              	>> 8:.p2align 2
  54 34d8 DC340000 	>>  XT_RED:.word PFA_RED
  54              	>>  PFA_RED:
  55 34dc 4FF00201 	   ldr r1, =LED_RED
  56 34e0 0148     	   ldr r0, =GPIO_PORTF_DATA_R
  57 34e2 0160     	   str r1, [r0]
  58              	   NEXT
  58 34e4 FDF7D5B9 	>  b DO_NEXT
  58 34e8 FC530240 	>  .ltorg
  59              	
  60              	CODEWORD  "white", WHITE
  60              	>  HEADER Flag_visible,"white",WHITE,PFA_WHITE
  60              	>>  .p2align 2
  60              	>> VE_WHITE:
  60 34ec D0340000 	>>  .word 99b
  60 34f0 00000000 	>> 99:.word Flag_visible
  60 34f4 05       	>>  .byte 8f-7f
  60 34f5 77686974 	>> 7:.ascii "white"
  60      65
  60 34fa 00BF     	>> 8:.p2align 2
  60 34fc 00350000 	>>  XT_WHITE:.word PFA_WHITE
  60              	>>  PFA_WHITE:
  61 3500 4FF00E01 	   ldr r1, =LED_RED+LED_GREEN+LED_BLUE
  62 3504 0148     	   ldr r0, =GPIO_PORTF_DATA_R
  63 3506 0160     	   str r1, [r0]
  64              	   NEXT
  64 3508 FDF7C3B9 	>  b DO_NEXT
  64 350c FC530240 	>  .ltorg
  65              	
  66              	CODEWORD  "yellow", YELLOW
  66              	>  HEADER Flag_visible,"yellow",YELLOW,PFA_YELLOW
  66              	>>  .p2align 2
  66              	>> VE_YELLOW:
  66 3510 F0340000 	>>  .word 99b
  66 3514 00000000 	>> 99:.word Flag_visible
  66 3518 06       	>>  .byte 8f-7f
  66 3519 79656C6C 	>> 7:.ascii "yellow"
  66      6F77
  66 351f 00       	>> 8:.p2align 2
  66 3520 24350000 	>>  XT_YELLOW:.word PFA_YELLOW
  66              	>>  PFA_YELLOW:
  67 3524 4FF00A01 	   ldr r1, =LED_RED+LED_GREEN
  68 3528 0148     	   ldr r0, =GPIO_PORTF_DATA_R
  69 352a 0160     	   str r1, [r0]
  70              	   NEXT
  70 352c FDF7B1B9 	>  b DO_NEXT
ARM GAS  lp-stellaris.asm 			page 131


  70 3530 FC530240 	>  .ltorg
  71              	
  72              	CODEWORD  "cyan", CYAN
  72              	>  HEADER Flag_visible,"cyan",CYAN,PFA_CYAN
  72              	>>  .p2align 2
  72              	>> VE_CYAN:
  72 3534 14350000 	>>  .word 99b
  72 3538 00000000 	>> 99:.word Flag_visible
  72 353c 04       	>>  .byte 8f-7f
  72 353d 6379616E 	>> 7:.ascii "cyan"
  72 3541 0000BF   	>> 8:.p2align 2
  72 3544 48350000 	>>  XT_CYAN:.word PFA_CYAN
  72              	>>  PFA_CYAN:
  73 3548 4FF00C01 	   ldr r1, =LED_BLUE+LED_GREEN
  74 354c 0148     	   ldr r0, =GPIO_PORTF_DATA_R
  75 354e 0160     	   str r1, [r0]
  76              	   NEXT
  76 3550 FDF79FB9 	>  b DO_NEXT
  76 3554 FC530240 	>  .ltorg
  77              	
  78              	CODEWORD  "magenta", MAGENTA
  78              	>  HEADER Flag_visible,"magenta",MAGENTA,PFA_MAGENTA
  78              	>>  .p2align 2
  78              	>> VE_MAGENTA:
  78 3558 38350000 	>>  .word 99b
  78 355c 00000000 	>> 99:.word Flag_visible
  78 3560 07       	>>  .byte 8f-7f
  78 3561 6D616765 	>> 7:.ascii "magenta"
  78      6E7461
  78              	>> 8:.p2align 2
  78 3568 6C350000 	>>  XT_MAGENTA:.word PFA_MAGENTA
  78              	>>  PFA_MAGENTA:
  79 356c 4FF00601 	   ldr r1, =LED_RED+LED_BLUE
  80 3570 0148     	   ldr r0, =GPIO_PORTF_DATA_R
  81 3572 0160     	   str r1, [r0]
  82              	   NEXT
  82 3574 FDF78DB9 	>  b DO_NEXT
  82 3578 FC530240 	>  .ltorg
  83              	
  84              	CODEWORD  "black", BLACK
  84              	>  HEADER Flag_visible,"black",BLACK,PFA_BLACK
  84              	>>  .p2align 2
  84              	>> VE_BLACK:
  84 357c 5C350000 	>>  .word 99b
  84 3580 00000000 	>> 99:.word Flag_visible
  84 3584 05       	>>  .byte 8f-7f
  84 3585 626C6163 	>> 7:.ascii "black"
  84      6B
  84 358a 00BF     	>> 8:.p2align 2
  84 358c 90350000 	>>  XT_BLACK:.word PFA_BLACK
  84              	>>  PFA_BLACK:
  85 3590 4FF00001 	   ldr r1, =0
  86 3594 0148     	   ldr r0, =GPIO_PORTF_DATA_R
  87 3596 0160     	   str r1, [r0]
  88              	   NEXT
  88 3598 FDF77BB9 	>  b DO_NEXT
  88 359c FC530240 	>  .ltorg
ARM GAS  lp-stellaris.asm 			page 132


   3              	.include "words/appl-turnkey.s"
   1              	
   2              	COLON "appl-turnkey", APPLTURNKEY
   2              	>  HEADER Flag_visible,"appl-turnkey",APPLTURNKEY,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_APPLTURNKEY:
   2 35a0 80350000 	>>  .word 99b
   2 35a4 00000000 	>> 99:.word Flag_visible
   2 35a8 0C       	>>  .byte 8f-7f
   2 35a9 6170706C 	>> 7:.ascii "appl-turnkey"
   2      2D747572 
   2      6E6B6579 
   2 35b5 0000BF   	>> 8:.p2align 2
   2 35b8 8C080000 	>>  XT_APPLTURNKEY:.word DOCOLON
   2              	>>  PFA_APPLTURNKEY:
   3 35bc 30120000 	  .word XT_DECIMAL
   4 35c0 5C340000 	  .word XT_LED_INIT, XT_UART_INIT
   4      EC3B0000 
   5 35c8 08280000 	  .word XT_DOT_VER
   6              	
   7 35cc 8C110000 	  .word XT_SPACE,XT_ENV_BOARD,XT_TYPE, XT_CR
   7      70360000 
   7      9C280000 
   7      48110000 
   8 35dc 0C360000 	  .word XT_BUILD_INFO,XT_TYPE, XT_SPACE, XT_REV_INFO, XT_TYPE
   8      9C280000 
   8      8C110000 
   8      4C360000 
   8      9C280000 
   9 35f0 D03A0000 	  .word XT_DELAY_INIT
  10 35f4 7C000000 	.word XT_EXIT
   4              	.include "words/build-info.s"
   1              	
   2              	COLON "build-info", BUILD_INFO
   2              	>  HEADER Flag_visible,"build-info",BUILD_INFO,DOCOLON
   2              	>>  .p2align 2
   2              	>> VE_BUILD_INFO:
   2 35f8 A4350000 	>>  .word 99b
   2 35fc 00000000 	>> 99:.word Flag_visible
   2 3600 0A       	>>  .byte 8f-7f
   2 3601 6275696C 	>> 7:.ascii "build-info"
   2      642D696E 
   2      666F
   2 360b 00       	>> 8:.p2align 2
   2 360c 8C080000 	>>  XT_BUILD_INFO:.word DOCOLON
   2              	>>  PFA_BUILD_INFO:
   3              	 STRING " Sun Oct 18 18:22:23 CEST 2020"
   3 3610 020F0000 	>  .word XT_DOSLITERAL
   3 3614 1E       	>  .byte 8f-7f
   3 3615 2053756E 	> 7:.ascii " Sun Oct 18 18:22:23 CEST 2020"
   3      204F6374 
   3      20313820 
   3      31383A32 
   3      323A3233 
   3 3633 00       	> 8:.p2align 2
   4 3634 7C000000 	.word XT_EXIT
   5              	
ARM GAS  lp-stellaris.asm 			page 133


   6              	COLON "rev-info", REV_INFO
   6              	>  HEADER Flag_visible,"rev-info",REV_INFO,DOCOLON
   6              	>>  .p2align 2
   6              	>> VE_REV_INFO:
   6 3638 FC350000 	>>  .word 99b
   6 363c 00000000 	>> 99:.word Flag_visible
   6 3640 08       	>>  .byte 8f-7f
   6 3641 7265762D 	>> 7:.ascii "rev-info"
   6      696E666F 
   6 3649 0000BF   	>> 8:.p2align 2
   6 364c 8C080000 	>>  XT_REV_INFO:.word DOCOLON
   6              	>>  PFA_REV_INFO:
   7              	 STRING "2454"
   7 3650 020F0000 	>  .word XT_DOSLITERAL
   7 3654 04       	>  .byte 8f-7f
   7 3655 32343534 	> 7:.ascii "2454"
   7 3659 0000BF   	> 8:.p2align 2
   8 365c 7C000000 	.word XT_EXIT
   5              	.include "words/env-board.s"
   1              	
   2              	ENVIRONMENT "board", BOARD
   2              	>  .p2align 2
   2              	> VE_ENV_BOARD:
   2 3660 2C340000 	>  .word 98b
   2              	> 98:
   2 3664 00000000 	>  .word Flag_visible
   2              	> 
   2 3668 05       	>  .byte 8f-7f
   2 3669 626F6172 	> 7:.ascii "board"
   2      64
   2 366e 00BF     	> 8:.p2align 2
   2              	> 
   2 3670 8C080000 	>  XT_ENV_BOARD:.word DOCOLON
   2              	>  PFA_ENV_BOARD:
   3              	
   4              	  STRING "LM4F120XL"
   4 3674 020F0000 	>  .word XT_DOSLITERAL
   4 3678 09       	>  .byte 8f-7f
   4 3679 4C4D3446 	> 7:.ascii "LM4F120XL"
   4      31323058 
   4      4C
   4 3682 00BF     	> 8:.p2align 2
   5 3684 7C000000 	.word XT_EXIT
   6              	.include "flash.s"
   1              	
   2              	@ Write and Erase Flash in LM4F120.
   3              	
   4              	.equ FLASH_FMA, 0x400FD000
   5              	.equ FLASH_FMD, 0x400FD004
   6              	.equ FLASH_FMC, 0x400FD008
   7              	
   8              	@ -----------------------------------------------------------------------------
   9              	  CODEWORD  "!flash", STORE_FLASH @ ( x Addr -- )
   9              	>  HEADER Flag_visible,"!flash",STORE_FLASH,PFA_STORE_FLASH
   9              	>>  .p2align 2
   9              	>> VE_STORE_FLASH:
   9 3688 3C360000 	>>  .word 99b
ARM GAS  lp-stellaris.asm 			page 134


   9 368c 00000000 	>> 99:.word Flag_visible
   9 3690 06       	>>  .byte 8f-7f
   9 3691 21666C61 	>> 7:.ascii "!flash"
   9      7368
   9 3697 00       	>> 8:.p2align 2
   9 3698 9C360000 	>>  XT_STORE_FLASH:.word PFA_STORE_FLASH
   9              	>>  PFA_STORE_FLASH:
  10              	@ -----------------------------------------------------------------------------
  11              	  popda r0 @ Adresse
  11 369c 3046     	>  mov r0,tos
  11              	>  loadtos
  11 369e 57F8046B 	>>  ldr tos,[psp],#4
  12              	  popda r1 @ Inhalt.
  12 36a2 3146     	>  mov r1,tos
  12              	>  loadtos
  12 36a4 57F8046B 	>>  ldr tos,[psp],#4
  13              	
  14              	  @ Prüfe Inhalt. Schreibe nur, wenn es NICHT -1 ist.
  15 36a8 B1F1FF3F 	  cmp r1, #-1
  16 36ac 13D0     	  beq 2f
  17              	
  18              	  @ Prüfe die Adresse: Sie muss auf 4 gerade sein:
  19 36ae 10F00302 	  ands r2, r0, #3
  20 36b2 002A     	  cmp r2, #0
  21 36b4 0FD1     	  bne 2f
  22              	
  23              	  @ Ist an der gewünschten Stelle -1 im Speicher ? Muss noch ersetzt werden durch eine Routine, di
  24 36b6 0268     	  ldr r2, [r0]
  25 36b8 B2F1FF3F 	  cmp r2, #-1
  26 36bc 0BD1     	  bne 2f
  27              	
  28              	flashkomma_innen:
  29              	
  30              	  @ Alles paletti. Schreibe tatsächlich !
  31 36be 074A     	  ldr r2, =FLASH_FMD @ 1. Write source data to the FMD register.
  32 36c0 1160     	  str r1, [r2]
  33              	
  34 36c2 074A     	  ldr r2, =FLASH_FMA @ 2. Write the target address to the FMA register.
  35 36c4 1060     	  str r0, [r2]
  36              	
  37 36c6 074A     	  ldr r2, =FLASH_FMC @ 3. Write the Flash memory write key and the WRITE bit (a value of 0xA442.000
  38 36c8 074B     	  ldr r3, =0xA4420001
  39 36ca 1360     	  str r3, [r2]
  40              	
  41 36cc 1368     	1:ldr r3, [r2]       @ 4. Poll the FMC register until the WRITE bit is cleared.
  42 36ce 13F00103 	  ands r3, #1
  43 36d2 002B     	  cmp r3, #0
  44 36d4 FAD1     	  bne 1b
  45              	
  46              	2:NEXT
  46 36d6 FDF7DCB8 	>  b DO_NEXT
  46 36da 000004D0 	>  .ltorg
  46      0F4000D0 
  46      0F4008D0 
  46      0F400100 
  46      42A4
  47              	
ARM GAS  lp-stellaris.asm 			page 135


  48              	@ -----------------------------------------------------------------------------
  49              	  CODEWORD  "w!flash", W_STORE_FLASH @ ( x Addr -- )
  49              	>  HEADER Flag_visible,"w!flash",W_STORE_FLASH,PFA_W_STORE_FLASH
  49              	>>  .p2align 2
  49              	>> VE_W_STORE_FLASH:
  49 36ec 8C360000 	>>  .word 99b
  49 36f0 00000000 	>> 99:.word Flag_visible
  49 36f4 07       	>>  .byte 8f-7f
  49 36f5 7721666C 	>> 7:.ascii "w!flash"
  49      617368
  49              	>> 8:.p2align 2
  49 36fc 00370000 	>>  XT_W_STORE_FLASH:.word PFA_W_STORE_FLASH
  49              	>>  PFA_W_STORE_FLASH:
  50              	  @ Schreibt an die auf 2 gerade Adresse in den Flash.
  51              	@ -----------------------------------------------------------------------------
  52              	  popda r0 @ Adresse
  52 3700 3046     	>  mov r0,tos
  52              	>  loadtos
  52 3702 57F8046B 	>>  ldr tos,[psp],#4
  53              	  popda r1 @ Inhalt.
  53 3706 3146     	>  mov r1,tos
  53              	>  loadtos
  53 3708 57F8046B 	>>  ldr tos,[psp],#4
  54              	
  55              	  @ Prüfe Inhalt. Schreibe nur, wenn es NICHT -1 ist.
  56 370c 4FF6FF73 	  ldr r3, =0xFFFF
  57 3710 1940     	  ands r1, r3  @ High-Halfword der Daten wegmaskieren
  58 3712 9942     	  cmp r1, r3
  59 3714 DFD0     	  beq 2b
  60              	
  61              	  @ Prüfe die Adresse: Sie muss auf 2 gerade sein:
  62 3716 10F00102 	  ands r2, r0, #1
  63 371a 002A     	  cmp r2, #0
  64 371c DBD1     	  bne 2b
  65              	
  66              	  @ Ist an der gewünschten Stelle -1 im Speicher ? Muss noch ersetzt werden durch eine Routine, di
  67 371e 0288     	  ldrh r2, [r0]
  68 3720 9A42     	  cmp r2, r3
  69 3722 D8D1     	  bne 2b
  70              	
  71              	h_flashkomma_innen:
  72              	  @ Alles okay, alle Proben bestanden. Kann beginnen, zu schreiben.
  73              	  @ Ist die Adresse auf 4 gerade ?
  74 3724 10F00202 	  ands r2, r0, #2
  75 3728 002A     	  cmp r2, #0
  76 372a 04D0     	  beq.n hflash_gerade
  77              	
  78              	  @ hflash! ungerade:
  79              	  @ Muss an der auf 4 geraden Adresse davor ein Word holen.
  80 372c 0238     	  subs r0, #2
  81 372e 0288     	  ldrh r2, [r0]
  82 3730 0904     	  lsls r1, #16  @ Die Daten hochschieben
  83 3732 1143     	  orrs r1, r2 @ Den Inhalt zu den gewünschten Daten hinzuverodern
  84              	  @ Fertig. Habe die Daten für den auf 4 geraden Zugriff fertig.
  85 3734 C3E7     	  b.n flashkomma_innen
  86              	
  87              	  @ hflash! gerade:
ARM GAS  lp-stellaris.asm 			page 136


  88              	hflash_gerade:
  89 3736 821C     	  adds r2, r0, #2
  90 3738 1388     	  ldrh r3, [r2]
  91 373a 1B04     	  lsls r3, #16
  92 373c 1943     	  orrs r1, r3 @ Den Inhalt zu den gewünschten Daten hinzuverodern
  93              	  @ Fertig. Habe die Daten für den auf 4 geraden Zugriff fertig.
  94 373e BEE7     	  b.n flashkomma_innen
  95              	
  96              	
  97              	 @ -----------------------------------------------------------------------------
  98              	  CODEWORD  "c!flash", CSTORE_FLASH @ ( x Addr -- )
  98              	>  HEADER Flag_visible,"c!flash",CSTORE_FLASH,PFA_CSTORE_FLASH
  98              	>>  .p2align 2
  98              	>> VE_CSTORE_FLASH:
  98 3740 F0360000 	>>  .word 99b
  98 3744 00000000 	>> 99:.word Flag_visible
  98 3748 07       	>>  .byte 8f-7f
  98 3749 6321666C 	>> 7:.ascii "c!flash"
  98      617368
  98              	>> 8:.p2align 2
  98 3750 54370000 	>>  XT_CSTORE_FLASH:.word PFA_CSTORE_FLASH
  98              	>>  PFA_CSTORE_FLASH:
  99              	  @ Schreibt ein einzelnes Byte in den Flash.
 100              	@ -----------------------------------------------------------------------------
 101              	  popda r0 @ Adresse
 101 3754 3046     	>  mov r0,tos
 101              	>  loadtos
 101 3756 57F8046B 	>>  ldr tos,[psp],#4
 102              	  popda r1 @ Inhalt.
 102 375a 3146     	>  mov r1,tos
 102              	>  loadtos
 102 375c 57F8046B 	>>  ldr tos,[psp],#4
 103              	
 104              	  @ Prüfe Inhalt. Schreibe nur, wenn es NICHT -1 ist.
 105 3760 11F0FF01 	  ands r1, #0xFF @ Alles Unwichtige von den Daten wegmaskieren
 106 3764 FF29     	  cmp  r1, #0xFF
 107 3766 B6D0     	  beq 2b
 108              	
 109              	  @ Ist an der gewünschten Stelle -1 im Speicher ? Muss noch ersetzt werden durch eine Routine, di
 110 3768 0278     	  ldrb r2, [r0]
 111 376a FF2A     	  cmp r2, #0xFF
 112 376c B3D1     	  bne 2b
 113              	
 114              	  @ Alles okay, alle Proben bestanden. Kann beginnen, zu schreiben.
 115              	  @ Ist die Adresse auf 2 gerade ?
 116 376e 10F00102 	  ands r2, r0, #1
 117 3772 002A     	  cmp r2, #0
 118 3774 04D0     	  beq.n cflash_gerade
 119              	
 120              	  @ cflash! ungerade:
 121              	  @ Muss an der geraden Adresse davor ein Word holen.
 122 3776 0138     	  subs r0, #1
 123 3778 0278     	  ldrb r2, [r0]
 124 377a 0902     	  lsls r1, #8  @ Die Daten hochschieben
 125 377c 1143     	  orrs r1, r2 @ Den Inhalt zu den gewünschten Daten hinzuverodern
 126              	  @ Fertig. Habe die Daten für den auf 4 geraden Zugriff fertig.
 127 377e D1E7     	  b.n h_flashkomma_innen
ARM GAS  lp-stellaris.asm 			page 137


 128              	
 129              	  @ cflash! gerade:
 130              	cflash_gerade:
 131 3780 421C     	  adds r2, r0, #1
 132 3782 1378     	  ldrb r3, [r2]
 133 3784 1B02     	  lsls r3, #8
 134 3786 1943     	  orrs r1, r3 @ Den Inhalt zu den gewünschten Daten hinzuverodern
 135              	  @ Fertig. Habe die Daten für den auf 4 geraden Zugriff fertig.
 136 3788 CCE7     	  b.n h_flashkomma_innen
 137              	NEXT
 137 378a FDF782B8 	>  b DO_NEXT
 137              	>  .ltorg
 138              	
 139              	@ -----------------------------------------------------------------------------
 140              	  CODEWORD  "flashpageerase", FLASHPAGEERASE @ ( Addr -- )
 140              	>  HEADER Flag_visible,"flashpageerase",FLASHPAGEERASE,PFA_FLASHPAGEERASE
 140 378e 00BF     	>>  .p2align 2
 140              	>> VE_FLASHPAGEERASE:
 140 3790 44370000 	>>  .word 99b
 140 3794 00000000 	>> 99:.word Flag_visible
 140 3798 0E       	>>  .byte 8f-7f
 140 3799 666C6173 	>> 7:.ascii "flashpageerase"
 140      68706167 
 140      65657261 
 140      7365
 140 37a7 00       	>> 8:.p2align 2
 140 37a8 AC370000 	>>  XT_FLASHPAGEERASE:.word PFA_FLASHPAGEERASE
 140              	>>  PFA_FLASHPAGEERASE:
 141              	  @ Löscht einen 1kb großen Flashblock
 142              	@ -----------------------------------------------------------------------------
 143 37ac 0FB4     	  push {r0, r1, r2, r3}
 144              	  popda r0 @ Adresse zum Löschen holen
 144 37ae 3046     	>  mov r0,tos
 144              	>  loadtos
 144 37b0 57F8046B 	>>  ldr tos,[psp],#4
 145              	
 146 37b4 064A     	  ldr r2, =FLASH_FMA @ 1. Write the page address to the FMA register.
 147 37b6 1060     	  str r0, [r2]
 148              	
 149 37b8 064A     	  ldr r2, =FLASH_FMC @ 2. Write the Flash memory write key and the ERASE bit (a value of 0xA442.000
 150 37ba 074B     	  ldr r3, =0xA4420002
 151 37bc 1360     	  str r3, [r2]
 152              	
 153 37be 1368     	1:ldr r3, [r2]       @ 3. Poll the FMC register until the ERASE bit is cleared
 154 37c0 13F00203 	  ands r3, #2
 155 37c4 002B     	  cmp r3, #0
 156 37c6 FAD1     	  bne 1b
 157              	
 158 37c8 0FBC     	  pop {r0, r1, r2, r3}
 159              	  NEXT
 159 37ca FDF762B8 	>  b DO_NEXT
 159 37ce 000000D0 	>  .ltorg
 159      0F4008D0 
 159      0F400200 
 159      42A4
 160              	
 161              	COLON "inflash?", INFLASHQ
ARM GAS  lp-stellaris.asm 			page 138


 161              	>  HEADER Flag_visible,"inflash?",INFLASHQ,DOCOLON
 161              	>>  .p2align 2
 161              	>> VE_INFLASHQ:
 161 37dc 94370000 	>>  .word 99b
 161 37e0 00000000 	>> 99:.word Flag_visible
 161 37e4 08       	>>  .byte 8f-7f
 161 37e5 696E666C 	>> 7:.ascii "inflash?"
 161      6173683F 
 161 37ed 0000BF   	>> 8:.p2align 2
 161 37f0 8C080000 	>>  XT_INFLASHQ:.word DOCOLON
 161              	>>  PFA_INFLASHQ:
 162 37f4 BC100000 	   .word XT_FALSE
 163 37f8 7C000000 	   .word XT_EXIT
 164              	
 165              	COLON "cacheflush", CACHEFLUSH
 165              	>  HEADER Flag_visible,"cacheflush",CACHEFLUSH,DOCOLON
 165              	>>  .p2align 2
 165              	>> VE_CACHEFLUSH:
 165 37fc E0370000 	>>  .word 99b
 165 3800 00000000 	>> 99:.word Flag_visible
 165 3804 0A       	>>  .byte 8f-7f
 165 3805 63616368 	>> 7:.ascii "cacheflush"
 165      65666C75 
 165      7368
 165 380f 00       	>> 8:.p2align 2
 165 3810 8C080000 	>>  XT_CACHEFLUSH:.word DOCOLON
 165              	>>  PFA_CACHEFLUSH:
 166 3814 7C000000 	.word XT_EXIT
   7              	.include "words/dump.s"
   1              	# RAM dump is byte oriented:
   2              	# 00B0 BD 3E 55 33 5B E6 C4 9B 4A 63 72 20 63 72 20 24   .>U3[...Jcr.cr.$
   3              	# 00C0 62 30 20 32 30 20 64 75 6D 70 20 63 72 20 63 72   b0.20.dump.cr.cr
   4              	
   5              	#: ?ascii ( char -- printable-char )
   6              	#  dup $20 < if drop $2e
   7              	#           else dup $7e > 
   8              	#                if drop $2e then
   9              	#           then ;
  10              	
  11              	
  12              	COLON "?ascii", QASCII
  12              	>  HEADER Flag_visible,"?ascii",QASCII,DOCOLON
  12              	>>  .p2align 2
  12              	>> VE_QASCII:
  12 3818 00380000 	>>  .word 99b
  12 381c 00000000 	>> 99:.word Flag_visible
  12 3820 06       	>>  .byte 8f-7f
  12 3821 3F617363 	>> 7:.ascii "?ascii"
  12      6969
  12 3827 00       	>> 8:.p2align 2
  12 3828 8C080000 	>>  XT_QASCII:.word DOCOLON
  12              	>>  PFA_QASCII:
  13 382c C8000000 	    .word XT_DUP, XT_DOLITERAL,0x20,XT_LESS
  13      D20F0000 
  13      20000000 
  13      C8050000 
  14 383c BE0F0000 	    .word XT_DOCONDBRANCH,PFA_QASCII1
ARM GAS  lp-stellaris.asm 			page 139


  14      58380000 
  15 3844 98000000 		.word XT_DROP, XT_DOLITERAL,0x2e
  15      D20F0000 
  15      2E000000 
  16 3850 B40F0000 		.word XT_DOBRANCH, PFA_QASCII2
  16      7C380000 
  17              	PFA_QASCII1:
  18 3858 C8000000 		.word XT_DUP, XT_DOLITERAL, 0x7e,XT_GREATER
  18      D20F0000 
  18      7E000000 
  18      E8050000 
  19 3868 BE0F0000 		.word XT_DOCONDBRANCH,PFA_QASCII2
  19      7C380000 
  20 3870 98000000 		.word XT_DROP, XT_DOLITERAL,0x2e
  20      D20F0000 
  20      2E000000 
  21              	PFA_QASCII2:
  22 387c 7C000000 	    .word XT_EXIT
  23              	
  24              	
  25              	COLON ".2hex", DOT2HEX
  25              	>  HEADER Flag_visible,".2hex",DOT2HEX,DOCOLON
  25              	>>  .p2align 2
  25              	>> VE_DOT2HEX:
  25 3880 1C380000 	>>  .word 99b
  25 3884 00000000 	>> 99:.word Flag_visible
  25 3888 05       	>>  .byte 8f-7f
  25 3889 2E326865 	>> 7:.ascii ".2hex"
  25      78
  25 388e 00BF     	>> 8:.p2align 2
  25 3890 8C080000 	>>  XT_DOT2HEX:.word DOCOLON
  25              	>>  PFA_DOT2HEX:
  26 3894 340B0000 	    .word XT_BASE,XT_FETCH,XT_TO_R,XT_HEX
  26      6C020000 
  26      88010000 
  26      54120000 
  27 38a4 180B0000 	    .word XT_S2D,XT_L_SHARP,XT_SHARP,XT_SHARP,XT_SHARP_G,XT_TYPE
  27      34130000 
  27      54130000 
  27      54130000 
  27      D8130000 
  28 38bc A0010000 	    .word XT_R_FROM,XT_BASE,XT_STORE
  28      340B0000 
  28      80020000 
  29 38c8 7C000000 	    .word XT_EXIT
  30              	
  31              	#: .2hex base @ >r hex s>d <# # # #> type r> base ! ;
  32              	#: .4hex base @ >r hex s>d <# # # # # #> type r> base ! ;
  33              	
  34              	COLON ".4hex", DOT4HEX
  34              	>  HEADER Flag_visible,".4hex",DOT4HEX,DOCOLON
  34              	>>  .p2align 2
  34              	>> VE_DOT4HEX:
  34 38cc 84380000 	>>  .word 99b
  34 38d0 00000000 	>> 99:.word Flag_visible
  34 38d4 05       	>>  .byte 8f-7f
  34 38d5 2E346865 	>> 7:.ascii ".4hex"
ARM GAS  lp-stellaris.asm 			page 140


  34      78
  34 38da 00BF     	>> 8:.p2align 2
  34 38dc 8C080000 	>>  XT_DOT4HEX:.word DOCOLON
  34              	>>  PFA_DOT4HEX:
  35 38e0 340B0000 	    .word XT_BASE,XT_FETCH,XT_TO_R,XT_HEX
  35      6C020000 
  35      88010000 
  35      54120000 
  36 38f0 180B0000 	    .word XT_S2D,XT_L_SHARP,XT_SHARP,XT_SHARP,XT_SHARP,XT_SHARP
  36      34130000 
  36      54130000 
  36      54130000 
  36      54130000 
  37 3908 D8130000 	    .word XT_SHARP_G,XT_TYPE
  37      9C280000 
  38 3910 A0010000 	    .word XT_R_FROM,XT_BASE,XT_STORE
  38      340B0000 
  38      80020000 
  39 391c 7C000000 	    .word XT_EXIT
  40              	
  41              	COLON ".8hex", DOT8HEX
  41              	>  HEADER Flag_visible,".8hex",DOT8HEX,DOCOLON
  41              	>>  .p2align 2
  41              	>> VE_DOT8HEX:
  41 3920 D0380000 	>>  .word 99b
  41 3924 00000000 	>> 99:.word Flag_visible
  41 3928 05       	>>  .byte 8f-7f
  41 3929 2E386865 	>> 7:.ascii ".8hex"
  41      78
  41 392e 00BF     	>> 8:.p2align 2
  41 3930 8C080000 	>>  XT_DOT8HEX:.word DOCOLON
  41              	>>  PFA_DOT8HEX:
  42 3934 340B0000 	    .word XT_BASE,XT_FETCH,XT_TO_R,XT_HEX
  42      6C020000 
  42      88010000 
  42      54120000 
  43 3944 180B0000 	    .word XT_S2D,XT_L_SHARP,XT_SHARP,XT_SHARP,XT_SHARP,XT_SHARP
  43      34130000 
  43      54130000 
  43      54130000 
  43      54130000 
  44 395c 54130000 	    .word XT_SHARP,XT_SHARP,XT_SHARP,XT_SHARP
  44      54130000 
  44      54130000 
  44      54130000 
  45 396c D8130000 	    .word XT_SHARP_G,XT_TYPE
  45      9C280000 
  46 3974 A0010000 	    .word XT_R_FROM,XT_BASE,XT_STORE
  46      340B0000 
  46      80020000 
  47 3980 7C000000 	    .word XT_EXIT
  48              	
  49              	
  50              	#: dump ( addr count -- )
  51              	#  swap $f invert and $swap
  52              	#  cr 0
  53              	#  do dup .8hex space
ARM GAS  lp-stellaris.asm 			page 141


  54              	#     $10 0 do dup i + c@ .2hex space loop 2 spaces
  55              	#     $10 0 do dup i + c@ ?ascii emit loop
  56              	#     $10 + cr 
  57              	#  $10 +loop drop ;
  58              	
  59              	COLON "dump", DUMP
  59              	>  HEADER Flag_visible,"dump",DUMP,DOCOLON
  59              	>>  .p2align 2
  59              	>> VE_DUMP:
  59 3984 24390000 	>>  .word 99b
  59 3988 00000000 	>> 99:.word Flag_visible
  59 398c 04       	>>  .byte 8f-7f
  59 398d 64756D70 	>> 7:.ascii "dump"
  59 3991 0000BF   	>> 8:.p2align 2
  59 3994 8C080000 	>>  XT_DUMP:.word DOCOLON
  59              	>>  PFA_DUMP:
  60 3998 B0000000 	    .word XT_SWAP,XT_DOLITERAL, 0xfffffff0, XT_AND,XT_SWAP
  60      D20F0000 
  60      F0FFFFFF 
  60      D0030000 
  60      B0000000 
  61 39ac 48110000 	    .word XT_CR,XT_ZERO,XT_DODO
  61      3C100000 
  61      440E0000 
  62              	PFA_DUMP0:
  63 39b8 C8000000 	      .word XT_DUP,XT_DOT8HEX,XT_SPACE
  63      30390000 
  63      8C110000 
  64 39c4 D20F0000 	      .word XT_DOLITERAL,0x10,XT_ZERO,XT_DODO
  64      10000000 
  64      3C100000 
  64      440E0000 
  65              	  PFA_DUMP1:
  66 39d4 C8000000 	        .word XT_DUP,XT_I,XT_PLUS,XT_CFETCH,XT_DOT2HEX,XT_SPACE,XT_DOLOOP,PFA_DUMP1
  66      B40E0000 
  66      480B0000 
  66      14050000 
  66      90380000 
  67              	  PFA_DUMP2:
  68 39f4 8C110000 	      .word XT_SPACE,XT_SPACE
  68      8C110000 
  69 39fc D20F0000 	      .word XT_DOLITERAL,0x10,XT_ZERO,XT_DODO
  69      10000000 
  69      3C100000 
  69      440E0000 
  70              	  PFA_DUMP3:
  71 3a0c C8000000 	        .word XT_DUP,XT_I,XT_PLUS,XT_CFETCH,XT_QASCII, XT_EMIT,XT_DOLOOP,PFA_DUMP3
  71      B40E0000 
  71      480B0000 
  71      14050000 
  71      28380000 
  72              	  PFA_DUMP4:
  73              	
  74 3a2c D20F0000 	      .word XT_DOLITERAL,0x10,XT_PLUS,XT_CR
  74      10000000 
  74      480B0000 
  74      48110000 
ARM GAS  lp-stellaris.asm 			page 142


  75              	PFA_DUMP5:
  76 3a3c D20F0000 	    .word XT_DOLITERAL,0x10,XT_DOPLUSLOOP,PFA_DUMP0
  76      10000000 
  76      6C0E0000 
  76      B8390000 
  77 3a4c 98000000 	.word XT_DROP,XT_EXIT
  77      7C000000 
   8              	.include "words/delay.s"
   1              	
   2              	ARM_CONSTANT "NVIC_ST_CTRL_R", NVIC_ST_CTRL_R, 0xE000E010
   2              	>  ARM_HEADER Flag_visible,"NVIC_ST_CTRL_R",NVIC_ST_CTRL_R,PFA_DOVARIABLE
   2              	>>  .p2align 2
   2              	>> VE_NVIC_ST_CTRL_R:
   2 3a54 6A000000 	>>  .word 97b
   2              	>> 97:
   2 3a58 00000000 	>>  .word Flag_visible
   2              	>> 
   2 3a5c 0E       	>>  .byte 8f-7f
   2 3a5d 4E564943 	>> 7:.ascii "NVIC_ST_CTRL_R"
   2      5F53545F 
   2      4354524C 
   2      5F52
   2 3a6b 00       	>> 8:.p2align 2
   2 3a6c 260F0000 	>>  XT_NVIC_ST_CTRL_R:.word PFA_DOVARIABLE
   2              	>>  PFA_NVIC_ST_CTRL_R:
   2 3a70 10E000E0 	>  .word 0xE000E010
   3              	ARM_CONSTANT "NVIC_ST_RELOAD_R", NVIC_ST_RELOAD_R, 0xE000E014
   3              	>  ARM_HEADER Flag_visible,"NVIC_ST_RELOAD_R",NVIC_ST_RELOAD_R,PFA_DOVARIABLE
   3              	>>  .p2align 2
   3              	>> VE_NVIC_ST_RELOAD_R:
   3 3a74 583A0000 	>>  .word 97b
   3              	>> 97:
   3 3a78 00000000 	>>  .word Flag_visible
   3              	>> 
   3 3a7c 10       	>>  .byte 8f-7f
   3 3a7d 4E564943 	>> 7:.ascii "NVIC_ST_RELOAD_R"
   3      5F53545F 
   3      52454C4F 
   3      41445F52 
   3 3a8d 0000BF   	>> 8:.p2align 2
   3 3a90 260F0000 	>>  XT_NVIC_ST_RELOAD_R:.word PFA_DOVARIABLE
   3              	>>  PFA_NVIC_ST_RELOAD_R:
   3 3a94 14E000E0 	>  .word 0xE000E014
   4              	ARM_CONSTANT "NVIC_ST_CURRENT_R", NVIC_ST_CURRENT_R, 0xE000E018
   4              	>  ARM_HEADER Flag_visible,"NVIC_ST_CURRENT_R",NVIC_ST_CURRENT_R,PFA_DOVARIABLE
   4              	>>  .p2align 2
   4              	>> VE_NVIC_ST_CURRENT_R:
   4 3a98 783A0000 	>>  .word 97b
   4              	>> 97:
   4 3a9c 00000000 	>>  .word Flag_visible
   4              	>> 
   4 3aa0 11       	>>  .byte 8f-7f
   4 3aa1 4E564943 	>> 7:.ascii "NVIC_ST_CURRENT_R"
   4      5F53545F 
   4      43555252 
   4      454E545F 
   4      52
ARM GAS  lp-stellaris.asm 			page 143


   4 3ab2 00BF     	>> 8:.p2align 2
   4 3ab4 260F0000 	>>  XT_NVIC_ST_CURRENT_R:.word PFA_DOVARIABLE
   4              	>>  PFA_NVIC_ST_CURRENT_R:
   4 3ab8 18E000E0 	>  .word 0xE000E018
   5              	
   6              	ARM_COLON "delay-init", DELAY_INIT
   6              	>  ARM_HEADER Flag_visible,"delay-init",DELAY_INIT,DOCOLON
   6              	>>  .p2align 2
   6              	>> VE_DELAY_INIT:
   6 3abc 9C3A0000 	>>  .word 97b
   6              	>> 97:
   6 3ac0 00000000 	>>  .word Flag_visible
   6              	>> 
   6 3ac4 0A       	>>  .byte 8f-7f
   6 3ac5 64656C61 	>> 7:.ascii "delay-init"
   6      792D696E 
   6      6974
   6 3acf 00       	>> 8:.p2align 2
   6 3ad0 8C080000 	>>  XT_DELAY_INIT:.word DOCOLON
   6              	>>  PFA_DELAY_INIT:
   7              	    @ Disable SysTick during setup
   8 3ad4 3C100000 	    .word XT_ZERO, XT_NVIC_ST_CTRL_R, XT_STORE
   8      6C3A0000 
   8      80020000 
   9              	
  10              	    @ Maximum reload value for 24 bit timer
  11 3ae0 D20F0000 	    .word XT_DOLITERAL, 0x00FFFFFF, XT_NVIC_ST_RELOAD_R, XT_STORE
  11      FFFFFF00 
  11      903A0000 
  11      80020000 
  12              	
  13              	    @ Any write to current clears it
  14 3af0 3C100000 	    .word XT_ZERO, XT_NVIC_ST_CURRENT_R, XT_STORE
  14      B43A0000 
  14      80020000 
  15              	
  16              	    @ Enable SysTick with PIOSC/4 = 4MHz clock
  17 3afc 50100000 	    .word XT_ONE, XT_NVIC_ST_CTRL_R, XT_STORE
  17      6C3A0000 
  17      80020000 
  18 3b08 7C000000 	.word XT_EXIT
  19              	
  20              	ARM_COLON "delay-ticks", DELAY_TICKS
  20              	>  ARM_HEADER Flag_visible,"delay-ticks",DELAY_TICKS,DOCOLON
  20              	>>  .p2align 2
  20              	>> VE_DELAY_TICKS:
  20 3b0c C03A0000 	>>  .word 97b
  20              	>> 97:
  20 3b10 00000000 	>>  .word Flag_visible
  20              	>> 
  20 3b14 0B       	>>  .byte 8f-7f
  20 3b15 64656C61 	>> 7:.ascii "delay-ticks"
  20      792D7469 
  20      636B73
  20              	>> 8:.p2align 2
  20 3b20 8C080000 	>>  XT_DELAY_TICKS:.word DOCOLON
  20              	>>  PFA_DELAY_TICKS:
ARM GAS  lp-stellaris.asm 			page 144


  21              	@ ( n -- )  Tick = 1/4MHz = 250 ns
  22 3b24 D20F0000 	    .word XT_DOLITERAL, 8, XT_LSHIFT
  22      08000000 
  22      64040000 
  23 3b30 B43A0000 	    .word XT_NVIC_ST_CURRENT_R, XT_FETCH, XT_DOLITERAL, 8, XT_LSHIFT
  23      6C020000 
  23      D20F0000 
  23      08000000 
  23      64040000 
  24              	DELAY_TICKS_LOOP:
  25 3b44 EC0D0000 	      .word XT_PAUSE, XT_2DUP
  25      E8080000 
  26 3b4c B43A0000 	      .word XT_NVIC_ST_CURRENT_R, XT_FETCH, XT_DOLITERAL, 8, XT_LSHIFT
  26      6C020000 
  26      D20F0000 
  26      08000000 
  26      64040000 
  27 3b60 600B0000 	      .word XT_MINUS, XT_ULESS, XT_DOCONDBRANCH, DELAY_TICKS_LOOP
  27      08060000 
  27      BE0F0000 
  27      443B0000 
  28 3b70 3C070000 	    .word XT_2DROP
  29 3b74 7C000000 	.word XT_EXIT
  30              	
  31              	
  32              	COLON "us", US
  32              	>  HEADER Flag_visible,"us",US,DOCOLON
  32              	>>  .p2align 2
  32              	>> VE_US:
  32 3b78 88390000 	>>  .word 99b
  32 3b7c 00000000 	>> 99:.word Flag_visible
  32 3b80 02       	>>  .byte 8f-7f
  32 3b81 7573     	>> 7:.ascii "us"
  32 3b83 00       	>> 8:.p2align 2
  32 3b84 8C080000 	>>  XT_US:.word DOCOLON
  32              	>>  PFA_US:
  33 3b88 D20F0000 	    .word XT_DOLITERAL, 4, XT_STAR, XT_DELAY_TICKS, XT_EXIT
  33      04000000 
  33      00030000 
  33      203B0000 
  33      7C000000 
  34              	
  35              	COLON "ms", MS
  35              	>  HEADER Flag_visible,"ms",MS,DOCOLON
  35              	>>  .p2align 2
  35              	>> VE_MS:
  35 3b9c 7C3B0000 	>>  .word 99b
  35 3ba0 00000000 	>> 99:.word Flag_visible
  35 3ba4 02       	>>  .byte 8f-7f
  35 3ba5 6D73     	>> 7:.ascii "ms"
  35 3ba7 00       	>> 8:.p2align 2
  35 3ba8 8C080000 	>>  XT_MS:.word DOCOLON
  35              	>>  PFA_MS:
  36 3bac 3C100000 	    .word XT_ZERO
  37 3bb0 10270000 	    .word XT_QDOCHECK,XT_DOCONDBRANCH,MS_LEAVE, XT_DODO
  37      BE0F0000 
  37      D43B0000 
ARM GAS  lp-stellaris.asm 			page 145


  37      440E0000 
  38              	MS_LOOP:
  39 3bc0 D20F0000 	       .word XT_DOLITERAL, 4000, XT_DELAY_TICKS, XT_DOLOOP, MS_LOOP
  39      A00F0000 
  39      203B0000 
  39      620E0000 
  39      C03B0000 
  40              	MS_LEAVE:
  41 3bd4 7C000000 	    .word XT_EXIT
   9              	
  10              	.include "words/usart.s"
   1              	
   2              	.equ UART0BASE, 0x10013000
   3              	
   4              	.equ UART0_TXDATA    , UART0BASE + 0x00
   5              	.equ UART0_RXDATA    , UART0BASE + 0x04
   6              	.equ UART0_TXCTRL    , UART0BASE + 0x08
   7              	.equ UART0_RXCTRL    , UART0BASE + 0x0C
   8              	.equ UART0_IE        , UART0BASE + 0x10
   9              	.equ UART0_IP        , UART0BASE + 0x14
  10              	.equ UART0_DIV       , UART0BASE + 0x18
  11              	
  12              	.equ RCGCPIO,    0x400FE608
  13              	.equ RCGCUART,   0x400FE618
  14              	
  15              	.equ GPIOA_BASE, 0x40004000
  16              	.equ GPIOAFSEL,  0x40004420
  17              	.equ GPIODEN,    0x4000451C
  18              	
  19              	.equ Terminal_UART_Base, 0x4000C000 @ UART 0
  20              	
  21              	.equ UART0_BASE, 0x4000C000
  22              	.equ UARTDR,     Terminal_UART_Base + 0x000
  23              	.equ UARTFR,     Terminal_UART_Base + 0x018
  24              	.equ UARTIBRD,   Terminal_UART_Base + 0x024
  25              	.equ UARTFBRD,   Terminal_UART_Base + 0x028
  26              	.equ UARTLCRH,   Terminal_UART_Base + 0x02C
  27              	.equ UARTCTL,    Terminal_UART_Base + 0x030
  28              	.equ UARTCC,     Terminal_UART_Base + 0xFC8
  29              	
  30              	
  31              	CODEWORD  "uart-init", UART_INIT
  31              	>  HEADER Flag_visible,"uart-init",UART_INIT,PFA_UART_INIT
  31              	>>  .p2align 2
  31              	>> VE_UART_INIT:
  31 3bd8 A03B0000 	>>  .word 99b
  31 3bdc 00000000 	>> 99:.word Flag_visible
  31 3be0 09       	>>  .byte 8f-7f
  31 3be1 75617274 	>> 7:.ascii "uart-init"
  31      2D696E69 
  31      74
  31 3bea 00BF     	>> 8:.p2align 2
  31 3bec F03B0000 	>>  XT_UART_INIT:.word PFA_UART_INIT
  31              	>>  PFA_UART_INIT:
  32              	
  33              	  @ Baud rate generation:
  34              	  @ 16000000 / (16 * 115200 ) = 1000000 / 115200 = 8.6805
ARM GAS  lp-stellaris.asm 			page 146


  35              	  @ 0.6805... * 64 = 43.5   ~ 44
  36              	
  37              	  @ 16000000 / (16 * 38400 ) = 1000000 / 38400 = 20.04167
  38              	  @ 0.4167.. * 64 = 2,67   ~ 3
  39              	
  40              	  @ use 3 and 20
  41              	
  42 3bf0 0121     	  movs r1, #1         @ UART0 aktivieren
  43 3bf2 1148     	  ldr  r0, =RCGCUART
  44 3bf4 0160     	  str  r1, [r0]
  45              	
  46 3bf6 3F21     	  movs r1, #0x3F      @ Alle GPIO-Ports aktivieren
  47 3bf8 1048     	  ldr  r0, =RCGCPIO
  48 3bfa 0160     	  str  r1, [r0]
  49              	
  50 3bfc 0321     	  movs r1, #3         @ PA0 und PA1 auf UART-Sonderfunktion schalten
  51 3bfe 1048     	  ldr  r0, =GPIOAFSEL
  52 3c00 0160     	  str  r1, [r0]
  53              	
  54              	  @ movs r1, #3       @ PA0 und PA1 als digitale Leitungen aktivieren
  55 3c02 1048     	  ldr  r0, =GPIODEN
  56 3c04 0160     	  str  r1, [r0]
  57              	
  58              	   @ UART-Einstellungen vornehmen
  59              	
  60 3c06 0021     	  movs r1, #0         @ UART stop
  61 3c08 0F48     	  ldr  r0, =UARTCTL
  62 3c0a 0160     	  str  r1, [r0]
  63              	
  64              	  @ Baud rate generation:
  65              	  @ 16000000 / (16 * 115200 ) = 1000000 / 115200 = 8.6805
  66              	  @ 0.6805... * 64 = 43.5   ~ 44
  67              	
  68              	  @ 16000000 / (16 * 38400 ) = 1000000 / 38400 = 20.04167
  69              	  @ 0.4167.. * 64 = 2,67   ~ 3
  70              	
  71              	  @ use 3 and 20
  72              	
  73 3c0c 0821     	  movs r1, #8
  74 3c0e 0F48     	  ldr  r0, =UARTIBRD
  75 3c10 0160     	  str r1, [r0]
  76              	
  77 3c12 2C21     	  movs r1, #44
  78 3c14 0E48     	  ldr  r0, =UARTFBRD
  79 3c16 0160     	  str r1, [r0]
  80              	
  81 3c18 7021     	  movs r1, #0x60|0x10  @ 8N1, enable FIFOs !
  82 3c1a 0E48     	  ldr  r0, =UARTLCRH
  83 3c1c 0160     	  str r1, [r0]
  84              	
  85 3c1e 0521     	  movs r1, #5          @ Choose PIOSC as source
  86 3c20 0D48     	  ldr  r0, =UARTCC
  87 3c22 0160     	  str r1, [r0]
  88              	
  89 3c24 0021     	  movs    r1, #0
  90 3c26 0D48     	  ldr     r0, =UARTFR
  91 3c28 0160     	  str r1, [r0]
ARM GAS  lp-stellaris.asm 			page 147


  92              	
  93 3c2a 40F20131 	  movw r1, #0x301      @ UART start
  94 3c2e 0648     	  ldr  r0, =UARTCTL
  95 3c30 0160     	  str  r1, [r0]
  96              	NEXT
  96 3c32 FCF72EBE 	>  b DO_NEXT
  96 3c36 000018E6 	>  .ltorg
  96      0F4008E6 
  96      0F402044 
  96      00401C45 
  96      004030C0 
  97              	@ -----------------------------------------------------------------------------
  98              	  CODEWORD  "serial-key", SERIAL_KEY
  98              	>  HEADER Flag_visible,"serial-key",SERIAL_KEY,PFA_SERIAL_KEY
  98              	>>  .p2align 2
  98              	>> VE_SERIAL_KEY:
  98 3c60 DC3B0000 	>>  .word 99b
  98 3c64 00000000 	>> 99:.word Flag_visible
  98 3c68 0A       	>>  .byte 8f-7f
  98 3c69 73657269 	>> 7:.ascii "serial-key"
  98      616C2D6B 
  98      6579
  98 3c73 00       	>> 8:.p2align 2
  98 3c74 783C0000 	>>  XT_SERIAL_KEY:.word PFA_SERIAL_KEY
  98              	>>  PFA_SERIAL_KEY:
  99              	@ -----------------------------------------------------------------------------
 100              	
 101              	   savetos
 101 3c78 47F8046D 	>  str tos,[psp,#-4]!
 102              	
 103 3c7c 0248     	   ldr r0, =UARTDR    @ Einkommendes Zeichen abholen
 104 3c7e 0668     	   ldr tos, [r0]      @ Register lesen
 105 3c80 F6B2     	   uxtb tos, tos      @ 8 Bits davon nehmen, Rest mit Nullen auffüllen.
 106              	  
 107              	NEXT
 107 3c82 FCF706BE 	>  b DO_NEXT
 107 3c86 000000C0 	>  .ltorg
 107      0040
 108              	
 109              	@ -----------------------------------------------------------------------------
 110              	  CODEWORD  "serial-key?", SERIAL_KEYQ
 110              	>  HEADER Flag_visible,"serial-key?",SERIAL_KEYQ,PFA_SERIAL_KEYQ
 110              	>>  .p2align 2
 110              	>> VE_SERIAL_KEYQ:
 110 3c8c 643C0000 	>>  .word 99b
 110 3c90 00000000 	>> 99:.word Flag_visible
 110 3c94 0B       	>>  .byte 8f-7f
 110 3c95 73657269 	>> 7:.ascii "serial-key?"
 110      616C2D6B 
 110      65793F
 110              	>> 8:.p2align 2
 110 3ca0 A43C0000 	>>  XT_SERIAL_KEYQ:.word PFA_SERIAL_KEYQ
 110              	>>  PFA_SERIAL_KEYQ:
 111              	@ -----------------------------------------------------------------------------
 112              	   savetos
 112 3ca4 47F8046D 	>  str tos,[psp,#-4]!
 113 3ca8 0026     	   movs tos, #0
ARM GAS  lp-stellaris.asm 			page 148


 114 3caa 0448     	   ldr r0, =UARTFR
 115 3cac 0168     	   ldr r1, [r0]
 116 3cae 11F01001 	   ands r1, #RXFE
 117 3cb2 00D1     	   bne 1f
 118 3cb4 F643     	     mvns tos, tos
 119              	1: 
 120              	NEXT
 120 3cb6 FCF7ECBD 	>  b DO_NEXT
 120 3cba 000018C0 	>  .ltorg
 120      0040
 121              	.equ RXFE, 0x10 @ Receive  FIFO empty
 122              	.equ TXFF, 0x20 @ Transmit FIFO full
 123              	
 124              	@ -----------------------------------------------------------------------------
 125              	  CODEWORD  "serial-emit", SERIAL_EMIT
 125              	>  HEADER Flag_visible,"serial-emit",SERIAL_EMIT,PFA_SERIAL_EMIT
 125              	>>  .p2align 2
 125              	>> VE_SERIAL_EMIT:
 125 3cc0 903C0000 	>>  .word 99b
 125 3cc4 00000000 	>> 99:.word Flag_visible
 125 3cc8 0B       	>>  .byte 8f-7f
 125 3cc9 73657269 	>> 7:.ascii "serial-emit"
 125      616C2D65 
 125      6D6974
 125              	>> 8:.p2align 2
 125 3cd4 D83C0000 	>>  XT_SERIAL_EMIT:.word PFA_SERIAL_EMIT
 125              	>>  PFA_SERIAL_EMIT:
 126              	@ -----------------------------------------------------------------------------
 127              	
 128              	SERIAL_EMIT_WAIT: 
 129 3cd8 0548     	     ldr r0, =UARTFR
 130 3cda 0068     	     ldr r0, [r0]
 131 3cdc 10F02000 	     ands r0, #TXFF
 132 3ce0 FAD1     	   bne SERIAL_EMIT_WAIT
 133              	
 134 3ce2 0448     	   ldr r0, =UARTDR
 135 3ce4 0660     	   str tos, [r0]
 136              	   loadtos
 136 3ce6 57F8046B 	>  ldr tos,[psp],#4
 137              	NEXT
 137 3cea FCF7D2BD 	>  b DO_NEXT
 137 3cee 000018C0 	>  .ltorg
 137      004000C0 
 137      0040
 138              	
 139              	@ -----------------------------------------------------------------------------
 140              	  CODEWORD  "serial-emit?", SERIAL_EMITQ
 140              	>  HEADER Flag_visible,"serial-emit?",SERIAL_EMITQ,PFA_SERIAL_EMITQ
 140              	>>  .p2align 2
 140              	>> VE_SERIAL_EMITQ:
 140 3cf8 C43C0000 	>>  .word 99b
 140 3cfc 00000000 	>> 99:.word Flag_visible
 140 3d00 0C       	>>  .byte 8f-7f
 140 3d01 73657269 	>> 7:.ascii "serial-emit?"
 140      616C2D65 
 140      6D69743F 
 140 3d0d 0000BF   	>> 8:.p2align 2
ARM GAS  lp-stellaris.asm 			page 149


 140 3d10 143D0000 	>>  XT_SERIAL_EMITQ:.word PFA_SERIAL_EMITQ
 140              	>>  PFA_SERIAL_EMITQ:
 141              	@ -----------------------------------------------------------------------------
 142              	   savetos
 142 3d14 47F8046D 	>  str tos,[psp,#-4]!
 143 3d18 4FF00006 	   mov tos, #0
 144 3d1c 0448     	   ldr r0, =UARTFR
 145 3d1e 0168     	   ldr r1, [r0]
 146 3d20 11F02001 	   ands r1, #TXFF
 147 3d24 01D1     	   bne SERIAL_EMITQ1
 148 3d26 6FEA0606 	     mvn tos, tos
 149              	SERIAL_EMITQ1:
 150              	NEXT
 150 3d2a FCF7B2BD 	>  b DO_NEXT
 150 3d2e 000018C0 	>  .ltorg
 150      0040
  16              	
  17              	ENDDICT
  17              	> VALUE "arm-wordlist"ARM_WORDLIST,97b
  17              	>>  HEADER Flag_visible|Flag_value|Flag_init,"arm-wordlist",ARM_WORDLIST,PFA_DOVALUE
  17              	>>>  .p2align 2
  17              	>>> VE_ARM_WORDLIST:
  17 3d34 FC3C0000 	>>>  .word 99b
  17 3d38 A0000000 	>>> 99:.word Flag_visible|Flag_value|Flag_init
  17 3d3c 0C       	>>>  .byte 8f-7f
  17 3d3d 61726D2D 	>>> 7:.ascii "arm-wordlist"
  17      776F7264 
  17      6C697374 
  17 3d49 0000BF   	>>> 8:.p2align 2
  17 3d4c 400F0000 	>>>  XT_ARM_WORDLIST:.word PFA_DOVALUE
  17              	>>>  PFA_ARM_WORDLIST:
  17 3d50 70020020 	>>  .word rampointer
  17              	>>  .equ RAM_ARM_WORDLIST,rampointer
  17              	>>  .set rampointer,rampointer+cellsize
  17 3d54 103B0000 	>>  .word 97b
  17 3d58 6C020000 	>>  .word XT_FETCH
  17 3d5c 80020000 	>>  .word XT_STORE
  17              	> VALUE "environment",ENVIRONMENT,98b
  17              	>>  HEADER Flag_visible|Flag_value|Flag_init,"environment",ENVIRONMENT,PFA_DOVALUE
  17              	>>>  .p2align 2
  17              	>>> VE_ENVIRONMENT:
  17 3d60 383D0000 	>>>  .word 99b
  17 3d64 A0000000 	>>> 99:.word Flag_visible|Flag_value|Flag_init
  17 3d68 0B       	>>>  .byte 8f-7f
  17 3d69 656E7669 	>>> 7:.ascii "environment"
  17      726F6E6D 
  17      656E74
  17              	>>> 8:.p2align 2
  17 3d74 400F0000 	>>>  XT_ENVIRONMENT:.word PFA_DOVALUE
  17              	>>>  PFA_ENVIRONMENT:
  17 3d78 74020020 	>>  .word rampointer
  17              	>>  .equ RAM_ENVIRONMENT,rampointer
  17              	>>  .set rampointer,rampointer+cellsize
  17 3d7c 64360000 	>>  .word 98b
  17 3d80 6C020000 	>>  .word XT_FETCH
  17 3d84 80020000 	>>  .word XT_STORE
  17              	> VALUE "forth-wordlist",FORTH_WORDLIST,99b
ARM GAS  lp-stellaris.asm 			page 150


  17              	>>  HEADER Flag_visible|Flag_value|Flag_init,"forth-wordlist",FORTH_WORDLIST,PFA_DOVALUE
  17              	>>>  .p2align 2
  17              	>>> VE_FORTH_WORDLIST:
  17 3d88 643D0000 	>>>  .word 99b
  17 3d8c A0000000 	>>> 99:.word Flag_visible|Flag_value|Flag_init
  17 3d90 0E       	>>>  .byte 8f-7f
  17 3d91 666F7274 	>>> 7:.ascii "forth-wordlist"
  17      682D776F 
  17      72646C69 
  17      7374
  17 3d9f 00       	>>> 8:.p2align 2
  17 3da0 400F0000 	>>>  XT_FORTH_WORDLIST:.word PFA_DOVALUE
  17              	>>>  PFA_FORTH_WORDLIST:
  17 3da4 78020020 	>>  .word rampointer
  17              	>>  .equ RAM_FORTH_WORDLIST,rampointer
  17              	>>  .set rampointer,rampointer+cellsize
  17 3da8 8C3D0000 	>>  .word 99b
  17 3dac 6C020000 	>>  .word XT_FETCH
  17 3db0 80020000 	>>  .word XT_STORE
  17              	> .equ FLASH_END,.
  17              	> .set DPSTART,99b
  17              	> .equ HERESTART,rampointer
ARM GAS  lp-stellaris.asm 			page 151


DEFINED SYMBOLS
    lp-stellaris.asm:9      *ABS*:0000000020000000 RamStart
    lp-stellaris.asm:10     *ABS*:0000000020008000 RamEnd
    lp-stellaris.asm:12     *ABS*:0000000000004000 FlashStart
    lp-stellaris.asm:13     *ABS*:0000000000040000 FlashEnd
    lp-stellaris.asm:15     *ABS*:0000000000000080 datastack_size
    lp-stellaris.asm:16     *ABS*:0000000000000080 returnstack_size
    lp-stellaris.asm:17     *ABS*:0000000000000060 refill_buf_size
    lp-stellaris.asm:18     *ABS*:0000000000000008 appl_userarea_size
    lp-stellaris.asm:19     *ABS*:0000000000000020 leavestack_size
                            *ABS*:0000000000000004 cellsize
    lp-stellaris.asm:21     *ABS*:0000000000000000 WANT_IGNORECASE
  ../../arm/macros.s:72     *ABS*:00000000ffffffff Flag_invisible
  ../../arm/macros.s:73     *ABS*:0000000000000000 Flag_visible
  ../../arm/macros.s:75     *ABS*:0000000000000010 Flag_immediate
  ../../arm/macros.s:76     *ABS*:0000000000000020 Flag_value
  ../../arm/macros.s:77     *ABS*:0000000000000040 Flag_defer
  ../../arm/macros.s:78     *ABS*:0000000000000080 Flag_init
  ../../arm/macros.s:80     *ABS*:0000000000000100 Flag_ramallot
  ../../arm/macros.s:81     *ABS*:0000000000000101 Flag_variable
  ../../arm/macros.s:82     *ABS*:0000000000000102 Flag_2variable
    lp-stellaris.asm:19     *ABS*:000000002000027c rampointer
../../arm/preamble.inc:9      *ABS*:0000000000000080 sys_userarea_size
../../arm/preamble.inc:11     *ABS*:0000000000000088 userarea_size
../../arm/preamble.inc:13     *ABS*:0000000020000000 RAM_lower_datastack
../../arm/preamble.inc:13     *ABS*:0000000020000080 RAM_upper_datastack
../../arm/preamble.inc:14     *ABS*:0000000020000080 RAM_lower_returnstack
../../arm/preamble.inc:14     *ABS*:0000000020000100 RAM_upper_returnstack
../../arm/preamble.inc:15     *ABS*:0000000020000100 RAM_lower_userarea
../../arm/preamble.inc:15     *ABS*:0000000020000188 RAM_upper_userarea
../../arm/preamble.inc:16     *ABS*:0000000020000188 RAM_lower_refill_buf
../../arm/preamble.inc:16     *ABS*:00000000200001e8 RAM_upper_refill_buf
../../arm/preamble.inc:17     *ABS*:00000000200001e8 RAM_lower_leavestack
    lp-stellaris.asm:19     *ABS*:0000000020000208 RAM_upper_leavestack
  ../../arm/user.inc:2      *ABS*:0000000000000000 USER_STATE
  ../../arm/user.inc:3      *ABS*:0000000000000004 USER_FOLLOWER
  ../../arm/user.inc:5      *ABS*:0000000000000008 USER_RP
  ../../arm/user.inc:6      *ABS*:000000000000000c USER_SP0
  ../../arm/user.inc:7      *ABS*:0000000000000010 USER_SP
  ../../arm/user.inc:8      *ABS*:0000000000000014 USER_HANDLER
  ../../arm/user.inc:9      *ABS*:0000000000000018 USER_BASE
  ../../arm/user.inc:11     *ABS*:000000000000001c USER_UDT
../../arm/words/cold.s:2      .text:0000000000000c5c PFA_COLD
../../arm/common/isr.s:1      .text:0000000000000040 nullhandler
../../arm/common/isr.s:13     .text:0000000000000054 faulthandler
                            .text:0000000000000000 $d
../../arm/common/isr.s:2      .text:0000000000000040 $t
 ../../arm/amforth.s:9      .text:0000000000000066 FLASH_START
 ../../arm/amforth.s:9      .text:0000000000000066 $d
../../arm/words/exit.s:2      .text:000000000000006a $t
../../arm/words/exit.s:2      .text:000000000000006c VE_EXIT
../../arm/words/exit.s:2      .text:000000000000006c $d
../../arm/words/exit.s:2      .text:000000000000007c XT_EXIT
../../arm/words/exit.s:2      .text:000000000000007c $d
../../arm/words/exit.s:2      .text:0000000000000080 PFA_EXIT
../../arm/words/exit.s:3      .text:0000000000000080 $t
../../arm/dict_prims.inc:56     .text:0000000000000892 DO_NEXT
ARM GAS  lp-stellaris.asm 			page 152


../../arm/words/drop.s:2      .text:0000000000000088 VE_DROP
../../arm/words/drop.s:2      .text:0000000000000088 $d
../../arm/words/drop.s:2      .text:0000000000000098 XT_DROP
../../arm/words/drop.s:2      .text:0000000000000098 $d
../../arm/words/drop.s:2      .text:000000000000009c PFA_DROP
../../arm/words/drop.s:4      .text:000000000000009c $t
../../arm/words/swap.s:2      .text:00000000000000a0 VE_SWAP
../../arm/words/swap.s:2      .text:00000000000000a0 $d
../../arm/words/swap.s:2      .text:00000000000000b0 XT_SWAP
../../arm/words/swap.s:2      .text:00000000000000b0 $d
../../arm/words/swap.s:2      .text:00000000000000b4 PFA_SWAP
../../arm/words/swap.s:4      .text:00000000000000b4 $t
../../arm/words/dup.s:2      .text:00000000000000bc VE_DUP
../../arm/words/dup.s:2      .text:00000000000000bc $d
../../arm/words/dup.s:2      .text:00000000000000c8 XT_DUP
../../arm/words/dup.s:2      .text:00000000000000c8 $d
../../arm/words/dup.s:2      .text:00000000000000cc PFA_DUP
../../arm/words/dup.s:4      .text:00000000000000cc $t
../../arm/words/nip.s:2      .text:00000000000000d4 VE_NIP
../../arm/words/nip.s:2      .text:00000000000000d4 $d
../../arm/words/nip.s:2      .text:00000000000000e0 XT_NIP
../../arm/words/nip.s:2      .text:00000000000000e0 $d
../../arm/words/nip.s:2      .text:00000000000000e4 PFA_NIP
../../arm/words/nip.s:4      .text:00000000000000e4 $t
../../arm/words/over.s:2      .text:00000000000000e8 VE_OVER
../../arm/words/over.s:2      .text:00000000000000e8 $d
../../arm/words/over.s:2      .text:00000000000000f8 XT_OVER
../../arm/words/over.s:2      .text:00000000000000f8 $d
../../arm/words/over.s:2      .text:00000000000000fc PFA_OVER
../../arm/words/over.s:4      .text:00000000000000fc $t
../../arm/words/rot.s:3      .text:0000000000000104 VE_ROT
../../arm/words/rot.s:3      .text:0000000000000104 $d
../../arm/words/rot.s:3      .text:0000000000000110 XT_ROT
../../arm/words/rot.s:3      .text:0000000000000110 $d
../../arm/words/rot.s:3      .text:0000000000000114 PFA_ROT
../../arm/words/rot.s:5      .text:0000000000000114 $t
../../arm/words/q-dup.s:2      .text:0000000000000120 VE_QDUP
../../arm/words/q-dup.s:2      .text:0000000000000120 $d
../../arm/words/q-dup.s:2      .text:0000000000000130 XT_QDUP
../../arm/words/q-dup.s:2      .text:0000000000000130 $d
../../arm/words/q-dup.s:2      .text:0000000000000134 PFA_QDUP
../../arm/words/q-dup.s:4      .text:0000000000000134 $t
../../arm/words/tuck.s:2      .text:0000000000000140 VE_TUCK
../../arm/words/tuck.s:2      .text:0000000000000140 $d
../../arm/words/tuck.s:2      .text:0000000000000150 XT_TUCK
../../arm/words/tuck.s:2      .text:0000000000000150 $d
../../arm/words/tuck.s:2      .text:0000000000000154 PFA_TUCK
../../arm/words/tuck.s:4      .text:0000000000000154 tuck
../../arm/words/tuck.s:5      .text:0000000000000154 $t
../../arm/words/pick.s:2      .text:0000000000000160 VE_PICK
../../arm/words/pick.s:2      .text:0000000000000160 $d
../../arm/words/pick.s:2      .text:0000000000000170 XT_PICK
../../arm/words/pick.s:2      .text:0000000000000170 $d
../../arm/words/pick.s:2      .text:0000000000000174 PFA_PICK
../../arm/words/pick.s:4      .text:0000000000000174 $t
../../arm/words/to-r.s:2      .text:000000000000017c VE_TO_R
../../arm/words/to-r.s:2      .text:000000000000017c $d
ARM GAS  lp-stellaris.asm 			page 153


../../arm/words/to-r.s:2      .text:0000000000000188 XT_TO_R
../../arm/words/to-r.s:2      .text:0000000000000188 $d
../../arm/words/to-r.s:2      .text:000000000000018c PFA_TO_R
../../arm/words/to-r.s:4      .text:000000000000018c $t
../../arm/words/r-from.s:2      .text:0000000000000194 VE_R_FROM
../../arm/words/r-from.s:2      .text:0000000000000194 $d
../../arm/words/r-from.s:2      .text:00000000000001a0 XT_R_FROM
../../arm/words/r-from.s:2      .text:00000000000001a0 $d
../../arm/words/r-from.s:2      .text:00000000000001a4 PFA_R_FROM
../../arm/words/r-from.s:4      .text:00000000000001a4 $t
../../arm/words/r-fetch.s:2      .text:00000000000001ac VE_R_FETCH
../../arm/words/r-fetch.s:2      .text:00000000000001ac $d
../../arm/words/r-fetch.s:2      .text:00000000000001b8 XT_R_FETCH
../../arm/words/r-fetch.s:2      .text:00000000000001b8 $d
../../arm/words/r-fetch.s:2      .text:00000000000001bc PFA_R_FETCH
../../arm/words/r-fetch.s:4      .text:00000000000001bc $t
../../arm/words/rp.s:2      .text:00000000000001c4 VE_RP_FETCH
../../arm/words/rp.s:2      .text:00000000000001c4 $d
../../arm/words/rp.s:2      .text:00000000000001d0 XT_RP_FETCH
../../arm/words/rp.s:2      .text:00000000000001d0 $d
../../arm/words/rp.s:2      .text:00000000000001d4 PFA_RP_FETCH
../../arm/words/rp.s:4      .text:00000000000001d4 $t
../../arm/words/rp.s:8      .text:00000000000001dc VE_RP_STORE
../../arm/words/rp.s:8      .text:00000000000001dc $d
../../arm/words/rp.s:8      .text:00000000000001e8 XT_RP_STORE
../../arm/words/rp.s:8      .text:00000000000001e8 $d
../../arm/words/rp.s:8      .text:00000000000001ec PFA_RP_STORE
../../arm/words/rp.s:10     .text:00000000000001ec $t
../../arm/words/rp.s:14     .text:00000000000001f4 VE_RP
../../arm/words/rp.s:14     .text:00000000000001f4 $d
../../arm/words/rp.s:14     .text:0000000000000200 XT_RP
../../arm/words/rp.s:14     .text:0000000000000200 $d
../../arm/words/do-user.s:1      .text:0000000000000f5e PFA_DOUSER
../../arm/words/rp.s:14     .text:0000000000000204 PFA_RP
../../arm/words/sp.s:2      .text:0000000000000208 VE_SP_FETCH
../../arm/words/sp.s:2      .text:0000000000000208 $d
../../arm/words/sp.s:2      .text:0000000000000214 XT_SP_FETCH
../../arm/words/sp.s:2      .text:0000000000000214 $d
../../arm/words/sp.s:2      .text:0000000000000218 PFA_SP_FETCH
../../arm/words/sp.s:4      .text:0000000000000218 $t
../../arm/words/sp.s:8      .text:0000000000000220 VE_SP_STORE
../../arm/words/sp.s:8      .text:0000000000000220 $d
../../arm/words/sp.s:8      .text:000000000000022c XT_SP_STORE
../../arm/words/sp.s:8      .text:000000000000022c $d
../../arm/words/sp.s:8      .text:0000000000000230 PFA_SP_STORE
../../arm/words/sp.s:10     .text:0000000000000230 $t
../../arm/words/sp.s:14     .text:0000000000000238 VE_SP
../../arm/words/sp.s:14     .text:0000000000000238 $d
../../arm/words/sp.s:14     .text:0000000000000244 XT_SP
../../arm/words/sp.s:14     .text:0000000000000244 $d
../../arm/words/sp.s:14     .text:0000000000000248 PFA_SP
../../arm/words/sp.s:15     .text:000000000000024c VE_SP0
../../arm/words/sp.s:15     .text:000000000000024c $d
../../arm/words/sp.s:15     .text:0000000000000258 XT_SP0
../../arm/words/sp.s:15     .text:0000000000000258 $d
../../arm/words/sp.s:15     .text:000000000000025c PFA_SP0
../../arm/words/fetch.s:2      .text:0000000000000260 VE_FETCH
ARM GAS  lp-stellaris.asm 			page 154


../../arm/words/fetch.s:2      .text:0000000000000260 $d
../../arm/words/fetch.s:2      .text:000000000000026a $t
../../arm/words/fetch.s:2      .text:000000000000026c XT_FETCH
../../arm/words/fetch.s:2      .text:000000000000026c $d
../../arm/words/fetch.s:2      .text:0000000000000270 PFA_FETCH
../../arm/words/fetch.s:4      .text:0000000000000270 $t
../../arm/words/store.s:2      .text:0000000000000274 VE_STORE
../../arm/words/store.s:2      .text:0000000000000274 $d
../../arm/words/store.s:2      .text:000000000000027e $t
../../arm/words/store.s:2      .text:0000000000000280 XT_STORE
../../arm/words/store.s:2      .text:0000000000000280 $d
../../arm/words/store.s:2      .text:0000000000000284 PFA_STORE
../../arm/words/store.s:3      .text:0000000000000284 $t
../../arm/words/negate.s:2      .text:000000000000028c VE_NEGATE
../../arm/words/negate.s:2      .text:000000000000028c $d
../../arm/words/negate.s:2      .text:000000000000029c XT_NEGATE
../../arm/words/negate.s:2      .text:000000000000029c $d
../../arm/words/negate.s:2      .text:00000000000002a0 PFA_NEGATE
../../arm/words/negate.s:4      .text:00000000000002a0 $t
../../arm/words/abs.s:1      .text:00000000000002a4 VE_ABS
../../arm/words/abs.s:1      .text:00000000000002a4 $d
../../arm/words/abs.s:1      .text:00000000000002b0 XT_ABS
../../arm/words/abs.s:1      .text:00000000000002b0 $d
../../arm/words/abs.s:1      .text:00000000000002b4 PFA_ABS
../../arm/words/abs.s:2      .text:00000000000002b4 $t
../../arm/words/multiplydivide.s:2      .text:00000000000002bc VE_MOD
../../arm/words/multiplydivide.s:2      .text:00000000000002bc $d
../../arm/words/multiplydivide.s:2      .text:00000000000002c8 XT_MOD
../../arm/words/multiplydivide.s:2      .text:00000000000002c8 $d
../../arm/dict_prims.inc:53     .text:000000000000088c DOCOLON
../../arm/words/multiplydivide.s:2      .text:00000000000002cc PFA_MOD
../../arm/words/multiplydivide.s:21     .text:000000000000031c XT_SLASHMOD
../../arm/words/multiplydivide.s:8      .text:00000000000002d8 VE_SLASH
../../arm/words/multiplydivide.s:8      .text:00000000000002d8 $d
../../arm/words/multiplydivide.s:8      .text:00000000000002e2 $t
../../arm/words/multiplydivide.s:8      .text:00000000000002e4 XT_SLASH
../../arm/words/multiplydivide.s:8      .text:00000000000002e4 $d
../../arm/words/multiplydivide.s:8      .text:00000000000002e8 PFA_SLASH
../../arm/words/multiplydivide.s:14     .text:00000000000002f4 VE_STAR
../../arm/words/multiplydivide.s:14     .text:00000000000002f4 $d
../../arm/words/multiplydivide.s:14     .text:00000000000002fe $t
../../arm/words/multiplydivide.s:14     .text:0000000000000300 XT_STAR
../../arm/words/multiplydivide.s:14     .text:0000000000000300 $d
../../arm/words/multiplydivide.s:14     .text:0000000000000304 PFA_STAR
../../arm/words/multiplydivide.s:16     .text:0000000000000304 $t
../../arm/words/multiplydivide.s:21     .text:000000000000030c VE_SLASHMOD
../../arm/words/multiplydivide.s:21     .text:000000000000030c $d
../../arm/words/multiplydivide.s:21     .text:000000000000031c $d
../../arm/words/multiplydivide.s:21     .text:0000000000000320 PFA_SLASHMOD
../../arm/words/multiplydivide.s:23     .text:0000000000000320 $t
../../arm/words/multiplydivide.s:32     .text:0000000000000334 VE_USLASHMOD
../../arm/words/multiplydivide.s:32     .text:0000000000000334 $d
../../arm/words/multiplydivide.s:32     .text:0000000000000342 $t
../../arm/words/multiplydivide.s:32     .text:0000000000000344 XT_USLASHMOD
../../arm/words/multiplydivide.s:32     .text:0000000000000344 $d
../../arm/words/multiplydivide.s:32     .text:0000000000000348 PFA_USLASHMOD
../../arm/words/multiplydivide.s:33     .text:0000000000000348 $t
ARM GAS  lp-stellaris.asm 			page 155


../../arm/words/stack.s:2      .text:000000000000035c VE_DEPTH
../../arm/words/stack.s:2      .text:000000000000035c $d
../../arm/words/stack.s:2      .text:000000000000036a $t
../../arm/words/stack.s:2      .text:000000000000036c XT_DEPTH
../../arm/words/stack.s:2      .text:000000000000036c $d
../../arm/words/stack.s:2      .text:0000000000000370 PFA_DEPTH
../../arm/words/stack.s:3      .text:0000000000000370 $t
../../arm/words/stack.s:7      .text:000000000000037e $d
../../arm/words/stack.s:7      .text:0000000000000380 $d
../../arm/words/stack.s:9      .text:0000000000000384 VE_RDEPTH
../../arm/words/stack.s:9      .text:0000000000000384 $d
../../arm/words/stack.s:9      .text:0000000000000394 XT_RDEPTH
../../arm/words/stack.s:9      .text:0000000000000394 $d
../../arm/words/stack.s:9      .text:0000000000000398 PFA_RDEPTH
../../arm/words/stack.s:10     .text:0000000000000398 $t
../../arm/words/stack.s:15     .text:00000000000003a8 $d
../../arm/words/stack.s:17     .text:00000000000003ac VE_RDROP
../../arm/words/stack.s:17     .text:00000000000003ac $d
../../arm/words/stack.s:17     .text:00000000000003ba $t
../../arm/words/stack.s:17     .text:00000000000003bc XT_RDROP
../../arm/words/stack.s:17     .text:00000000000003bc $d
../../arm/words/stack.s:17     .text:00000000000003c0 PFA_RDROP
../../arm/words/stack.s:18     .text:00000000000003c0 $t
../../arm/words/logic.s:2      .text:00000000000003c4 VE_AND
../../arm/words/logic.s:2      .text:00000000000003c4 $d
../../arm/words/logic.s:2      .text:00000000000003d0 XT_AND
../../arm/words/logic.s:2      .text:00000000000003d0 $d
../../arm/words/logic.s:2      .text:00000000000003d4 PFA_AND
../../arm/words/logic.s:5      .text:00000000000003d4 $t
../../arm/words/logic.s:10     .text:00000000000003dc VE_OR
../../arm/words/logic.s:10     .text:00000000000003dc $d
../../arm/words/logic.s:10     .text:00000000000003e8 XT_OR
../../arm/words/logic.s:10     .text:00000000000003e8 $d
../../arm/words/logic.s:10     .text:00000000000003ec PFA_OR
../../arm/words/logic.s:13     .text:00000000000003ec $t
../../arm/words/logic.s:18     .text:00000000000003f4 VE_XOR
../../arm/words/logic.s:18     .text:00000000000003f4 $d
../../arm/words/logic.s:18     .text:0000000000000400 XT_XOR
../../arm/words/logic.s:18     .text:0000000000000400 $d
../../arm/words/logic.s:18     .text:0000000000000404 PFA_XOR
../../arm/words/logic.s:21     .text:0000000000000404 $t
../../arm/words/logic.s:26     .text:000000000000040c VE_NOT
../../arm/words/logic.s:26     .text:000000000000040c $d
../../arm/words/logic.s:26     .text:0000000000000418 XT_NOT
../../arm/words/logic.s:26     .text:0000000000000418 $d
../../arm/words/logic.s:26     .text:000000000000041c PFA_NOT
../../arm/words/logic.s:28     .text:000000000000041c $t
../../arm/words/logic.s:31     .text:0000000000000420 VE_INVERT
../../arm/words/logic.s:31     .text:0000000000000420 $d
../../arm/words/logic.s:31     .text:0000000000000430 XT_INVERT
../../arm/words/logic.s:31     .text:0000000000000430 $d
../../arm/words/logic.s:31     .text:0000000000000434 PFA_INVERT
../../arm/words/logic.s:32     .text:0000000000000434 $t
../../arm/words/logic.s:36     .text:0000000000000438 VE_RSHIFT
../../arm/words/logic.s:36     .text:0000000000000438 $d
../../arm/words/logic.s:36     .text:0000000000000448 XT_RSHIFT
../../arm/words/logic.s:36     .text:0000000000000448 $d
ARM GAS  lp-stellaris.asm 			page 156


../../arm/words/logic.s:36     .text:000000000000044c PFA_RSHIFT
../../arm/words/logic.s:38     .text:000000000000044c $t
../../arm/words/logic.s:44     .text:0000000000000454 VE_LSHIFT
../../arm/words/logic.s:44     .text:0000000000000454 $d
../../arm/words/logic.s:44     .text:0000000000000464 XT_LSHIFT
../../arm/words/logic.s:44     .text:0000000000000464 $d
../../arm/words/logic.s:44     .text:0000000000000468 PFA_LSHIFT
../../arm/words/logic.s:46     .text:0000000000000468 $t
../../arm/words/memory.s:2      .text:0000000000000470 VE_MOVE
../../arm/words/memory.s:2      .text:0000000000000470 $d
../../arm/words/memory.s:2      .text:0000000000000480 XT_MOVE
../../arm/words/memory.s:2      .text:0000000000000480 $d
../../arm/words/memory.s:2      .text:0000000000000484 PFA_MOVE
../../arm/words/memory.s:5      .text:0000000000000484 $t
../../arm/words/memory.s:43     .text:00000000000004bc VE_FILL
../../arm/words/memory.s:43     .text:00000000000004bc $d
../../arm/words/memory.s:43     .text:00000000000004cc XT_FILL
../../arm/words/memory.s:43     .text:00000000000004cc $d
../../arm/words/memory.s:43     .text:00000000000004d0 PFA_FILL
../../arm/words/memory.s:46     .text:00000000000004d0 $t
../../arm/words/memory.s:62     .text:00000000000004ec VE_PLUSSTORE
../../arm/words/memory.s:62     .text:00000000000004ec $d
../../arm/words/memory.s:62     .text:00000000000004f8 XT_PLUSSTORE
../../arm/words/memory.s:62     .text:00000000000004f8 $d
../../arm/words/memory.s:62     .text:00000000000004fc PFA_PLUSSTORE
../../arm/words/memory.s:65     .text:00000000000004fc $t
../../arm/words/memory.s:73     .text:0000000000000508 VE_CFETCH
../../arm/words/memory.s:73     .text:0000000000000508 $d
../../arm/words/memory.s:73     .text:0000000000000514 XT_CFETCH
../../arm/words/memory.s:73     .text:0000000000000514 $d
../../arm/words/memory.s:73     .text:0000000000000518 PFA_CFETCH
../../arm/words/memory.s:76     .text:0000000000000518 $t
../../arm/words/memory.s:80     .text:000000000000051c VE_CSTORE
../../arm/words/memory.s:80     .text:000000000000051c $d
../../arm/words/memory.s:80     .text:0000000000000528 XT_CSTORE
../../arm/words/memory.s:80     .text:0000000000000528 $d
../../arm/words/memory.s:80     .text:000000000000052c PFA_CSTORE
../../arm/words/memory.s:83     .text:000000000000052c $t
../../arm/words/comparisions.s:23     .text:0000000000000534 VE_ZEROEQUAL
../../arm/words/comparisions.s:23     .text:0000000000000534 $d
../../arm/words/comparisions.s:23     .text:0000000000000540 XT_ZEROEQUAL
../../arm/words/comparisions.s:23     .text:0000000000000540 $d
../../arm/words/comparisions.s:23     .text:0000000000000544 PFA_ZEROEQUAL
../../arm/words/comparisions.s:25     .text:0000000000000544 $t
../../arm/words/comparisions.s:30     .text:000000000000054c VE_NOTZEROEQUAL
../../arm/words/comparisions.s:30     .text:000000000000054c $d
../../arm/words/comparisions.s:30     .text:0000000000000558 XT_NOTZEROEQUAL
../../arm/words/comparisions.s:30     .text:0000000000000558 $d
../../arm/words/comparisions.s:30     .text:000000000000055c PFA_NOTZEROEQUAL
../../arm/words/comparisions.s:32     .text:000000000000055c $t
../../arm/words/comparisions.s:38     .text:0000000000000564 VE_ZEROLESS
../../arm/words/comparisions.s:38     .text:0000000000000564 $d
../../arm/words/comparisions.s:38     .text:0000000000000570 XT_ZEROLESS
../../arm/words/comparisions.s:38     .text:0000000000000570 $d
../../arm/words/comparisions.s:38     .text:0000000000000574 PFA_ZEROLESS
../../arm/words/comparisions.s:40     .text:0000000000000574 $t
../../arm/words/comparisions.s:45     .text:000000000000057c VE_GREATEREQUAL
ARM GAS  lp-stellaris.asm 			page 157


../../arm/words/comparisions.s:45     .text:000000000000057c $d
../../arm/words/comparisions.s:45     .text:0000000000000588 XT_GREATEREQUAL
../../arm/words/comparisions.s:45     .text:0000000000000588 $d
../../arm/words/comparisions.s:45     .text:000000000000058c PFA_GREATEREQUAL
../../arm/words/comparisions.s:47     .text:000000000000058c $t
../../arm/words/comparisions.s:55     .text:000000000000059c VE_LESSEQUAL
../../arm/words/comparisions.s:55     .text:000000000000059c $d
../../arm/words/comparisions.s:55     .text:00000000000005a8 XT_LESSEQUAL
../../arm/words/comparisions.s:55     .text:00000000000005a8 $d
../../arm/words/comparisions.s:55     .text:00000000000005ac PFA_LESSEQUAL
../../arm/words/comparisions.s:57     .text:00000000000005ac $t
../../arm/words/comparisions.s:65     .text:00000000000005bc VE_LESS
../../arm/words/comparisions.s:65     .text:00000000000005bc $d
../../arm/words/comparisions.s:65     .text:00000000000005c6 $t
../../arm/words/comparisions.s:65     .text:00000000000005c8 XT_LESS
../../arm/words/comparisions.s:65     .text:00000000000005c8 $d
../../arm/words/comparisions.s:65     .text:00000000000005cc PFA_LESS
../../arm/words/comparisions.s:68     .text:00000000000005cc $t
../../arm/words/comparisions.s:76     .text:00000000000005dc VE_GREATER
../../arm/words/comparisions.s:76     .text:00000000000005dc $d
../../arm/words/comparisions.s:76     .text:00000000000005e6 $t
../../arm/words/comparisions.s:76     .text:00000000000005e8 XT_GREATER
../../arm/words/comparisions.s:76     .text:00000000000005e8 $d
../../arm/words/comparisions.s:76     .text:00000000000005ec PFA_GREATER
../../arm/words/comparisions.s:79     .text:00000000000005ec $t
../../arm/words/comparisions.s:87     .text:00000000000005fc VE_ULESS
../../arm/words/comparisions.s:87     .text:00000000000005fc $d
../../arm/words/comparisions.s:87     .text:0000000000000608 XT_ULESS
../../arm/words/comparisions.s:87     .text:0000000000000608 $d
../../arm/words/comparisions.s:87     .text:000000000000060c PFA_ULESS
../../arm/words/comparisions.s:89     .text:000000000000060c $t
../../arm/words/comparisions.s:94     .text:0000000000000614 VE_UGREATER
../../arm/words/comparisions.s:94     .text:0000000000000614 $d
../../arm/words/comparisions.s:94     .text:0000000000000620 XT_UGREATER
../../arm/words/comparisions.s:94     .text:0000000000000620 $d
../../arm/words/comparisions.s:94     .text:0000000000000624 PFA_UGREATER
../../arm/words/comparisions.s:96     .text:0000000000000624 $t
../../arm/words/comparisions.s:101    .text:000000000000062c VE_NOTEQUAL
../../arm/words/comparisions.s:101    .text:000000000000062c $d
../../arm/words/comparisions.s:101    .text:0000000000000638 XT_NOTEQUAL
../../arm/words/comparisions.s:101    .text:0000000000000638 $d
../../arm/words/comparisions.s:101    .text:000000000000063c PFA_NOTEQUAL
../../arm/words/comparisions.s:104    .text:000000000000063c $t
../../arm/words/comparisions.s:112    .text:0000000000000648 VE_EQUAL
../../arm/words/comparisions.s:112    .text:0000000000000648 $d
../../arm/words/comparisions.s:112    .text:0000000000000652 $t
../../arm/words/comparisions.s:112    .text:0000000000000654 XT_EQUAL
../../arm/words/comparisions.s:112    .text:0000000000000654 $d
../../arm/words/comparisions.s:112    .text:0000000000000658 PFA_EQUAL
../../arm/words/comparisions.s:115    .text:0000000000000658 $t
../../arm/words/comparisions.s:122    .text:0000000000000664 VE_MIN
../../arm/words/comparisions.s:122    .text:0000000000000664 $d
../../arm/words/comparisions.s:122    .text:0000000000000670 XT_MIN
../../arm/words/comparisions.s:122    .text:0000000000000670 $d
../../arm/words/comparisions.s:122    .text:0000000000000674 PFA_MIN
../../arm/words/comparisions.s:125    .text:0000000000000674 $t
../../arm/words/comparisions.s:132    .text:0000000000000680 VE_MAX
ARM GAS  lp-stellaris.asm 			page 158


../../arm/words/comparisions.s:132    .text:0000000000000680 $d
../../arm/words/comparisions.s:132    .text:000000000000068c XT_MAX
../../arm/words/comparisions.s:132    .text:000000000000068c $d
../../arm/words/comparisions.s:132    .text:0000000000000690 PFA_MAX
../../arm/words/comparisions.s:135    .text:0000000000000690 $t
../../arm/words/comparisions.s:142    .text:000000000000069c VE_UMAX
../../arm/words/comparisions.s:142    .text:000000000000069c $d
../../arm/words/comparisions.s:142    .text:00000000000006ac XT_UMAX
../../arm/words/comparisions.s:142    .text:00000000000006ac $d
../../arm/words/comparisions.s:142    .text:00000000000006b0 PFA_UMAX
../../arm/words/comparisions.s:144    .text:00000000000006b0 $t
../../arm/words/comparisions.s:151    .text:00000000000006bc VE_UMIN
../../arm/words/comparisions.s:151    .text:00000000000006bc $d
../../arm/words/comparisions.s:151    .text:00000000000006cc XT_UMIN
../../arm/words/comparisions.s:151    .text:00000000000006cc $d
../../arm/words/comparisions.s:151    .text:00000000000006d0 PFA_UMIN
../../arm/words/comparisions.s:153    .text:00000000000006d0 $t
../../arm/words/2swap.s:2      .text:00000000000006dc VE_2SWAP
../../arm/words/2swap.s:2      .text:00000000000006dc $d
../../arm/words/2swap.s:2      .text:00000000000006ea $t
../../arm/words/2swap.s:2      .text:00000000000006ec XT_2SWAP
../../arm/words/2swap.s:2      .text:00000000000006ec $d
../../arm/words/2swap.s:2      .text:00000000000006f0 PFA_2SWAP
../../arm/words/2swap.s:7      .text:00000000000006f6 dswap
../../arm/words/2swap.s:4      .text:00000000000006f0 $t
../../arm/words/2nip.s:1      .text:000000000000070c VE_2NIP
../../arm/words/2nip.s:1      .text:000000000000070c $d
../../arm/words/2nip.s:1      .text:000000000000071c XT_2NIP
../../arm/words/2nip.s:1      .text:000000000000071c $d
../../arm/words/2nip.s:1      .text:0000000000000720 PFA_2NIP
../../arm/words/2nip.s:2      .text:0000000000000720 $t
../../arm/words/2drop.s:1      .text:000000000000072c VE_2DROP
../../arm/words/2drop.s:1      .text:000000000000072c $d
../../arm/words/2drop.s:1      .text:000000000000073a $t
../../arm/words/2drop.s:1      .text:000000000000073c XT_2DROP
../../arm/words/2drop.s:1      .text:000000000000073c $d
../../arm/words/2drop.s:1      .text:0000000000000740 PFA_2DROP
../../arm/words/2drop.s:2      .text:0000000000000740 $t
../../arm/words/2over.s:1      .text:000000000000074c VE_2OVER
../../arm/words/2over.s:1      .text:000000000000074c $d
../../arm/words/2over.s:1      .text:000000000000075a $t
../../arm/words/2over.s:1      .text:000000000000075c XT_2OVER
../../arm/words/2over.s:1      .text:000000000000075c $d
../../arm/words/2over.s:1      .text:0000000000000760 PFA_2OVER
../../arm/words/2over.s:2      .text:0000000000000760 $t
../../arm/words/2r-fetch.s:1      .text:0000000000000770 VE_2R_FETCH
../../arm/words/2r-fetch.s:1      .text:0000000000000770 $d
../../arm/words/2r-fetch.s:1      .text:000000000000077c XT_2R_FETCH
../../arm/words/2r-fetch.s:1      .text:000000000000077c $d
../../arm/words/2r-fetch.s:1      .text:0000000000000780 PFA_2R_FETCH
../../arm/words/2r-fetch.s:2      .text:0000000000000780 $t
../../arm/words/2to-r.s:1      .text:0000000000000790 VE_2TO_R
../../arm/words/2to-r.s:1      .text:0000000000000790 $d
../../arm/words/2to-r.s:1      .text:000000000000079c XT_2TO_R
../../arm/words/2to-r.s:1      .text:000000000000079c $d
../../arm/words/2to-r.s:1      .text:00000000000007a0 PFA_2TO_R
../../arm/words/2to-r.s:2      .text:00000000000007a0 $t
ARM GAS  lp-stellaris.asm 			page 159


../../arm/words/2r-from.s:1      .text:00000000000007ac VE_2R_FROM
../../arm/words/2r-from.s:1      .text:00000000000007ac $d
../../arm/words/2r-from.s:1      .text:00000000000007b8 XT_2R_FROM
../../arm/words/2r-from.s:1      .text:00000000000007b8 $d
../../arm/words/2r-from.s:1      .text:00000000000007bc PFA_2R_FROM
../../arm/words/2r-from.s:2      .text:00000000000007bc $t
../../arm/words/2-slash.s:1      .text:00000000000007cc VE_2SLASH
../../arm/words/2-slash.s:1      .text:00000000000007cc $d
../../arm/words/2-slash.s:1      .text:00000000000007d8 XT_2SLASH
../../arm/words/2-slash.s:1      .text:00000000000007d8 $d
../../arm/words/2-slash.s:1      .text:00000000000007dc PFA_2SLASH
../../arm/words/2-slash.s:2      .text:00000000000007dc $t
../../arm/words/2-star.s:1      .text:00000000000007e4 VE_2STAR
../../arm/words/2-star.s:1      .text:00000000000007e4 $d
../../arm/words/2-star.s:1      .text:00000000000007f0 XT_2STAR
../../arm/words/2-star.s:1      .text:00000000000007f0 $d
../../arm/words/2-star.s:1      .text:00000000000007f4 PFA_2STAR
../../arm/words/2-star.s:2      .text:00000000000007f4 $t
../../arm/words/d-2star.s:2      .text:00000000000007f8 VE_D2STAR
../../arm/words/d-2star.s:2      .text:00000000000007f8 $d
../../arm/words/d-2star.s:2      .text:0000000000000804 XT_D2STAR
../../arm/words/d-2star.s:2      .text:0000000000000804 $d
../../arm/words/d-2star.s:2      .text:0000000000000808 PFA_D2STAR
../../arm/words/d-2star.s:4      .text:0000000000000808 $t
../../arm/words/d-2slash.s:2      .text:0000000000000814 VE_D2SLASH
../../arm/words/d-2slash.s:2      .text:0000000000000814 $d
../../arm/words/d-2slash.s:2      .text:0000000000000820 XT_D2SLASH
../../arm/words/d-2slash.s:2      .text:0000000000000820 $d
../../arm/words/d-2slash.s:2      .text:0000000000000824 PFA_D2SLASH
../../arm/words/d-2slash.s:4      .text:0000000000000824 $t
../../shared/words/dabs.s:1      .text:0000000000000834 VE_DABS
../../shared/words/dabs.s:1      .text:0000000000000834 $d
../../shared/words/dabs.s:1      .text:0000000000000844 XT_DABS
../../shared/words/dabs.s:1      .text:0000000000000844 $d
../../shared/words/dabs.s:1      .text:0000000000000848 PFA_DABS
../../arm/words/docondbranch.s:1      .text:0000000000000fbe XT_DOCONDBRANCH
../../shared/words/dabs.s:4      .text:000000000000085c DABS_LEAVE
../../arm/words/dnegate.s:2      .text:0000000000000870 XT_DNEGATE
../../arm/words/dnegate.s:2      .text:0000000000000860 VE_DNEGATE
../../arm/words/dnegate.s:2      .text:0000000000000860 $d
../../arm/words/dnegate.s:2      .text:0000000000000870 $d
../../arm/words/dnegate.s:2      .text:0000000000000874 PFA_DNEGATE
../../arm/words/dnegate.s:8      .text:000000000000087a dnegate
../../arm/words/dnegate.s:5      .text:0000000000000874 $t
../../arm/dict_prims.inc:58     .text:0000000000000896 DO_EXECUTE
../../arm/words/d-plus.s:2      .text:000000000000089c VE_DPLUS
../../arm/words/d-plus.s:2      .text:000000000000089c $d
../../arm/words/d-plus.s:2      .text:00000000000008a8 XT_DPLUS
../../arm/words/d-plus.s:2      .text:00000000000008a8 $d
../../arm/words/d-plus.s:2      .text:00000000000008ac PFA_DPLUS
../../arm/words/d-plus.s:4      .text:00000000000008ac $t
../../arm/words/d-minus.s:2      .text:00000000000008b8 VE_DMINUS
../../arm/words/d-minus.s:2      .text:00000000000008b8 $d
../../arm/words/d-minus.s:2      .text:00000000000008c4 XT_DMINUS
../../arm/words/d-minus.s:2      .text:00000000000008c4 $d
../../arm/words/d-minus.s:2      .text:00000000000008c8 PFA_DMINUS
../../arm/words/d-minus.s:4      .text:00000000000008c8 $t
ARM GAS  lp-stellaris.asm 			page 160


../../arm/words/2dup.s:1      .text:00000000000008d8 VE_2DUP
../../arm/words/2dup.s:1      .text:00000000000008d8 $d
../../arm/words/2dup.s:1      .text:00000000000008e8 XT_2DUP
../../arm/words/2dup.s:1      .text:00000000000008e8 $d
../../arm/words/2dup.s:1      .text:00000000000008ec PFA_2DUP
../../arm/words/2dup.s:2      .text:00000000000008ec $t
../../arm/words/double.s:4      .text:00000000000008fc VE_UMSTAR
../../arm/words/double.s:4      .text:00000000000008fc $d
../../arm/words/double.s:4      .text:0000000000000908 XT_UMSTAR
../../arm/words/double.s:4      .text:0000000000000908 $d
../../arm/words/double.s:4      .text:000000000000090c PFA_UMSTAR
../../arm/words/double.s:8      .text:000000000000090c $t
../../arm/words/double.s:14     .text:0000000000000918 VE_MSTAR
../../arm/words/double.s:14     .text:0000000000000918 $d
../../arm/words/double.s:14     .text:0000000000000924 XT_MSTAR
../../arm/words/double.s:14     .text:0000000000000924 $d
../../arm/words/double.s:14     .text:0000000000000928 PFA_MSTAR
../../arm/words/double.s:18     .text:0000000000000928 $t
../../arm/words/double.s:24     .text:0000000000000934 VE_UDSLASHMOD
../../arm/words/double.s:24     .text:0000000000000934 $d
../../arm/words/double.s:24     .text:0000000000000944 XT_UDSLASHMOD
../../arm/words/double.s:24     .text:0000000000000944 $d
../../arm/words/double.s:24     .text:0000000000000948 PFA_UDSLASHMOD
../../arm/words/double.s:32     .text:000000000000094e ud_slash_mod
../../arm/words/double.s:29     .text:0000000000000948 $t
../../arm/words/double.s:50     .text:0000000000000958 ud_slash_mod_internal
../../arm/words/double.s:93     .text:0000000000000988 VE_DSLASHMOD
../../arm/words/double.s:93     .text:0000000000000988 $d
../../arm/words/double.s:93     .text:0000000000000996 $t
../../arm/words/double.s:93     .text:0000000000000998 XT_DSLASHMOD
../../arm/words/double.s:93     .text:0000000000000998 $d
../../arm/words/double.s:93     .text:000000000000099c PFA_DSLASHMOD
../../arm/words/double.s:99     .text:00000000000009a2 d_slash_mod
../../arm/words/double.s:96     .text:000000000000099c $t
../../arm/words/double.s:148    .text:0000000000000a0c VE_DSLASH
../../arm/words/double.s:148    .text:0000000000000a0c $d
../../arm/words/double.s:148    .text:0000000000000a18 XT_DSLASH
../../arm/words/double.s:148    .text:0000000000000a18 $d
../../arm/words/double.s:148    .text:0000000000000a1c PFA_DSLASH
../../arm/words/double.s:150    .text:0000000000000a1c $t
../../arm/words/double.s:160    .text:0000000000000a28 VE_2STORE
../../arm/words/double.s:160    .text:0000000000000a28 $d
../../arm/words/double.s:160    .text:0000000000000a34 XT_2STORE
../../arm/words/double.s:160    .text:0000000000000a34 $d
../../arm/words/double.s:160    .text:0000000000000a38 PFA_2STORE
../../arm/words/double.s:162    .text:0000000000000a38 $t
../../arm/words/double.s:169    .text:0000000000000a44 VE_2FETCH
../../arm/words/double.s:169    .text:0000000000000a44 $d
../../arm/words/double.s:169    .text:0000000000000a50 XT_2FETCH
../../arm/words/double.s:169    .text:0000000000000a50 $d
../../arm/words/double.s:169    .text:0000000000000a54 PFA_2FETCH
../../arm/words/double.s:171    .text:0000000000000a54 $t
../../arm/words/double.s:182    .text:0000000000000a60 VE_DLESS
../../arm/words/double.s:182    .text:0000000000000a60 $d
../../arm/words/double.s:182    .text:0000000000000a6c XT_DLESS
../../arm/words/double.s:182    .text:0000000000000a6c $d
../../arm/words/double.s:182    .text:0000000000000a70 PFA_DLESS
ARM GAS  lp-stellaris.asm 			page 161


../../arm/words/double.s:186    .text:0000000000000a70 $t
../../arm/words/double.s:208    .text:0000000000000a88 VE_DGREATER
../../arm/words/double.s:208    .text:0000000000000a88 $d
../../arm/words/double.s:208    .text:0000000000000a94 XT_DGREATER
../../arm/words/double.s:208    .text:0000000000000a94 $d
../../arm/words/double.s:208    .text:0000000000000a98 PFA_DGREATER
../../arm/words/double.s:212    .text:0000000000000a98 $t
../../arm/words/double.s:234    .text:0000000000000ab0 VE_DZEROLESS
../../arm/words/double.s:234    .text:0000000000000ab0 $d
../../arm/words/double.s:234    .text:0000000000000abc XT_DZEROLESS
../../arm/words/double.s:234    .text:0000000000000abc $d
../../arm/words/double.s:234    .text:0000000000000ac0 PFA_DZEROLESS
../../arm/words/double.s:236    .text:0000000000000ac0 $t
../../arm/words/double.s:241    .text:0000000000000ac8 VE_DZEROEQUAL
../../arm/words/double.s:241    .text:0000000000000ac8 $d
../../arm/words/double.s:241    .text:0000000000000ad4 XT_DZEROEQUAL
../../arm/words/double.s:241    .text:0000000000000ad4 $d
../../arm/words/double.s:241    .text:0000000000000ad8 PFA_DZEROEQUAL
../../arm/words/double.s:243    .text:0000000000000ad8 $t
../../arm/words/double.s:254    .text:0000000000000ae8 VE_DEQUAL
../../arm/words/double.s:254    .text:0000000000000ae8 $d
../../arm/words/double.s:254    .text:0000000000000af4 XT_DEQUAL
../../arm/words/double.s:254    .text:0000000000000af4 $d
../../arm/words/double.s:254    .text:0000000000000af8 PFA_DEQUAL
../../arm/words/double.s:256    .text:0000000000000af8 $t
../../arm/words/double.s:268    .text:0000000000000b0c VE_S2D
../../arm/words/double.s:268    .text:0000000000000b0c $d
../../arm/words/double.s:268    .text:0000000000000b18 XT_S2D
../../arm/words/double.s:268    .text:0000000000000b18 $d
../../arm/words/double.s:268    .text:0000000000000b1c PFA_S2D
../../arm/words/double.s:269    .text:0000000000000b1c $t
../../shared/words/base.s:1      .text:0000000000000b24 VE_BASE
../../shared/words/base.s:1      .text:0000000000000b24 $d
../../shared/words/base.s:1      .text:0000000000000b34 XT_BASE
../../shared/words/base.s:1      .text:0000000000000b34 $d
../../shared/words/base.s:1      .text:0000000000000b38 PFA_BASE
../../arm/words/plus.s:2      .text:0000000000000b3c VE_PLUS
../../arm/words/plus.s:2      .text:0000000000000b3c $d
../../arm/words/plus.s:2      .text:0000000000000b46 $t
../../arm/words/plus.s:2      .text:0000000000000b48 XT_PLUS
../../arm/words/plus.s:2      .text:0000000000000b48 $d
../../arm/words/plus.s:2      .text:0000000000000b4c PFA_PLUS
../../arm/words/plus.s:4      .text:0000000000000b4c $t
../../arm/words/minus.s:2      .text:0000000000000b54 VE_MINUS
../../arm/words/minus.s:2      .text:0000000000000b54 $d
../../arm/words/minus.s:2      .text:0000000000000b5e $t
../../arm/words/minus.s:2      .text:0000000000000b60 XT_MINUS
../../arm/words/minus.s:2      .text:0000000000000b60 $d
../../arm/words/minus.s:2      .text:0000000000000b64 PFA_MINUS
../../arm/words/minus.s:5      .text:0000000000000b64 $t
../../arm/words/1-plus.s:1      .text:0000000000000b6c VE_1PLUS
../../arm/words/1-plus.s:1      .text:0000000000000b6c $d
../../arm/words/1-plus.s:1      .text:0000000000000b78 XT_1PLUS
../../arm/words/1-plus.s:1      .text:0000000000000b78 $d
../../arm/words/1-plus.s:1      .text:0000000000000b7c PFA_1PLUS
../../arm/words/1-plus.s:2      .text:0000000000000b7c $t
../../arm/words/1-minus.s:1      .text:0000000000000b84 VE_1MINUS
ARM GAS  lp-stellaris.asm 			page 162


../../arm/words/1-minus.s:1      .text:0000000000000b84 $d
../../arm/words/1-minus.s:1      .text:0000000000000b90 XT_1MINUS
../../arm/words/1-minus.s:1      .text:0000000000000b90 $d
../../arm/words/1-minus.s:1      .text:0000000000000b94 PFA_1MINUS
../../arm/words/1-minus.s:2      .text:0000000000000b94 $t
../../arm/words/2-plus.s:1      .text:0000000000000b9c VE_2PLUS
../../arm/words/2-plus.s:1      .text:0000000000000b9c $d
../../arm/words/2-plus.s:1      .text:0000000000000ba8 XT_2PLUS
../../arm/words/2-plus.s:1      .text:0000000000000ba8 $d
../../arm/words/2-plus.s:1      .text:0000000000000bac PFA_2PLUS
../../arm/words/2-plus.s:2      .text:0000000000000bac $t
../../arm/words/2-minus.s:1      .text:0000000000000bb4 VE_2MINUS
../../arm/words/2-minus.s:1      .text:0000000000000bb4 $d
../../arm/words/2-minus.s:1      .text:0000000000000bc0 XT_2MINUS
../../arm/words/2-minus.s:1      .text:0000000000000bc0 $d
../../arm/words/2-minus.s:1      .text:0000000000000bc4 PFA_2MINUS
../../arm/words/2-minus.s:2      .text:0000000000000bc4 $t
../../arm/words/cell-plus.s:1      .text:0000000000000bcc VE_CELLPLUS
../../arm/words/cell-plus.s:1      .text:0000000000000bcc $d
../../arm/words/cell-plus.s:1      .text:0000000000000bda $t
../../arm/words/cell-plus.s:1      .text:0000000000000bdc XT_CELLPLUS
../../arm/words/cell-plus.s:1      .text:0000000000000bdc $d
../../arm/words/cell-plus.s:1      .text:0000000000000be0 PFA_CELLPLUS
../../arm/words/cell-plus.s:2      .text:0000000000000be0 $t
../../arm/words/cells.s:2      .text:0000000000000be4 VE_CELLS
../../arm/words/cells.s:2      .text:0000000000000be4 $d
../../arm/words/cells.s:2      .text:0000000000000bf2 $t
../../arm/words/cells.s:2      .text:0000000000000bf4 XT_CELLS
../../arm/words/cells.s:2      .text:0000000000000bf4 $d
../../arm/words/cells.s:2      .text:0000000000000bf8 PFA_CELLS
../../arm/words/cells.s:4      .text:0000000000000bf8 $t
../../shared/words/state.s:2      .text:0000000000000bfc VE_STATE
../../shared/words/state.s:2      .text:0000000000000bfc $d
../../shared/words/state.s:2      .text:0000000000000c0a $t
../../shared/words/state.s:2      .text:0000000000000c0c XT_STATE
../../shared/words/state.s:2      .text:0000000000000c0c $d
../../arm/words/do-variable.s:2      .text:0000000000000f26 PFA_DOVARIABLE
../../shared/words/state.s:2      .text:0000000000000c10 PFA_STATE
../../arm/words/tib.s:2      .text:0000000000000c14 VE_NUMBERTIB
../../arm/words/tib.s:2      .text:0000000000000c14 $d
../../arm/words/tib.s:2      .text:0000000000000c24 XT_NUMBERTIB
../../arm/words/tib.s:2      .text:0000000000000c24 $d
../../arm/words/tib.s:2      .text:0000000000000c28 PFA_NUMBERTIB
../../arm/words/tib.s:4      .text:0000000000000c2c VE_TIB
../../arm/words/tib.s:4      .text:0000000000000c2c $d
../../arm/words/tib.s:4      .text:0000000000000c38 XT_TIB
../../arm/words/tib.s:4      .text:0000000000000c38 $d
../../arm/words/tib.s:4      .text:0000000000000c3c PFA_TIB
../../arm/words/tib.s:5      .text:0000000000000c3c $t
../../arm/words/tib.s:7      .text:0000000000000c44 $d
../../arm/words/cold.s:2      .text:0000000000000c48 VE_COLD
../../arm/words/cold.s:2      .text:0000000000000c48 $d
../../arm/words/cold.s:2      .text:0000000000000c58 XT_COLD
../../arm/words/cold.s:2      .text:0000000000000c58 $d
../../arm/words/cold.s:4      .text:0000000000000c5c $t
../../shared/words/warm.s:2      .text:0000000000001124 XT_WARM
../../shared/words/quit.s:1      .text:0000000000000c68 VE_QUIT
ARM GAS  lp-stellaris.asm 			page 163


../../shared/words/quit.s:1      .text:0000000000000c68 $d
../../shared/words/quit.s:1      .text:0000000000000c78 XT_QUIT
../../shared/words/quit.s:1      .text:0000000000000c78 $d
../../shared/words/quit.s:1      .text:0000000000000c7c PFA_QUIT
../../shared/words/leave.s:2      .text:0000000000002af8 XT_LP0
../../shared/words/leave.s:3      .text:0000000000002b18 XT_LP
../../shared/words/left-bracket.s:2      .text:00000000000011e8 XT_LBRACKET
../../shared/words/quit.s:10     .text:0000000000000c8c PFA_QUIT2
../../shared/words/quit.s:14     .text:0000000000000ca4 PFA_QUIT4
../../shared/words/prompt-ready.s:2      .text:000000000000183c XT_PROMPTREADY
../../shared/words/refill.s:2      .text:0000000000001580 XT_REFILL
../../shared/words/prompt-input.s:2      .text:00000000000017cc XT_PROMPTINPUT
../../shared/words/quit.s:29     .text:0000000000000cf0 PFA_QUIT3
../../arm/words/doliteral.s:1      .text:0000000000000fd2 XT_DOLITERAL
../../shared/words/interpret.s:2      .text:0000000000002604 XT_INTERPRET
../../shared/words/catch.s:4      .text:0000000000001890 XT_CATCH
../../shared/words/quit.s:27     .text:0000000000000ce8 PFA_QUIT5
../../shared/words/prompt-error.s:2      .text:0000000000001764 XT_PROMPTERROR
../../arm/words/dobranch.s:1      .text:0000000000000fb4 XT_DOBRANCH
../../shared/words/prompt-ok.s:2      .text:00000000000017f8 XT_PROMPTOK
../../arm/words/execute.s:2      .text:0000000000000cfc VE_EXECUTE
../../arm/words/execute.s:2      .text:0000000000000cfc $d
../../arm/words/execute.s:2      .text:0000000000000d0c XT_EXECUTE
../../arm/words/execute.s:2      .text:0000000000000d0c $d
../../arm/words/execute.s:2      .text:0000000000000d10 PFA_EXECUTE
../../arm/words/execute.s:3      .text:0000000000000d10 $t
../../shared/words/key.s:1      .text:0000000000000d18 VE_KEY
../../shared/words/key.s:1      .text:0000000000000d18 $d
../../shared/words/key.s:1      .text:0000000000000d24 XT_KEY
../../shared/words/key.s:1      .text:0000000000000d24 $d
../../arm/words/do-defer.s:1      .text:0000000000000f50 PFA_DODEFER
../../shared/words/key.s:1      .text:0000000000000d28 PFA_KEY
../../shared/words/key.s:1      *ABS*:0000000020000210 DEFER_RAM_KEY
../../shared/words/key.s:3      .text:0000000000000d38 XT_KEY_PAUSE
../../shared/words/key.s:3      .text:0000000000000d3c PFA_KEY_PAUSE
../../shared/words/pause.s:1      .text:0000000000000dec XT_PAUSE
     ./words/usart.s:110    .text:0000000000003ca0 XT_SERIAL_KEYQ
     ./words/usart.s:98     .text:0000000000003c74 XT_SERIAL_KEY
../../shared/words/keyq.s:1      .text:0000000000000d54 VE_KEYQ
../../shared/words/keyq.s:1      .text:0000000000000d54 $d
../../shared/words/keyq.s:1      .text:0000000000000d64 XT_KEYQ
../../shared/words/keyq.s:1      .text:0000000000000d64 $d
../../shared/words/keyq.s:1      .text:0000000000000d68 PFA_KEYQ
../../shared/words/keyq.s:1      *ABS*:0000000020000214 DEFER_RAM_KEYQ
../../shared/words/emit.s:1      .text:0000000000000d78 VE_EMIT
../../shared/words/emit.s:1      .text:0000000000000d78 $d
../../shared/words/emit.s:1      .text:0000000000000d88 XT_EMIT
../../shared/words/emit.s:1      .text:0000000000000d88 $d
../../shared/words/emit.s:1      .text:0000000000000d8c PFA_EMIT
../../shared/words/emit.s:1      *ABS*:0000000020000218 DEFER_RAM_EMIT
../../shared/words/emit.s:3      .text:0000000000000d9c XT_EMIT_PAUSE
../../shared/words/emit.s:3      .text:0000000000000da0 PFA_EMIT_PAUSE
     ./words/usart.s:140    .text:0000000000003d10 XT_SERIAL_EMITQ
     ./words/usart.s:125    .text:0000000000003cd4 XT_SERIAL_EMIT
../../shared/words/emitq.s:1      .text:0000000000000db8 VE_EMITQ
../../shared/words/emitq.s:1      .text:0000000000000db8 $d
../../shared/words/emitq.s:1      .text:0000000000000dc6 $t
ARM GAS  lp-stellaris.asm 			page 164


../../shared/words/emitq.s:1      .text:0000000000000dc8 XT_EMITQ
../../shared/words/emitq.s:1      .text:0000000000000dc8 $d
../../shared/words/emitq.s:1      .text:0000000000000dcc PFA_EMITQ
../../shared/words/emitq.s:1      *ABS*:000000002000021c DEFER_RAM_EMITQ
../../shared/words/pause.s:1      .text:0000000000000ddc VE_PAUSE
../../shared/words/pause.s:1      .text:0000000000000ddc $d
../../shared/words/pause.s:1      .text:0000000000000dea $t
../../shared/words/pause.s:1      .text:0000000000000dec $d
../../shared/words/pause.s:1      .text:0000000000000df0 PFA_PAUSE
../../shared/words/pause.s:1      *ABS*:0000000020000220 DEFER_RAM_PAUSE
../../arm/words/nop.s:1      .text:0000000000000e0c XT_NOOP
../../arm/words/nop.s:1      .text:0000000000000e00 VE_NOOP
../../arm/words/nop.s:1      .text:0000000000000e00 $d
../../arm/words/nop.s:1      .text:0000000000000e0c $d
../../arm/words/nop.s:1      .text:0000000000000e10 PFA_NOOP
../../arm/words/nop.s:2      .text:0000000000000e10 $t
../../arm/words/nop.s:2      .text:0000000000000e12 $d
../../arm/words/nop.s:2      .text:0000000000000e14 $d
../../shared/words/bounds.s:1      .text:0000000000000e20 VE_BOUNDS
../../shared/words/bounds.s:1      .text:0000000000000e20 $d
../../shared/words/bounds.s:1      .text:0000000000000e30 XT_BOUNDS
../../shared/words/bounds.s:1      .text:0000000000000e30 $d
../../shared/words/bounds.s:1      .text:0000000000000e34 PFA_BOUNDS
../../arm/words/do-do.s:1      .text:0000000000000e44 XT_DODO
../../arm/words/do-do.s:1      .text:0000000000000e48 PFA_DODO
../../arm/words/do-do.s:3      .text:0000000000000e48 $t
../../arm/words/do-loop.s:1      .text:0000000000000e62 XT_DOLOOP
../../arm/words/do-loop.s:1      .text:0000000000000e62 $d
../../arm/words/do-loop.s:1      .text:0000000000000e66 PFA_DOLOOP
../../arm/words/do-loop.s:2      .text:0000000000000e66 $t
../../arm/words/do-loop.s:9      .text:0000000000000e76 PFA_DOPLUSLOOP_INTERN
../../arm/words/do-loop.s:5      .text:0000000000000e6c XT_DOPLUSLOOP
../../arm/words/do-loop.s:5      .text:0000000000000e6c $d
../../arm/words/do-loop.s:5      .text:0000000000000e70 PFA_DOPLUSLOOP
../../arm/words/do-loop.s:6      .text:0000000000000e70 $t
../../arm/words/do-loop.s:15     .text:0000000000000e82 PFA_DOPLUSLOOP_LEAVE
../../arm/words/unloop.s:1      .text:0000000000000e8c VE_UNLOOP
../../arm/words/unloop.s:1      .text:0000000000000e8c $d
../../arm/words/unloop.s:1      .text:0000000000000e9c XT_UNLOOP
../../arm/words/unloop.s:1      .text:0000000000000e9c $d
../../arm/words/unloop.s:1      .text:0000000000000ea0 PFA_UNLOOP
../../arm/words/unloop.s:2      .text:0000000000000ea0 $t
 ../../arm/words/i.s:2      .text:0000000000000ea8 VE_I
 ../../arm/words/i.s:2      .text:0000000000000ea8 $d
 ../../arm/words/i.s:2      .text:0000000000000eb2 $t
 ../../arm/words/i.s:2      .text:0000000000000eb4 XT_I
 ../../arm/words/i.s:2      .text:0000000000000eb4 $d
 ../../arm/words/i.s:2      .text:0000000000000eb8 PFA_I
 ../../arm/words/i.s:4      .text:0000000000000eb8 $t
 ../../arm/words/j.s:2      .text:0000000000000ec4 VE_J
 ../../arm/words/j.s:2      .text:0000000000000ec4 $d
 ../../arm/words/j.s:2      .text:0000000000000ece $t
 ../../arm/words/j.s:2      .text:0000000000000ed0 XT_J
 ../../arm/words/j.s:2      .text:0000000000000ed0 $d
 ../../arm/words/j.s:2      .text:0000000000000ed4 PFA_J
 ../../arm/words/j.s:4      .text:0000000000000ed4 $t
../../arm/words/aligned.s:2      .text:0000000000000ee4 VE_ALIGNED
ARM GAS  lp-stellaris.asm 			page 165


../../arm/words/aligned.s:2      .text:0000000000000ee4 $d
../../arm/words/aligned.s:2      .text:0000000000000ef4 XT_ALIGNED
../../arm/words/aligned.s:2      .text:0000000000000ef4 $d
../../arm/words/aligned.s:2      .text:0000000000000ef8 PFA_ALIGNED
../../arm/words/aligned.s:3      .text:0000000000000ef8 $t
../../shared/words/do-sliteral.s:2      .text:0000000000000f02 XT_DOSLITERAL
../../shared/words/do-sliteral.s:2      .text:0000000000000f02 $d
../../shared/words/do-sliteral.s:2      .text:0000000000000f06 PFA_DOSLITERAL
../../shared/words/count.s:2      .text:0000000000002874 XT_COUNT
../../arm/words/do-variable.s:2      .text:0000000000000f22 XT_DOVARIABLE
../../arm/words/do-variable.s:3      .text:0000000000000f26 $t
../../arm/words/do-data.s:2      .text:0000000000000f30 XT_DODATA
../../arm/words/do-data.s:2      .text:0000000000000f30 $d
../../arm/words/do-data.s:2      .text:0000000000000f34 PFA_DODATA
../../arm/words/do-data.s:3      .text:0000000000000f34 $t
../../arm/words/do-value.s:1      .text:0000000000000f3c XT_DOVALUE
../../arm/words/do-value.s:1      .text:0000000000000f3c $d
../../arm/words/do-value.s:1      .text:0000000000000f40 PFA_DOVALUE
../../arm/words/do-value.s:2      .text:0000000000000f40 $t
../../arm/words/do-defer.s:1      .text:0000000000000f4c XT_DODEFER
../../arm/words/do-defer.s:1      .text:0000000000000f4c $d
../../arm/words/do-defer.s:2      .text:0000000000000f50 $t
../../arm/words/do-user.s:1      .text:0000000000000f5a XT_DOUSER
../../arm/words/do-user.s:1      .text:0000000000000f5a $d
../../arm/words/do-user.s:2      .text:0000000000000f5e $t
../../arm/words/do-does.s:1      .text:0000000000000f6a XT_DODOES
../../arm/words/do-does.s:1      .text:0000000000000f6a $d
../../arm/words/do-does.s:1      .text:0000000000000f6e PFA_DODOES
../../arm/words/do-does.s:2      .text:0000000000000f6e $t
../../arm/words/up.s:2      .text:0000000000000f84 VE_UP_FETCH
../../arm/words/up.s:2      .text:0000000000000f84 $d
../../arm/words/up.s:2      .text:0000000000000f90 XT_UP_FETCH
../../arm/words/up.s:2      .text:0000000000000f90 $d
../../arm/words/up.s:2      .text:0000000000000f94 PFA_UP_FETCH
../../arm/words/up.s:3      .text:0000000000000f94 $t
../../arm/words/up.s:7      .text:0000000000000f9c VE_UP_STORE
../../arm/words/up.s:7      .text:0000000000000f9c $d
../../arm/words/up.s:7      .text:0000000000000fa8 XT_UP_STORE
../../arm/words/up.s:7      .text:0000000000000fa8 $d
../../arm/words/up.s:7      .text:0000000000000fac PFA_UP_STORE
../../arm/words/up.s:8      .text:0000000000000fac $t
../../arm/words/dobranch.s:1      .text:0000000000000fb4 $d
../../arm/words/dobranch.s:1      .text:0000000000000fb8 PFA_DOBRANCH
../../arm/words/dobranch.s:2      .text:0000000000000fb8 $t
../../arm/words/docondbranch.s:1      .text:0000000000000fbe $d
../../arm/words/docondbranch.s:1      .text:0000000000000fc2 PFA_DOCONDBRANCH
../../arm/words/docondbranch.s:2      .text:0000000000000fc2 $t
../../arm/words/doliteral.s:1      .text:0000000000000fd2 $d
../../arm/words/doliteral.s:1      .text:0000000000000fd6 PFA_DOLITERAL
../../arm/words/doliteral.s:2      .text:0000000000000fd6 $t
../../arm/words/compare.s:2      .text:0000000000000fe4 VE_COMPARE
../../arm/words/compare.s:2      .text:0000000000000fe4 $d
../../arm/words/compare.s:2      .text:0000000000000ff4 XT_COMPARE
../../arm/words/compare.s:2      .text:0000000000000ff4 $d
../../arm/words/compare.s:2      .text:0000000000000ff8 PFA_COMPARE
../../arm/words/compare.s:22     .text:0000000000001000 compare
../../arm/words/compare.s:4      .text:0000000000000ff8 $t
ARM GAS  lp-stellaris.asm 			page 166


../../shared/words/num-constants.s:2      .text:0000000000001030 VE_ZERO
../../shared/words/num-constants.s:2      .text:0000000000001030 $d
../../shared/words/num-constants.s:2      .text:000000000000103a $t
../../shared/words/num-constants.s:2      .text:000000000000103c XT_ZERO
../../shared/words/num-constants.s:2      .text:000000000000103c $d
../../shared/words/num-constants.s:2      .text:0000000000001040 PFA_ZERO
../../shared/words/num-constants.s:3      .text:0000000000001044 VE_ONE
../../shared/words/num-constants.s:3      .text:0000000000001044 $d
../../shared/words/num-constants.s:3      .text:000000000000104e $t
../../shared/words/num-constants.s:3      .text:0000000000001050 XT_ONE
../../shared/words/num-constants.s:3      .text:0000000000001050 $d
../../shared/words/num-constants.s:3      .text:0000000000001054 PFA_ONE
../../shared/words/num-constants.s:4      .text:0000000000001058 VE_TWO
../../shared/words/num-constants.s:4      .text:0000000000001058 $d
../../shared/words/num-constants.s:4      .text:0000000000001062 $t
../../shared/words/num-constants.s:4      .text:0000000000001064 XT_TWO
../../shared/words/num-constants.s:4      .text:0000000000001064 $d
../../shared/words/num-constants.s:4      .text:0000000000001068 PFA_TWO
../../shared/words/num-constants.s:5      .text:000000000000106c VE_FOUR
../../shared/words/num-constants.s:5      .text:000000000000106c $d
../../shared/words/num-constants.s:5      .text:0000000000001076 $t
../../shared/words/num-constants.s:5      .text:0000000000001078 XT_FOUR
../../shared/words/num-constants.s:5      .text:0000000000001078 $d
../../shared/words/num-constants.s:5      .text:000000000000107c PFA_FOUR
../../shared/words/num-constants.s:6      .text:0000000000001080 VE_MINUSONE
../../shared/words/num-constants.s:6      .text:0000000000001080 $d
../../shared/words/num-constants.s:6      .text:000000000000108c XT_MINUSONE
../../shared/words/num-constants.s:6      .text:000000000000108c $d
../../shared/words/num-constants.s:6      .text:0000000000001090 PFA_MINUSONE
../../shared/words/num-constants.s:7      .text:0000000000001094 VE_TRUE
../../shared/words/num-constants.s:7      .text:0000000000001094 $d
../../shared/words/num-constants.s:7      .text:00000000000010a4 XT_TRUE
../../shared/words/num-constants.s:7      .text:00000000000010a4 $d
../../shared/words/num-constants.s:7      .text:00000000000010a8 PFA_TRUE
../../shared/words/num-constants.s:8      .text:00000000000010ac VE_FALSE
../../shared/words/num-constants.s:8      .text:00000000000010ac $d
../../shared/words/num-constants.s:8      .text:00000000000010ba $t
../../shared/words/num-constants.s:8      .text:00000000000010bc XT_FALSE
../../shared/words/num-constants.s:8      .text:00000000000010bc $d
../../shared/words/num-constants.s:8      .text:00000000000010c0 PFA_FALSE
../../arm/words/n_to_r.s:1      .text:00000000000010c4 VE_N_TO_R
../../arm/words/n_to_r.s:1      .text:00000000000010c4 $d
../../arm/words/n_to_r.s:1      .text:00000000000010d0 XT_N_TO_R
../../arm/words/n_to_r.s:1      .text:00000000000010d0 $d
../../arm/words/n_to_r.s:1      .text:00000000000010d4 PFA_N_TO_R
../../arm/words/n_to_r.s:2      .text:00000000000010d4 $t
../../arm/words/n_to_r.s:4      .text:00000000000010d8 N_TO_R_LOOP
../../arm/words/n_r_from.s:1      .text:00000000000010ec VE_N_R_FROM
../../arm/words/n_r_from.s:1      .text:00000000000010ec $d
../../arm/words/n_r_from.s:1      .text:00000000000010f8 XT_N_R_FROM
../../arm/words/n_r_from.s:1      .text:00000000000010f8 $d
../../arm/words/n_r_from.s:1      .text:00000000000010fc PFA_N_R_FROM
../../arm/words/n_r_from.s:2      .text:00000000000010fc $t
../../arm/words/n_r_from.s:5      .text:0000000000001104 N_R_FROM_LOOP
../../shared/words/warm.s:2      .text:0000000000001114 VE_WARM
../../shared/words/warm.s:2      .text:0000000000001114 $d
../../shared/words/warm.s:2      .text:0000000000001124 $d
ARM GAS  lp-stellaris.asm 			page 167


../../shared/words/warm.s:2      .text:0000000000001128 PFA_WARM
../../shared/words/init-ram.s:2      .text:0000000000002750 XT_INIT_RAM
../../shared/words/turnkey.s:2      .text:0000000000002c6c XT_TURNKEY
../../shared/words/cr.s:1      .text:000000000000113c VE_CR
../../shared/words/cr.s:1      .text:000000000000113c $d
../../shared/words/cr.s:1      .text:0000000000001148 XT_CR
../../shared/words/cr.s:1      .text:0000000000001148 $d
../../shared/words/cr.s:1      .text:000000000000114c PFA_CR
../../shared/words/bl.s:2      .text:0000000000001168 VE_BL
../../shared/words/bl.s:2      .text:0000000000001168 $d
../../shared/words/bl.s:2      .text:0000000000001174 XT_BL
../../shared/words/bl.s:2      .text:0000000000001174 $d
../../shared/words/bl.s:2      .text:0000000000001178 PFA_BL
../../shared/words/space.s:2      .text:000000000000117c VE_SPACE
../../shared/words/space.s:2      .text:000000000000117c $d
../../shared/words/space.s:2      .text:000000000000118a $t
../../shared/words/space.s:2      .text:000000000000118c XT_SPACE
../../shared/words/space.s:2      .text:000000000000118c $d
../../shared/words/space.s:2      .text:0000000000001190 PFA_SPACE
../../shared/words/spaces.s:2      .text:000000000000119c VE_SPACES
../../shared/words/spaces.s:2      .text:000000000000119c $d
../../shared/words/spaces.s:2      .text:00000000000011ac XT_SPACES
../../shared/words/spaces.s:2      .text:00000000000011ac $d
../../shared/words/spaces.s:2      .text:00000000000011b0 PFA_SPACES
../../shared/words/spaces.s:5      .text:00000000000011b8 SPCS1
../../shared/words/spaces.s:8      .text:00000000000011d4 SPCS2
../../shared/words/left-bracket.s:2      .text:00000000000011dc VE_LBRACKET
../../shared/words/left-bracket.s:2      .text:00000000000011dc $d
../../shared/words/left-bracket.s:2      .text:00000000000011e6 $t
../../shared/words/left-bracket.s:2      .text:00000000000011e8 $d
../../shared/words/left-bracket.s:2      .text:00000000000011ec PFA_LBRACKET
../../shared/words/l-paren.s:2      .text:00000000000011fc VE_LPAREN
../../shared/words/l-paren.s:2      .text:00000000000011fc $d
../../shared/words/l-paren.s:2      .text:0000000000001206 $t
../../shared/words/l-paren.s:2      .text:0000000000001208 XT_LPAREN
../../shared/words/l-paren.s:2      .text:0000000000001208 $d
../../shared/words/l-paren.s:2      .text:000000000000120c PFA_LPAREN
../../shared/words/parse.s:2      .text:0000000000001afc XT_PARSE
../../shared/words/decimal.s:2      .text:0000000000001220 VE_DECIMAL
../../shared/words/decimal.s:2      .text:0000000000001220 $d
../../shared/words/decimal.s:2      .text:0000000000001230 XT_DECIMAL
../../shared/words/decimal.s:2      .text:0000000000001230 $d
../../shared/words/decimal.s:2      .text:0000000000001234 PFA_DECIMAL
../../shared/words/hex.s:2      .text:0000000000001248 VE_HEX
../../shared/words/hex.s:2      .text:0000000000001248 $d
../../shared/words/hex.s:2      .text:0000000000001254 XT_HEX
../../shared/words/hex.s:2      .text:0000000000001254 $d
../../shared/words/hex.s:2      .text:0000000000001258 PFA_HEX
../../shared/words/pad.s:1      .text:000000000000126c VE_PAD
../../shared/words/pad.s:1      .text:000000000000126c $d
../../shared/words/pad.s:1      .text:0000000000001278 XT_PAD
../../shared/words/pad.s:1      .text:0000000000001278 $d
../../shared/words/pad.s:1      .text:000000000000127c PFA_PAD
../../shared/words/here.s:2      .text:00000000000012a0 XT_HERE
../../shared/words/here.s:2      .text:0000000000001290 VE_HERE
../../shared/words/here.s:2      .text:0000000000001290 $d
../../shared/words/here.s:2      .text:00000000000012a0 $d
ARM GAS  lp-stellaris.asm 			page 168


../../shared/words/here.s:2      .text:00000000000012a4 PFA_HERE
../../shared/words/dp.s:2      .text:00000000000032fc XT_DP
../../shared/words/allot.s:2      .text:00000000000012ac VE_ALLOT
../../shared/words/allot.s:2      .text:00000000000012ac $d
../../shared/words/allot.s:2      .text:00000000000012ba $t
../../shared/words/allot.s:2      .text:00000000000012bc XT_ALLOT
../../shared/words/allot.s:2      .text:00000000000012bc $d
../../shared/words/allot.s:2      .text:00000000000012c0 PFA_ALLOT
../../shared/words/to.s:13     .text:00000000000031e4 XT_DOTO
../../shared/words/hold.s:2      .text:00000000000012d4 VE_HLD
../../shared/words/hold.s:2      .text:00000000000012d4 $d
../../shared/words/hold.s:2      .text:00000000000012e0 XT_HLD
../../shared/words/hold.s:2      .text:00000000000012e0 $d
../../shared/words/hold.s:2      .text:00000000000012e4 PFA_HLD
../../shared/words/hold.s:4      .text:00000000000012e8 VE_HOLD
../../shared/words/hold.s:4      .text:00000000000012e8 $d
../../shared/words/hold.s:4      .text:00000000000012f8 XT_HOLD
../../shared/words/hold.s:4      .text:00000000000012f8 $d
../../shared/words/hold.s:4      .text:00000000000012fc PFA_HOLD
../../shared/words/sharp.s:2      .text:0000000000001328 VE_L_SHARP
../../shared/words/sharp.s:2      .text:0000000000001328 $d
../../shared/words/sharp.s:2      .text:0000000000001334 XT_L_SHARP
../../shared/words/sharp.s:2      .text:0000000000001334 $d
../../shared/words/sharp.s:2      .text:0000000000001338 PFA_L_SHARP
../../shared/words/sharp.s:7      .text:0000000000001348 VE_SHARP
../../shared/words/sharp.s:7      .text:0000000000001348 $d
../../shared/words/sharp.s:7      .text:0000000000001352 $t
../../shared/words/sharp.s:7      .text:0000000000001354 XT_SHARP
../../shared/words/sharp.s:7      .text:0000000000001354 $d
../../shared/words/sharp.s:7      .text:0000000000001358 PFA_SHARP
../../shared/words/sharp.s:15     .text:000000000000138c PFA_SHARP1
../../shared/words/sharp.s:19     .text:00000000000013a0 VE_SHARP_S
../../shared/words/sharp.s:19     .text:00000000000013a0 $d
../../shared/words/sharp.s:19     .text:00000000000013ac XT_SHARP_S
../../shared/words/sharp.s:19     .text:00000000000013ac $d
../../shared/words/sharp.s:19     .text:00000000000013b0 PFA_SHARP_S
../../shared/words/sharp.s:24     .text:00000000000013cc VE_SHARP_G
../../shared/words/sharp.s:24     .text:00000000000013cc $d
../../shared/words/sharp.s:24     .text:00000000000013d8 XT_SHARP_G
../../shared/words/sharp.s:24     .text:00000000000013d8 $d
../../shared/words/sharp.s:24     .text:00000000000013dc PFA_SHARP_G
../../shared/words/sign.s:2      .text:00000000000013f8 VE_SIGN
../../shared/words/sign.s:2      .text:00000000000013f8 $d
../../shared/words/sign.s:2      .text:0000000000001408 XT_SIGN
../../shared/words/sign.s:2      .text:0000000000001408 $d
../../shared/words/sign.s:2      .text:000000000000140c PFA_SIGN
../../shared/words/sign.s:9      .text:0000000000001424 PFA_SIGN1
../../shared/words/dot.s:2      .text:0000000000001428 VE_DOT
../../shared/words/dot.s:2      .text:0000000000001428 $d
../../shared/words/dot.s:2      .text:0000000000001432 $t
../../shared/words/dot.s:2      .text:0000000000001434 XT_DOT
../../shared/words/dot.s:2      .text:0000000000001434 $d
../../shared/words/dot.s:2      .text:0000000000001438 PFA_DOT
../../shared/words/d-dot.s:2      .text:0000000000001498 XT_DDOT
../../shared/words/d-dot-r.s:2      .text:0000000000001444 VE_DDOTR
../../shared/words/d-dot-r.s:2      .text:0000000000001444 $d
../../shared/words/d-dot-r.s:2      .text:0000000000001450 XT_DDOTR
ARM GAS  lp-stellaris.asm 			page 169


../../shared/words/d-dot-r.s:2      .text:0000000000001450 $d
../../shared/words/d-dot-r.s:2      .text:0000000000001454 PFA_DDOTR
../../shared/words/type.s:2      .text:000000000000289c XT_TYPE
../../shared/words/d-dot.s:2      .text:000000000000148c VE_DDOT
../../shared/words/d-dot.s:2      .text:000000000000148c $d
../../shared/words/d-dot.s:2      .text:0000000000001498 $d
../../shared/words/d-dot.s:2      .text:000000000000149c PFA_DDOT
../../shared/words/u-dot.s:1      .text:00000000000014ac VE_UDOT
../../shared/words/u-dot.s:1      .text:00000000000014ac $d
../../shared/words/u-dot.s:1      .text:00000000000014b8 XT_UDOT
../../shared/words/u-dot.s:1      .text:00000000000014b8 $d
../../shared/words/u-dot.s:1      .text:00000000000014bc PFA_UDOT
../../shared/words/ud-dot.s:2      .text:00000000000014d4 XT_UDDOT
../../shared/words/ud-dot.s:2      .text:00000000000014c8 VE_UDDOT
../../shared/words/ud-dot.s:2      .text:00000000000014c8 $d
../../shared/words/ud-dot.s:2      .text:00000000000014d4 $d
../../shared/words/ud-dot.s:2      .text:00000000000014d8 PFA_UDDOT
../../shared/words/ud-dot-r.s:2      .text:00000000000014f8 XT_UDDOTR
../../shared/words/ud-dot-r.s:2      .text:00000000000014e8 VE_UDDOTR
../../shared/words/ud-dot-r.s:2      .text:00000000000014e8 $d
../../shared/words/ud-dot-r.s:2      .text:00000000000014f8 $d
../../shared/words/ud-dot-r.s:2      .text:00000000000014fc PFA_UDDOTR
../../shared/words/dot-s.s:2      .text:0000000000001524 VE_DOTS
../../shared/words/dot-s.s:2      .text:0000000000001524 $d
../../shared/words/dot-s.s:2      .text:0000000000001530 XT_DOTS
../../shared/words/dot-s.s:2      .text:0000000000001530 $d
../../shared/words/dot-s.s:2      .text:0000000000001534 PFA_DOTS
../../shared/words/qdo.s:11     .text:0000000000002710 XT_QDOCHECK
../../shared/words/dot-s.s:16     .text:000000000000156c PFA_DOTS2
../../shared/words/dot-s.s:11     .text:0000000000001558 PFA_DOTS1
../../shared/words/refill.s:2      .text:0000000000001570 VE_REFILL
../../shared/words/refill.s:2      .text:0000000000001570 $d
../../shared/words/refill.s:2      .text:0000000000001580 $d
../../shared/words/refill.s:2      .text:0000000000001584 PFA_REFILL
../../shared/words/refill.s:2      *ABS*:0000000020000228 DEFER_RAM_REFILL
../../shared/words/refill.s:4      .text:00000000000015a8 XT_REFILLTIB
../../shared/words/refill.s:4      .text:0000000000001594 VE_REFILLTIB
../../shared/words/refill.s:4      .text:0000000000001594 $d
../../shared/words/refill.s:4      .text:00000000000015a8 $d
../../shared/words/refill.s:4      .text:00000000000015ac PFA_REFILLTIB
../../shared/words/accept.s:2      .text:00000000000015e8 XT_ACCEPT
../../shared/words/to-in.s:1      .text:00000000000032e8 XT_TO_IN
../../shared/words/accept.s:2      .text:00000000000015d8 VE_ACCEPT
../../shared/words/accept.s:2      .text:00000000000015d8 $d
../../shared/words/accept.s:2      .text:00000000000015e8 $d
../../shared/words/accept.s:2      .text:00000000000015ec PFA_ACCEPT
../../shared/words/accept.s:5      .text:00000000000015f8 ACC1
../../shared/words/accept.s:40     .text:0000000000001728 XT_CRLFQ
../../shared/words/accept.s:28     .text:00000000000016d8 ACC5
../../shared/words/accept.s:14     .text:0000000000001670 ACC3
../../shared/words/accept.s:12     .text:0000000000001668 ACC6
../../shared/words/accept.s:31     .text:00000000000016f8 XT_BS
../../shared/words/accept.s:26     .text:00000000000016d0 ACC4
../../shared/words/accept.s:19     .text:000000000000168c PFA_ACCEPT6
../../shared/words/accept.s:25     .text:00000000000016cc ACC7
../../shared/words/accept.s:31     .text:00000000000016ec VE_BS
../../shared/words/accept.s:31     .text:00000000000016ec $d
ARM GAS  lp-stellaris.asm 			page 170


../../shared/words/accept.s:31     .text:00000000000016f8 $d
../../shared/words/accept.s:31     .text:00000000000016fc PFA_BS
../../shared/words/accept.s:40     .text:0000000000001718 VE_CRLFQ
../../shared/words/accept.s:40     .text:0000000000001718 $d
../../shared/words/accept.s:40     .text:0000000000001726 $t
../../shared/words/accept.s:40     .text:0000000000001728 $d
../../shared/words/accept.s:40     .text:000000000000172c PFA_CRLFQ
../../shared/words/prompt-error.s:2      .text:0000000000001754 VE_PROMPTERROR
../../shared/words/prompt-error.s:2      .text:0000000000001754 $d
../../shared/words/prompt-error.s:2      .text:0000000000001764 $d
../../shared/words/prompt-error.s:2      .text:0000000000001768 PFA_PROMPTERROR
../../shared/words/prompt-error.s:2      *ABS*:000000002000022c DEFER_RAM_PROMPTERROR
../../shared/words/prompt-error.s:4      .text:0000000000001778 XT_PROMPTERROR_DEFAULT
../../shared/words/prompt-error.s:4      .text:000000000000177c PFA_PROMPTERROR_DEFAULT
../../shared/words/prompt-error.s:6      .text:0000000000001788 $d
../../shared/words/prompt-input.s:2      .text:00000000000017bc VE_PROMPTINPUT
../../shared/words/prompt-input.s:2      .text:00000000000017bc $d
../../shared/words/prompt-input.s:2      .text:00000000000017cc $d
../../shared/words/prompt-input.s:2      .text:00000000000017d0 PFA_PROMPTINPUT
../../shared/words/prompt-input.s:2      *ABS*:0000000020000230 DEFER_RAM_PROMPTINPUT
../../shared/words/prompt-input.s:4      .text:00000000000017e0 XT_PROMPTINPUT_DEFAULT
../../shared/words/prompt-input.s:4      .text:00000000000017e4 PFA_PROMPTINPUT_DEFAULT
../../shared/words/prompt-ok.s:2      .text:00000000000017ec VE_PROMPTOK
../../shared/words/prompt-ok.s:2      .text:00000000000017ec $d
../../shared/words/prompt-ok.s:2      .text:00000000000017f8 $d
../../shared/words/prompt-ok.s:2      .text:00000000000017fc PFA_PROMPTOK
../../shared/words/prompt-ok.s:2      *ABS*:0000000020000234 DEFER_RAM_PROMPTOK
../../shared/words/prompt-ok.s:4      .text:000000000000180c XT_PROMPTOKDEFAULT
../../shared/words/prompt-ok.s:4      .text:0000000000001810 PFA_PROMPTOKDEFAULT
../../shared/words/prompt-ok.s:7      .text:0000000000001824 $d
../../shared/words/prompt-ready.s:2      .text:000000000000182c VE_PROMPTREADY
../../shared/words/prompt-ready.s:2      .text:000000000000182c $d
../../shared/words/prompt-ready.s:2      .text:000000000000183c $d
../../shared/words/prompt-ready.s:2      .text:0000000000001840 PFA_PROMPTREADY
../../shared/words/prompt-ready.s:2      *ABS*:0000000020000238 DEFER_RAM_PROMPTREADY
../../shared/words/prompt-ready.s:4      .text:0000000000001850 XT_PROMPTREADYDEFAULT
../../shared/words/prompt-ready.s:4      .text:0000000000001854 PFA_PROMPTREADYDEFAULT
../../shared/words/prompt-ready.s:8      .text:0000000000001860 $d
../../shared/words/catch.s:2      .text:0000000000001868 VE_HANDLER
../../shared/words/catch.s:2      .text:0000000000001868 $d
../../shared/words/catch.s:2      .text:0000000000001878 XT_HANDLER
../../shared/words/catch.s:2      .text:0000000000001878 $d
../../shared/words/catch.s:2      .text:000000000000187c PFA_HANDLER
../../shared/words/catch.s:4      .text:0000000000001880 VE_CATCH
../../shared/words/catch.s:4      .text:0000000000001880 $d
../../shared/words/catch.s:4      .text:000000000000188e $t
../../shared/words/catch.s:4      .text:0000000000001890 $d
../../shared/words/catch.s:4      .text:0000000000001894 PFA_CATCH
../../shared/words/throw.s:1      .text:00000000000018d4 VE_THROW
../../shared/words/throw.s:1      .text:00000000000018d4 $d
../../shared/words/throw.s:1      .text:00000000000018e2 $t
../../shared/words/throw.s:1      .text:00000000000018e4 XT_THROW
../../shared/words/throw.s:1      .text:00000000000018e4 $d
../../shared/words/throw.s:1      .text:00000000000018e8 PFA_THROW
../../shared/words/throw.s:17     .text:0000000000001924 PFA_THROW1
../../shared/words/source.s:2      .text:0000000000001928 VE_SOURCE
../../shared/words/source.s:2      .text:0000000000001928 $d
ARM GAS  lp-stellaris.asm 			page 171


../../shared/words/source.s:2      .text:0000000000001938 XT_SOURCE
../../shared/words/source.s:2      .text:0000000000001938 $d
../../shared/words/source.s:2      .text:000000000000193c PFA_SOURCE
../../shared/words/source.s:2      *ABS*:000000002000023c DEFER_RAM_SOURCE
../../shared/words/source.s:4      .text:0000000000001960 XT_SOURCETIB
../../shared/words/source.s:4      .text:000000000000194c VE_SOURCETIB
../../shared/words/source.s:4      .text:000000000000194c $d
../../shared/words/source.s:4      .text:0000000000001960 $d
../../shared/words/source.s:4      .text:0000000000001964 PFA_SOURCETIB
../../shared/words/q-stack.s:1      .text:0000000000001974 VE_QSTACK
../../shared/words/q-stack.s:1      .text:0000000000001974 $d
../../shared/words/q-stack.s:1      .text:0000000000001984 XT_QSTACK
../../shared/words/q-stack.s:1      .text:0000000000001984 $d
../../shared/words/q-stack.s:1      .text:0000000000001988 PFA_QSTACK
../../shared/words/q-stack.s:9      .text:00000000000019a4 PFA_QSTACK1
../../shared/words/cscan.s:2      .text:00000000000019a8 VE_CSCAN
../../shared/words/cscan.s:2      .text:00000000000019a8 $d
../../shared/words/cscan.s:2      .text:00000000000019b6 $t
../../shared/words/cscan.s:2      .text:00000000000019b8 XT_CSCAN
../../shared/words/cscan.s:2      .text:00000000000019b8 $d
../../shared/words/cscan.s:2      .text:00000000000019bc PFA_CSCAN
../../shared/words/cscan.s:5      .text:00000000000019c4 PFA_CSCAN1
../../shared/words/cscan.s:21     .text:0000000000001a0c PFA_CSCAN2
../../shared/words/cskip.s:2      .text:0000000000001a24 VE_CSKIP
../../shared/words/cskip.s:2      .text:0000000000001a24 $d
../../shared/words/cskip.s:2      .text:0000000000001a32 $t
../../shared/words/cskip.s:2      .text:0000000000001a34 XT_CSKIP
../../shared/words/cskip.s:2      .text:0000000000001a34 $d
../../shared/words/cskip.s:2      .text:0000000000001a38 PFA_CSKIP
../../shared/words/cskip.s:5      .text:0000000000001a3c PFA_CSKIP1
../../shared/words/cskip.s:16     .text:0000000000001a74 PFA_CSKIP2
../../shared/words/slash-string.s:2      .text:0000000000001b4c XT_SLASHSTRING
../../shared/words/parse-name.s:2      .text:0000000000001a80 VE_PARSENAME
../../shared/words/parse-name.s:2      .text:0000000000001a80 $d
../../shared/words/parse-name.s:2      .text:0000000000001a94 XT_PARSENAME
../../shared/words/parse-name.s:2      .text:0000000000001a94 $d
../../shared/words/parse-name.s:2      .text:0000000000001a98 PFA_PARSENAME
../../shared/words/parse-name.s:7      .text:0000000000001aa4 XT_SKIPSCANCHAR
../../shared/words/parse-name.s:7      .text:0000000000001aa8 PFA_SKIPSCANCHAR
../../shared/words/parse.s:2      .text:0000000000001aec VE_PARSE
../../shared/words/parse.s:2      .text:0000000000001aec $d
../../shared/words/parse.s:2      .text:0000000000001afa $t
../../shared/words/parse.s:2      .text:0000000000001afc $d
../../shared/words/parse.s:2      .text:0000000000001b00 PFA_PARSE
../../shared/words/slash-string.s:2      .text:0000000000001b3c VE_SLASHSTRING
../../shared/words/slash-string.s:2      .text:0000000000001b3c $d
../../shared/words/slash-string.s:2      .text:0000000000001b4c $d
../../shared/words/slash-string.s:2      .text:0000000000001b50 PFA_SLASHSTRING
../../shared/words/2literal.s:2      .text:0000000000001b6c VE_2LITERAL
../../shared/words/2literal.s:2      .text:0000000000001b6c $d
../../shared/words/2literal.s:2      .text:0000000000001b80 XT_2LITERAL
../../shared/words/2literal.s:2      .text:0000000000001b80 $d
../../shared/words/2literal.s:2      .text:0000000000001b84 PFA_2LITERAL
../../shared/words/literal.s:2      .text:0000000000001ba4 XT_LITERAL
../../shared/words/literal.s:2      .text:0000000000001b94 VE_LITERAL
../../shared/words/literal.s:2      .text:0000000000001b94 $d
../../shared/words/literal.s:2      .text:0000000000001ba4 $d
ARM GAS  lp-stellaris.asm 			page 172


../../shared/words/literal.s:2      .text:0000000000001ba8 PFA_LITERAL
../../shared/words/compile.s:2      .text:0000000000001bc8 XT_COMPILE
../../shared/words/comma.s:2      .text:0000000000001bf4 XT_COMMA
../../shared/words/compile.s:2      .text:0000000000001bb8 VE_COMPILE
../../shared/words/compile.s:2      .text:0000000000001bb8 $d
../../shared/words/compile.s:2      .text:0000000000001bc8 $d
../../shared/words/compile.s:2      .text:0000000000001bcc PFA_COMPILE
../../shared/words/comma.s:2      .text:0000000000001be8 VE_COMMA
../../shared/words/comma.s:2      .text:0000000000001be8 $d
../../shared/words/comma.s:2      .text:0000000000001bf2 $t
../../shared/words/comma.s:2      .text:0000000000001bf4 $d
../../shared/words/comma.s:2      .text:0000000000001bf8 PFA_COMMA
../../shared/words/comma.s:10     .text:0000000000001c10 VE_CCOMMA
../../shared/words/comma.s:10     .text:0000000000001c10 $d
../../shared/words/comma.s:10     .text:0000000000001c1c XT_CCOMMA
../../shared/words/comma.s:10     .text:0000000000001c1c $d
../../shared/words/comma.s:10     .text:0000000000001c20 PFA_CCOMMA
../../shared/words/immediate-q.s:2      .text:0000000000001c34 XT_IMMEDIATEQ
../../shared/words/immediate-q.s:2      .text:0000000000001c38 PFA_IMMEDIATEQ
../../shared/words/immediate-q.s:12     .text:0000000000001c60 IMMEDIATEQ1
../../shared/words/order.s:2      .text:0000000000001c68 VE_CFG_ORDER
../../shared/words/order.s:2      .text:0000000000001c68 $d
../../shared/words/order.s:2      .text:0000000000001c7a $t
../../shared/words/order.s:2      .text:0000000000001c7c XT_CFG_ORDER
../../shared/words/order.s:2      .text:0000000000001c7c $d
../../shared/words/order.s:2      .text:0000000000001c80 PFA_CFG_ORDER
../../shared/words/ramwordlist.s:2      .text:00000000000033ac XT_RAM_WORDLIST
 ../../arm/amforth.s:17     .text:0000000000003da0 XT_FORTH_WORDLIST
 ../../arm/amforth.s:17     .text:0000000000003d74 XT_ENVIRONMENT
../../shared/words/find-xt.s:2      .text:0000000000001c90 VE_FINDXT
../../shared/words/find-xt.s:2      .text:0000000000001c90 $d
../../shared/words/find-xt.s:2      .text:0000000000001ca0 XT_FINDXT
../../shared/words/find-xt.s:2      .text:0000000000001ca0 $d
../../shared/words/find-xt.s:2      .text:0000000000001ca4 PFA_FINDXT
../../shared/words/find-xt.s:15     .text:0000000000001ccc XT_FINDXTA
../../shared/words/map-stack.s:2      .text:0000000000002664 XT_MAPSTACK
../../shared/words/find-xt.s:12     .text:0000000000001cc8 PFA_FINDXT1
../../shared/words/find-xt.s:15     .text:0000000000001cd0 PFA_FINDXTA
../../shared/words/search-wordlist.s:2      .text:0000000000001e3c XT_SEARCH_WORDLIST
../../shared/words/find-xt.s:27     .text:0000000000001d04 PFA_FINDXTA1
../../shared/words/nfa2lfa.s:2      .text:0000000000001d08 VE_NFA2LFA
../../shared/words/nfa2lfa.s:2      .text:0000000000001d08 $d
../../shared/words/nfa2lfa.s:2      .text:0000000000001d18 XT_NFA2LFA
../../shared/words/nfa2lfa.s:2      .text:0000000000001d18 $d
../../shared/words/nfa2lfa.s:2      .text:0000000000001d1c PFA_NFA2LFA
../../shared/words/nfa2cfa.s:2      .text:0000000000001d2c VE_NFA2CFA
../../shared/words/nfa2cfa.s:2      .text:0000000000001d2c $d
../../shared/words/nfa2cfa.s:2      .text:0000000000001d3c XT_NFA2CFA
../../shared/words/nfa2cfa.s:2      .text:0000000000001d3c $d
../../shared/words/nfa2cfa.s:2      .text:0000000000001d40 PFA_NFA2CFA
../../shared/words/traverse-wordlist.s:2      .text:0000000000001d54 VE_TRAVERSEWORDLIST
../../shared/words/traverse-wordlist.s:2      .text:0000000000001d54 $d
../../shared/words/traverse-wordlist.s:2      .text:0000000000001d6e $t
../../shared/words/traverse-wordlist.s:2      .text:0000000000001d70 XT_TRAVERSEWORDLIST
../../shared/words/traverse-wordlist.s:2      .text:0000000000001d70 $d
../../shared/words/traverse-wordlist.s:2      .text:0000000000001d74 PFA_TRAVERSEWORDLIST
../../shared/words/traverse-wordlist.s:4      .text:0000000000001d74 PFA_TRAVERSEWORDLIST1
ARM GAS  lp-stellaris.asm 			page 173


../../shared/words/traverse-wordlist.s:17     .text:0000000000001db0 PFA_TRAVERSEWORDLIST2
../../shared/words/show-wordlist.s:2      .text:0000000000001db8 VE_SHOWWORDLIST
../../shared/words/show-wordlist.s:2      .text:0000000000001db8 $d
../../shared/words/show-wordlist.s:2      .text:0000000000001dce $t
../../shared/words/show-wordlist.s:2      .text:0000000000001dd0 XT_SHOWWORDLIST
../../shared/words/show-wordlist.s:2      .text:0000000000001dd0 $d
../../shared/words/show-wordlist.s:2      .text:0000000000001dd4 PFA_SHOWWORDLIST
../../shared/words/show-wordlist.s:9      .text:0000000000001de8 XT_SHOWWORD
../../shared/words/show-wordlist.s:9      .text:0000000000001dec PFA_SHOWWORD
../../shared/words/name2string.s:2      .text:0000000000001eec XT_NAME2STRING
../../shared/words/current.s:2      .text:0000000000001e00 VE_CURRENT
../../shared/words/current.s:2      .text:0000000000001e00 $d
../../shared/words/current.s:2      .text:0000000000001e10 XT_CURRENT
../../shared/words/current.s:2      .text:0000000000001e10 $d
../../shared/words/current.s:2      .text:0000000000001e14 PFA_CURRENT
../../shared/words/current.s:2      *ABS*:0000000020000240 RAM_CURRENT
../../shared/words/search-wordlist.s:2      .text:0000000000001e24 VE_SEARCH_WORDLIST
../../shared/words/search-wordlist.s:2      .text:0000000000001e24 $d
../../shared/words/search-wordlist.s:2      .text:0000000000001e3c $d
../../shared/words/search-wordlist.s:2      .text:0000000000001e40 PFA_SEARCH_WORDLIST
../../shared/words/search-wordlist.s:25     .text:0000000000001e90 XT_ISWORD
../../shared/words/search-wordlist.s:17     .text:0000000000001e78 PFA_SEARCH_WORDLIST1
../../shared/words/name2flags.s:1      .text:0000000000001f1c XT_NAME2FLAGS
../../shared/words/search-wordlist.s:25     .text:0000000000001e94 PFA_ISWORD
../../shared/words/search-wordlist.s:38     .text:0000000000001ec8 PFA_ISWORD3
../../shared/words/name2string.s:2      .text:0000000000001ed8 VE_NAME2STRING
../../shared/words/name2string.s:2      .text:0000000000001ed8 $d
../../shared/words/name2string.s:2      .text:0000000000001eec $d
../../shared/words/name2string.s:2      .text:0000000000001ef0 PFA_NAME2STRING
../../shared/words/name2flags.s:1      .text:0000000000001f08 VE_NAME2FLAGS
../../shared/words/name2flags.s:1      .text:0000000000001f08 $d
../../shared/words/name2flags.s:1      .text:0000000000001f1c $d
../../shared/words/name2flags.s:1      .text:0000000000001f20 PFA_NAME2FLAGS
../../shared/words/mplus.s:2      .text:0000000000001f24 VE_MPLUS
../../shared/words/mplus.s:2      .text:0000000000001f24 $d
../../shared/words/mplus.s:2      .text:0000000000001f30 XT_MPLUS
../../shared/words/mplus.s:2      .text:0000000000001f30 $d
../../shared/words/mplus.s:2      .text:0000000000001f34 PFA_MPLUS
../../shared/words/ud-star.s:2      .text:0000000000001f40 VE_UDSTAR
../../shared/words/ud-star.s:2      .text:0000000000001f40 $d
../../shared/words/ud-star.s:2      .text:0000000000001f4c XT_UDSTAR
../../shared/words/ud-star.s:2      .text:0000000000001f4c $d
../../shared/words/ud-star.s:2      .text:0000000000001f50 PFA_UDSTAR
../../shared/words/within.s:2      .text:0000000000001f78 VE_WITHIN
../../shared/words/within.s:2      .text:0000000000001f78 $d
../../shared/words/within.s:2      .text:0000000000001f88 XT_WITHIN
../../shared/words/within.s:2      .text:0000000000001f88 $d
../../shared/words/within.s:2      .text:0000000000001f8c PFA_WITHIN
../../shared/words/to-upper.s:2      .text:0000000000001fa8 VE_TOUPPER
../../shared/words/to-upper.s:2      .text:0000000000001fa8 $d
../../shared/words/to-upper.s:2      .text:0000000000001fb8 XT_TOUPPER
../../shared/words/to-upper.s:2      .text:0000000000001fb8 $d
../../shared/words/to-upper.s:2      .text:0000000000001fbc PFA_TOUPPER
../../shared/words/to-upper.s:13     .text:0000000000001fe8 PFA_TOUPPER0
../../shared/words/digit-q.s:2      .text:0000000000001fec VE_DIGITQ
../../shared/words/digit-q.s:2      .text:0000000000001fec $d
../../shared/words/digit-q.s:2      .text:0000000000001ffc XT_DIGITQ
ARM GAS  lp-stellaris.asm 			page 174


../../shared/words/digit-q.s:2      .text:0000000000001ffc $d
../../shared/words/digit-q.s:2      .text:0000000000002000 PFA_DIGITQ
../../shared/words/to-number.s:2      .text:0000000000002064 VE_TO_NUMBER
../../shared/words/to-number.s:2      .text:0000000000002064 $d
../../shared/words/to-number.s:2      .text:0000000000002074 XT_TO_NUMBER
../../shared/words/to-number.s:2      .text:0000000000002074 $d
../../shared/words/to-number.s:2      .text:0000000000002078 PFA_TO_NUMBER
../../shared/words/to-number.s:5      .text:0000000000002078 TONUM1
../../shared/words/to-number.s:12     .text:00000000000020d8 TONUM3
../../shared/words/to-number.s:9      .text:00000000000020a4 TONUM2
../../shared/words/number.s:1      .text:00000000000020dc VE_NUMBER
../../shared/words/number.s:1      .text:00000000000020dc $d
../../shared/words/number.s:1      .text:00000000000020ec XT_NUMBER
../../shared/words/number.s:1      .text:00000000000020ec $d
../../shared/words/number.s:1      .text:00000000000020f0 PFA_NUMBER
../../shared/words/q-sign.s:2      .text:0000000000002208 XT_QSIGN
../../shared/words/set-base.s:5      .text:000000000000227c XT_SET_BASE
../../shared/words/number.s:25     .text:0000000000002148 PFA_NUMBER0
../../shared/words/number.s:57     .text:00000000000021d8 PFA_NUMBER1
../../shared/words/number.s:46     .text:00000000000021b4 PFA_NUMBER2
../../shared/words/number.s:48     .text:00000000000021b8 PFA_NUMBER6
../../shared/words/number.s:43     .text:00000000000021a4 PFA_NUMBER3
../../shared/words/number.s:64     .text:00000000000021f4 PFA_NUMBER5
../../shared/words/number.s:62     .text:00000000000021ec PFA_NUMBER4
../../shared/words/q-sign.s:2      .text:000000000000220c PFA_QSIGN
../../shared/words/q-sign.s:14     .text:000000000000223c PFA_NUMBERSIGN_DONE
../../shared/words/set-base.s:2      .text:0000000000002244 VE_BASES
../../shared/words/set-base.s:2      .text:0000000000002244 $d
../../shared/words/set-base.s:2      .text:0000000000002252 $t
../../shared/words/set-base.s:2      .text:0000000000002254 XT_BASES
../../shared/words/set-base.s:2      .text:0000000000002254 $d
../../shared/words/set-base.s:2      .text:0000000000002258 PFA_BASES
../../shared/words/set-base.s:5      .text:0000000000002268 VE_SET_BASE
../../shared/words/set-base.s:5      .text:0000000000002268 $d
../../shared/words/set-base.s:5      .text:000000000000227c $d
../../shared/words/set-base.s:5      .text:0000000000002280 PFA_SET_BASE
../../shared/words/set-base.s:26     .text:00000000000022dc SET_BASE1
../../shared/words/set-base.s:28     .text:00000000000022e0 SET_BASE2
../../shared/words/rec-null.s:2      .text:00000000000022e4 VE_RECTYPE_NULL
../../shared/words/rec-null.s:2      .text:00000000000022e4 $d
../../shared/words/rec-null.s:2      .text:00000000000022fc XT_RECTYPE_NULL
../../shared/words/rec-null.s:2      .text:00000000000022fc $d
../../shared/words/rec-null.s:2      .text:0000000000002300 PFA_RECTYPE_NULL
../../shared/words/rec-null.s:7      .text:000000000000230c XT_FAIL
../../shared/words/rec-null.s:7      .text:0000000000002310 PFA_FAIL
../../shared/words/rec-find.s:2      .text:000000000000231c VE_REC_FIND
../../shared/words/rec-find.s:2      .text:000000000000231c $d
../../shared/words/rec-find.s:2      .text:0000000000002330 XT_REC_FIND
../../shared/words/rec-find.s:2      .text:0000000000002330 $d
../../shared/words/rec-find.s:2      .text:0000000000002334 PFA_REC_FIND
../../shared/words/rec-find.s:9      .text:0000000000002354 PFA_REC_WORD_FOUND
../../shared/words/rec-find.s:14     .text:0000000000002370 XT_RECTYPE_XT
../../shared/words/rec-find.s:14     .text:000000000000235c VE_RECTYPE_XT
../../shared/words/rec-find.s:14     .text:000000000000235c $d
../../shared/words/rec-find.s:14     .text:0000000000002370 $d
../../shared/words/rec-find.s:14     .text:0000000000002374 PFA_RECTYPE_XT
../../shared/words/rec-find.s:19     .text:0000000000002380 XT_R_WORD_INTERPRET
ARM GAS  lp-stellaris.asm 			page 175


../../shared/words/rec-find.s:24     .text:0000000000002390 XT_R_WORD_COMPILE
../../shared/words/rec-find.s:19     .text:0000000000002384 PFA_R_WORD_INTERPRET
../../shared/words/rec-find.s:24     .text:0000000000002394 PFA_R_WORD_COMPILE
../../shared/words/rec-find.s:29     .text:00000000000023a8 PFA_R_WORD_COMPILE1
../../shared/words/rec-intnum.s:2      .text:00000000000023b0 VE_RECTYPE_NUM
../../shared/words/rec-intnum.s:2      .text:00000000000023b0 $d
../../shared/words/rec-intnum.s:2      .text:00000000000023c4 XT_RECTYPE_NUM
../../shared/words/rec-intnum.s:2      .text:00000000000023c4 $d
../../shared/words/rec-intnum.s:2      .text:00000000000023c8 PFA_RECTYPE_NUM
../../shared/words/rec-intnum.s:7      .text:00000000000023d4 VE_RECTYPE_DNUM
../../shared/words/rec-intnum.s:7      .text:00000000000023d4 $d
../../shared/words/rec-intnum.s:7      .text:00000000000023ec XT_RECTYPE_DNUM
../../shared/words/rec-intnum.s:7      .text:00000000000023ec $d
../../shared/words/rec-intnum.s:7      .text:00000000000023f0 PFA_RECTYPE_DNUM
../../shared/words/rec-intnum.s:12     .text:00000000000023fc VE_REC_NUM
../../shared/words/rec-intnum.s:12     .text:00000000000023fc $d
../../shared/words/rec-intnum.s:12     .text:000000000000240c XT_REC_NUM
../../shared/words/rec-intnum.s:12     .text:000000000000240c $d
../../shared/words/rec-intnum.s:12     .text:0000000000002410 PFA_REC_NUM
../../shared/words/rec-intnum.s:23     .text:0000000000002440 PFA_REC_NONUMBER
../../shared/words/rec-intnum.s:20     .text:0000000000002438 PFA_REC_INTNUM2
../../shared/words/rec-split.s:1      .text:0000000000002448 VE_REC_SPLIT
../../shared/words/rec-split.s:1      .text:0000000000002448 $d
../../shared/words/rec-split.s:1      .text:000000000000245a $t
../../shared/words/rec-split.s:1      .text:000000000000245c XT_REC_SPLIT
../../shared/words/rec-split.s:1      .text:000000000000245c $d
../../shared/words/rec-split.s:1      .text:0000000000002460 PFA_REC_SPLIT
../../shared/words/rec-split.s:5      .text:0000000000002480 XT_RECTYPE_SPLIT
../../shared/words/rec-split.s:5      .text:0000000000002468 VE_RECTYPE_SPLIT
../../shared/words/rec-split.s:5      .text:0000000000002468 $d
../../shared/words/rec-split.s:5      .text:000000000000247e $t
../../shared/words/rec-split.s:5      .text:0000000000002480 $d
../../shared/words/rec-split.s:5      .text:0000000000002484 PFA_RECTYPE_SPLIT
../../shared/words/rec-split.s:10     .text:00000000000024a0 XT_SPLIT
../../shared/words/rec-split.s:10     .text:0000000000002490 VE_SPLIT
../../shared/words/rec-split.s:10     .text:0000000000002490 $d
../../shared/words/rec-split.s:10     .text:000000000000249e $t
../../shared/words/rec-split.s:10     .text:00000000000024a0 $d
../../shared/words/rec-split.s:10     .text:00000000000024a4 PFA_SPLIT
../../shared/words/rec-trace.s:2      .text:00000000000024b8 VE_REC_TRACE
../../shared/words/rec-trace.s:2      .text:00000000000024b8 $d
../../shared/words/rec-trace.s:2      .text:00000000000024ca $t
../../shared/words/rec-trace.s:2      .text:00000000000024cc XT_REC_TRACE
../../shared/words/rec-trace.s:2      .text:00000000000024cc $d
../../shared/words/rec-trace.s:2      .text:00000000000024d0 PFA_REC_TRACE
../../shared/words/rec-trace.s:6      .text:00000000000024e0 $d
../../shared/words/forth-recognizer.s:2      .text:0000000000002504 VE_FORTHRECOGNIZER
../../shared/words/forth-recognizer.s:2      .text:0000000000002504 $d
../../shared/words/forth-recognizer.s:2      .text:0000000000002520 XT_FORTHRECOGNIZER
../../shared/words/forth-recognizer.s:2      .text:0000000000002520 $d
../../shared/words/forth-recognizer.s:2      .text:0000000000002524 PFA_FORTHRECOGNIZER
../../shared/words/forth-recognizer.s:2      *ABS*:0000000020000244 RAM_FORTHRECOGNIZER
../../shared/words/forth-recognizer.s:4      .text:0000000000002550 PFA_CFG_RECOGNIZER
../../shared/words/forth-recognizer.s:4      .text:0000000000002534 VE_CFG_RECOGNIZER
../../shared/words/forth-recognizer.s:4      .text:0000000000002534 $d
../../shared/words/forth-recognizer.s:4      .text:000000000000254c XT_CFG_RECOGNIZER
../../shared/words/forth-recognizer.s:4      .text:000000000000254c $d
ARM GAS  lp-stellaris.asm 			page 176


../../shared/words/recognize.s:2      .text:000000000000255c VE_RECOGNIZE
../../shared/words/recognize.s:2      .text:000000000000255c $d
../../shared/words/recognize.s:2      .text:000000000000256e $t
../../shared/words/recognize.s:2      .text:0000000000002570 XT_RECOGNIZE
../../shared/words/recognize.s:2      .text:0000000000002570 $d
../../shared/words/recognize.s:2      .text:0000000000002574 PFA_RECOGNIZE
../../shared/words/recognize.s:15     .text:000000000000259c XT_RECOGNIZE_A
../../shared/words/recognize.s:12     .text:0000000000002598 PFA_RECOGNIZE1
../../shared/words/recognize.s:15     .text:00000000000025a0 PFA_RECOGNIZE_A
../../shared/words/recognize.s:31     .text:00000000000025e0 PFA_RECOGNIZE_A1
../../shared/words/interpret.s:2      .text:00000000000025f0 VE_INTERPRET
../../shared/words/interpret.s:2      .text:00000000000025f0 $d
../../shared/words/interpret.s:2      .text:0000000000002602 $t
../../shared/words/interpret.s:2      .text:0000000000002604 $d
../../shared/words/interpret.s:2      .text:0000000000002608 PFA_INTERPRET
../../shared/words/interpret.s:17     .text:0000000000002648 PFA_INTERPRET2
../../shared/words/interpret.s:12     .text:0000000000002634 PFA_INTERPRET1
../../shared/words/map-stack.s:2      .text:0000000000002650 VE_MAPSTACK
../../shared/words/map-stack.s:2      .text:0000000000002650 $d
../../shared/words/map-stack.s:2      .text:0000000000002662 $t
../../shared/words/map-stack.s:2      .text:0000000000002664 $d
../../shared/words/map-stack.s:2      .text:0000000000002668 PFA_MAPSTACK
../../shared/words/map-stack.s:28     .text:00000000000026d8 PFA_MAPSTACK3
../../shared/words/map-stack.s:11     .text:0000000000002690 PFA_MAPSTACK1
../../shared/words/map-stack.s:24     .text:00000000000026c4 PFA_MAPSTACK2
../../shared/words/qdo.s:2      .text:00000000000026e4 VE_QDO
../../shared/words/qdo.s:2      .text:00000000000026e4 $d
../../shared/words/qdo.s:2      .text:00000000000026f0 XT_QDO
../../shared/words/qdo.s:2      .text:00000000000026f0 $d
../../shared/words/qdo.s:2      .text:00000000000026f4 PFA_QDO
../../shared/words/if.s:2      .text:0000000000002bf8 XT_IF
../../shared/words/do.s:2      .text:0000000000002f60 XT_DO
../../shared/words/leave.s:15     .text:0000000000002b5c XT_TO_L
../../shared/words/qdo.s:11     .text:0000000000002714 PFA_QDOCHECK
../../shared/words/qdo.s:18     .text:0000000000002730 PFA_QDOCHECK1
../../shared/words/init-ram.s:2      .text:000000000000273c VE_INIT_RAM
../../shared/words/init-ram.s:2      .text:000000000000273c $d
../../shared/words/init-ram.s:2      .text:0000000000002750 $d
../../shared/words/init-ram.s:2      .text:0000000000002754 PFA_INIT_RAM
../../shared/words/to-body.s:2      .text:0000000000003294 XT_TO_BODY
../../shared/words/init-ram.s:9      .text:0000000000002798 XT_DOINITS
../../shared/words/init-ram.s:9      .text:000000000000279c PFA_DOINITS
../../shared/words/init-ram.s:17     .text:00000000000027f0 PFA_DOINIT_1
../../shared/words/ver.s:2      .text:00000000000027fc VE_DOT_VER
../../shared/words/ver.s:2      .text:00000000000027fc $d
../../shared/words/ver.s:2      .text:0000000000002808 XT_DOT_VER
../../shared/words/ver.s:2      .text:0000000000002808 $d
../../shared/words/ver.s:2      .text:000000000000280c PFA_DOT_VER
../../shared/words/env-forthname.s:2      .text:00000000000033d0 XT_ENV_FORTHNAME
../../shared/words/env-forthversion.s:2      .text:00000000000033f4 XT_ENV_FORTHVERSION
   ./words/env-cpu.s:2      .text:0000000000003410 XT_ENV_CPU
../../shared/words/count.s:2      .text:0000000000002864 VE_COUNT
../../shared/words/count.s:2      .text:0000000000002864 $d
../../shared/words/count.s:2      .text:0000000000002872 $t
../../shared/words/count.s:2      .text:0000000000002874 $d
../../shared/words/count.s:2      .text:0000000000002878 PFA_COUNT
../../shared/words/type.s:2      .text:000000000000288c VE_TYPE
ARM GAS  lp-stellaris.asm 			page 177


../../shared/words/type.s:2      .text:000000000000288c $d
../../shared/words/type.s:2      .text:000000000000289c $d
../../shared/words/type.s:2      .text:00000000000028a0 PFA_TYPE
../../shared/words/type.s:10     .text:00000000000028c8 PFA_TYPE_LEAVE
../../shared/words/type.s:7      .text:00000000000028b4 PFA_TYPE_LOOP
../../shared/words/type.s:13     .text:00000000000028cc VE_ITYPE
../../shared/words/type.s:13     .text:00000000000028cc $d
../../shared/words/type.s:13     .text:00000000000028da $t
../../shared/words/type.s:13     .text:00000000000028dc XT_ITYPE
../../shared/words/type.s:13     .text:00000000000028dc $d
../../shared/words/type.s:13     .text:00000000000028e0 PFA_ITYPE
../../shared/words/squote.s:2      .text:00000000000028e8 VE_SQUOTE
../../shared/words/squote.s:2      .text:00000000000028e8 $d
../../shared/words/squote.s:2      .text:00000000000028f4 XT_SQUOTE
../../shared/words/squote.s:2      .text:00000000000028f4 $d
../../shared/words/squote.s:2      .text:00000000000028f8 PFA_SQUOTE
../../shared/words/squote.s:10     .text:0000000000002918 PFA_SQUOTE1
../../shared/words/sliteral.s:2      .text:00000000000029ac XT_SLITERAL
../../shared/words/dot-quote.s:2      .text:000000000000291c VE_DOT_QUOTE
../../shared/words/dot-quote.s:2      .text:000000000000291c $d
../../shared/words/dot-quote.s:2      .text:0000000000002928 XT_DOT_QUOTE
../../shared/words/dot-quote.s:2      .text:0000000000002928 $d
../../shared/words/dot-quote.s:2      .text:000000000000292c PFA_DOT_QUOTE
../../shared/words/scomma.s:2      .text:000000000000293c VE_SCOMMA
../../shared/words/scomma.s:2      .text:000000000000293c $d
../../shared/words/scomma.s:2      .text:0000000000002948 XT_SCOMMA
../../shared/words/scomma.s:2      .text:0000000000002948 $d
../../shared/words/scomma.s:2      .text:000000000000294c PFA_SCOMMA
../../shared/words/scomma.s:15     .text:0000000000002980 PFA_SCOMMA2
../../shared/words/scomma.s:8      .text:0000000000002968 PFA_SCOMMA1
../../shared/words/sliteral.s:2      .text:0000000000002998 VE_SLITERAL
../../shared/words/sliteral.s:2      .text:0000000000002998 $d
../../shared/words/sliteral.s:2      .text:00000000000029ac $d
../../shared/words/sliteral.s:2      .text:00000000000029b0 PFA_SLITERAL
../../shared/words/words.s:2      .text:00000000000029c0 VE_WORDS
../../shared/words/words.s:2      .text:00000000000029c0 $d
../../shared/words/words.s:2      .text:00000000000029ce $t
../../shared/words/words.s:2      .text:00000000000029d0 XT_WORDS
../../shared/words/words.s:2      .text:00000000000029d0 $d
../../shared/words/words.s:2      .text:00000000000029d4 PFA_WORDS
../../shared/words/l-mark.s:2      .text:00000000000029e0 XT_LMARK
../../shared/words/l-mark.s:2      .text:00000000000029e4 PFA_LMARK
../../shared/words/l-resolve.s:2      .text:00000000000029ec XT_LRESOLVE
../../shared/words/l-resolve.s:2      .text:00000000000029f0 PFA_LRESOLVE
../../shared/words/g-mark.s:2      .text:00000000000029fc XT_GMARK
../../shared/words/g-mark.s:2      .text:0000000000002a00 PFA_GMARK
../../shared/words/g-resolve.s:2      .text:0000000000002a10 XT_GRESOLVE
../../shared/words/g-resolve.s:2      .text:0000000000002a14 PFA_GRESOLVE
../../shared/words/ahead.s:2      .text:0000000000002a28 VE_AHEAD
../../shared/words/ahead.s:2      .text:0000000000002a28 $d
../../shared/words/ahead.s:2      .text:0000000000002a36 $t
../../shared/words/ahead.s:2      .text:0000000000002a38 XT_AHEAD
../../shared/words/ahead.s:2      .text:0000000000002a38 $d
../../shared/words/ahead.s:2      .text:0000000000002a3c PFA_AHEAD
../../shared/words/begin.s:2      .text:0000000000002a4c VE_BEGIN
../../shared/words/begin.s:2      .text:0000000000002a4c $d
../../shared/words/begin.s:2      .text:0000000000002a5a $t
ARM GAS  lp-stellaris.asm 			page 178


../../shared/words/begin.s:2      .text:0000000000002a5c XT_BEGIN
../../shared/words/begin.s:2      .text:0000000000002a5c $d
../../shared/words/begin.s:2      .text:0000000000002a60 PFA_BEGIN
../../shared/words/then.s:2      .text:0000000000002a68 VE_THEN
../../shared/words/then.s:2      .text:0000000000002a68 $d
../../shared/words/then.s:2      .text:0000000000002a78 XT_THEN
../../shared/words/then.s:2      .text:0000000000002a78 $d
../../shared/words/then.s:2      .text:0000000000002a7c PFA_THEN
../../shared/words/until.s:2      .text:0000000000002a84 VE_UNTIL
../../shared/words/until.s:2      .text:0000000000002a84 $d
../../shared/words/until.s:2      .text:0000000000002a92 $t
../../shared/words/until.s:2      .text:0000000000002a94 XT_UNTIL
../../shared/words/until.s:2      .text:0000000000002a94 $d
../../shared/words/until.s:2      .text:0000000000002a98 PFA_UNTIL
../../shared/words/while.s:2      .text:0000000000002aac VE_WHILE
../../shared/words/while.s:2      .text:0000000000002aac $d
../../shared/words/while.s:2      .text:0000000000002aba $t
../../shared/words/while.s:2      .text:0000000000002abc XT_WHILE
../../shared/words/while.s:2      .text:0000000000002abc $d
../../shared/words/while.s:2      .text:0000000000002ac0 PFA_WHILE
../../shared/words/repeat.s:2      .text:0000000000002acc VE_REPEAT
../../shared/words/repeat.s:2      .text:0000000000002acc $d
../../shared/words/repeat.s:2      .text:0000000000002adc XT_REPEAT
../../shared/words/repeat.s:2      .text:0000000000002adc $d
../../shared/words/repeat.s:2      .text:0000000000002ae0 PFA_REPEAT
../../shared/words/again.s:2      .text:0000000000002c48 XT_AGAIN
../../shared/words/leave.s:2      .text:0000000000002aec VE_LP0
../../shared/words/leave.s:2      .text:0000000000002aec $d
../../shared/words/leave.s:2      .text:0000000000002af8 $d
../../shared/words/leave.s:2      .text:0000000000002afc PFA_LP0
../../shared/words/leave.s:2      *ABS*:0000000020000248 RAM_LP0
../../shared/words/leave.s:3      .text:0000000000002b0c VE_LP
../../shared/words/leave.s:3      .text:0000000000002b0c $d
../../shared/words/leave.s:3      .text:0000000000002b18 $d
../../shared/words/leave.s:3      .text:0000000000002b1c PFA_LP
../../shared/words/leave.s:5      .text:0000000000002b20 VE_L_FROM
../../shared/words/leave.s:5      .text:0000000000002b20 $d
../../shared/words/leave.s:5      .text:0000000000002b2c XT_L_FROM
../../shared/words/leave.s:5      .text:0000000000002b2c $d
../../shared/words/leave.s:5      .text:0000000000002b30 PFA_L_FROM
../../shared/words/leave.s:15     .text:0000000000002b50 VE_TO_L
../../shared/words/leave.s:15     .text:0000000000002b50 $d
../../shared/words/leave.s:15     .text:0000000000002b5c $d
../../shared/words/leave.s:15     .text:0000000000002b60 PFA_TO_L
../../shared/words/leave.s:25     .text:0000000000002b80 VE_LEAVE
../../shared/words/leave.s:25     .text:0000000000002b80 $d
../../shared/words/leave.s:25     .text:0000000000002b8e $t
../../shared/words/leave.s:25     .text:0000000000002b90 XT_LEAVE
../../shared/words/leave.s:25     .text:0000000000002b90 $d
../../shared/words/leave.s:25     .text:0000000000002b94 PFA_LEAVE
../../shared/words/immediate.s:2      .text:0000000000002ba8 VE_IMMEDIATE
../../shared/words/immediate.s:2      .text:0000000000002ba8 $d
../../shared/words/immediate.s:2      .text:0000000000002bba $t
../../shared/words/immediate.s:2      .text:0000000000002bbc XT_IMMEDIATE
../../shared/words/immediate.s:2      .text:0000000000002bbc $d
../../shared/words/immediate.s:2      .text:0000000000002bc0 PFA_IMMEDIATE
../../shared/words/get-current.s:2      .text:00000000000032b4 XT_GET_CURRENT
ARM GAS  lp-stellaris.asm 			page 179


../../shared/words/if.s:2      .text:0000000000002bec VE_IF
../../shared/words/if.s:2      .text:0000000000002bec $d
../../shared/words/if.s:2      .text:0000000000002bf8 $d
../../shared/words/if.s:2      .text:0000000000002bfc PFA_IF
../../shared/words/else.s:2      .text:0000000000002c0c VE_ELSE
../../shared/words/else.s:2      .text:0000000000002c0c $d
../../shared/words/else.s:2      .text:0000000000002c1c XT_ELSE
../../shared/words/else.s:2      .text:0000000000002c1c $d
../../shared/words/else.s:2      .text:0000000000002c20 PFA_ELSE
../../shared/words/again.s:2      .text:0000000000002c38 VE_AGAIN
../../shared/words/again.s:2      .text:0000000000002c38 $d
../../shared/words/again.s:2      .text:0000000000002c46 $t
../../shared/words/again.s:2      .text:0000000000002c48 $d
../../shared/words/again.s:2      .text:0000000000002c4c PFA_AGAIN
../../shared/words/turnkey.s:2      .text:0000000000002c5c VE_TURNKEY
../../shared/words/turnkey.s:2      .text:0000000000002c5c $d
../../shared/words/turnkey.s:2      .text:0000000000002c6c $d
../../shared/words/turnkey.s:2      .text:0000000000002c70 PFA_TURNKEY
../../shared/words/turnkey.s:2      *ABS*:0000000020000250 DEFER_RAM_TURNKEY
./words/appl-turnkey.s:2      .text:00000000000035b8 XT_APPLTURNKEY
../../shared/words/tick.s:2      .text:0000000000002c80 VE_TICK
../../shared/words/tick.s:2      .text:0000000000002c80 $d
../../shared/words/tick.s:2      .text:0000000000002c8a $t
../../shared/words/tick.s:2      .text:0000000000002c8c XT_TICK
../../shared/words/tick.s:2      .text:0000000000002c8c $d
../../shared/words/tick.s:2      .text:0000000000002c90 PFA_TICK
../../shared/words/tick.s:21     .text:0000000000002cd4 PFA_TICK1
../../shared/words/abort.s:2      .text:0000000000002cdc VE_ABORT
../../shared/words/abort.s:2      .text:0000000000002cdc $d
../../shared/words/abort.s:2      .text:0000000000002cea $t
../../shared/words/abort.s:2      .text:0000000000002cec XT_ABORT
../../shared/words/abort.s:2      .text:0000000000002cec $d
../../shared/words/abort.s:2      .text:0000000000002cf0 PFA_ABORT
../../shared/words/abort-string.s:2      .text:0000000000002cf8 VE_ABORTQUOTE
../../shared/words/abort-string.s:2      .text:0000000000002cf8 $d
../../shared/words/abort-string.s:2      .text:0000000000002d08 XT_ABORTQUOTE
../../shared/words/abort-string.s:2      .text:0000000000002d08 $d
../../shared/words/abort-string.s:2      .text:0000000000002d0c PFA_ABORTQUOTE
../../shared/words/q-abort.s:2      .text:00000000000030e4 XT_QABORT
../../shared/words/backslash.s:2      .text:0000000000002d1c VE_BACKSLASH
../../shared/words/backslash.s:2      .text:0000000000002d1c $d
../../shared/words/backslash.s:2      .text:0000000000002d26 $t
../../shared/words/backslash.s:2      .text:0000000000002d28 XT_BACKSLASH
../../shared/words/backslash.s:2      .text:0000000000002d28 $d
../../shared/words/backslash.s:2      .text:0000000000002d2c PFA_BACKSLASH
../../shared/words/bracketchar.s:2      .text:0000000000002d40 VE_BRACKETCHAR
../../shared/words/bracketchar.s:2      .text:0000000000002d40 $d
../../shared/words/bracketchar.s:2      .text:0000000000002d50 XT_BRACKETCHAR
../../shared/words/bracketchar.s:2      .text:0000000000002d50 $d
../../shared/words/bracketchar.s:2      .text:0000000000002d54 PFA_BRACKETCHAR
../../shared/words/char.s:2      .text:0000000000002dc0 XT_CHAR
../../shared/words/bracketcompile.s:2      .text:0000000000002d68 VE_BRACKETCOMPILE
../../shared/words/bracketcompile.s:2      .text:0000000000002d68 $d
../../shared/words/bracketcompile.s:2      .text:0000000000002d7a $t
../../shared/words/bracketcompile.s:2      .text:0000000000002d7c XT_BRACKETCOMPILE
../../shared/words/bracketcompile.s:2      .text:0000000000002d7c $d
../../shared/words/bracketcompile.s:2      .text:0000000000002d80 PFA_BRACKETCOMPILE
ARM GAS  lp-stellaris.asm 			page 180


../../shared/words/brackettick.s:2      .text:0000000000002d94 VE_BRACKETTICK
../../shared/words/brackettick.s:2      .text:0000000000002d94 $d
../../shared/words/brackettick.s:2      .text:0000000000002da0 XT_BRACKETTICK
../../shared/words/brackettick.s:2      .text:0000000000002da0 $d
../../shared/words/brackettick.s:2      .text:0000000000002da4 PFA_BRACKETTICK
../../shared/words/char.s:2      .text:0000000000002db0 VE_CHAR
../../shared/words/char.s:2      .text:0000000000002db0 $d
../../shared/words/char.s:2      .text:0000000000002dc0 $d
../../shared/words/char.s:2      .text:0000000000002dc4 PFA_CHAR
../../shared/words/char.s:6      .text:0000000000002de0 CHAR_1
../../shared/words/colon-noname.s:2      .text:0000000000002de8 VE_COLONNONAME
../../shared/words/colon-noname.s:2      .text:0000000000002de8 $d
../../shared/words/colon-noname.s:2      .text:0000000000002df8 XT_COLONNONAME
../../shared/words/colon-noname.s:2      .text:0000000000002df8 $d
../../shared/words/colon-noname.s:2      .text:0000000000002dfc PFA_COLONNONAME
../../shared/words/latest.s:2      .text:000000000000301c XT_LATEST
../../shared/words/right-bracket.s:2      .text:0000000000003174 XT_RBRACKET
../../shared/words/colon.s:2      .text:0000000000002e1c VE_COLON
../../shared/words/colon.s:2      .text:0000000000002e1c $d
../../shared/words/colon.s:2      .text:0000000000002e26 $t
../../shared/words/colon.s:2      .text:0000000000002e28 XT_COLON
../../shared/words/colon.s:2      .text:0000000000002e28 $d
../../shared/words/colon.s:2      .text:0000000000002e2c PFA_COLON
../../shared/words/do-create.s:2      .text:0000000000002f1c XT_DOCREATE
../../shared/words/constant.s:2      .text:0000000000002e3c VE_CONSTANT
../../shared/words/constant.s:2      .text:0000000000002e3c $d
../../shared/words/constant.s:2      .text:0000000000002e50 XT_CONSTANT
../../shared/words/constant.s:2      .text:0000000000002e50 $d
../../shared/words/constant.s:2      .text:0000000000002e54 PFA_CONSTANT
../../shared/words/reveal.s:2      .text:0000000000003138 XT_REVEAL
../../shared/words/create.s:2      .text:0000000000002e6c VE_CREATE
../../shared/words/create.s:2      .text:0000000000002e6c $d
../../shared/words/create.s:2      .text:0000000000002e7c XT_CREATE
../../shared/words/create.s:2      .text:0000000000002e7c $d
../../shared/words/create.s:2      .text:0000000000002e80 PFA_CREATE
../../shared/words/defer-fetch.s:2      .text:0000000000002e94 VE_DEFERFETCH
../../shared/words/defer-fetch.s:2      .text:0000000000002e94 $d
../../shared/words/defer-fetch.s:2      .text:0000000000002ea4 XT_DEFERFETCH
../../shared/words/defer-fetch.s:2      .text:0000000000002ea4 $d
../../shared/words/defer-fetch.s:2      .text:0000000000002ea8 PFA_DEFERFETCH
../../shared/words/defer-store.s:2      .text:0000000000002ecc VE_DEFERSTORE
../../shared/words/defer-store.s:2      .text:0000000000002ecc $d
../../shared/words/defer-store.s:2      .text:0000000000002edc XT_DEFERSTORE
../../shared/words/defer-store.s:2      .text:0000000000002edc $d
../../shared/words/defer-store.s:2      .text:0000000000002ee0 PFA_DEFERSTORE
../../shared/words/do-create.s:2      .text:0000000000002f08 VE_DOCREATE
../../shared/words/do-create.s:2      .text:0000000000002f08 $d
../../shared/words/do-create.s:2      .text:0000000000002f1c $d
../../shared/words/do-create.s:2      .text:0000000000002f20 PFA_DOCREATE
../../shared/words/wlscope.s:2      .text:0000000000003270 XT_WLSCOPE
../../shared/words/do-create.s:7      .text:0000000000002f30 XT_DOCREATE_IN
../../shared/words/do-create.s:7      .text:0000000000002f34 PFA_DOCREATE_IN
../../shared/words/newest.s:2      .text:0000000000003058 XT_NEWEST
../../shared/words/header.s:2      .text:0000000000002fc4 XT_HEADER
../../shared/words/do.s:2      .text:0000000000002f54 VE_DO
../../shared/words/do.s:2      .text:0000000000002f54 $d
../../shared/words/do.s:2      .text:0000000000002f60 $d
ARM GAS  lp-stellaris.asm 			page 181


../../shared/words/do.s:2      .text:0000000000002f64 PFA_DO
../../shared/words/endloop.s:2      .text:0000000000002f7c VE_ENDLOOP
../../shared/words/endloop.s:2      .text:0000000000002f7c $d
../../shared/words/endloop.s:2      .text:0000000000002f8c XT_ENDLOOP
../../shared/words/endloop.s:2      .text:0000000000002f8c $d
../../shared/words/endloop.s:2      .text:0000000000002f90 PFA_ENDLOOP
../../shared/words/endloop.s:5      .text:0000000000002f94 ENDLOOP1
../../shared/words/endloop.s:8      .text:0000000000002fb0 ENDLOOP2
../../shared/words/header.s:2      .text:0000000000002fb4 VE_HEADER
../../shared/words/header.s:2      .text:0000000000002fb4 $d
../../shared/words/header.s:2      .text:0000000000002fc4 $d
../../shared/words/header.s:2      .text:0000000000002fc8 PFA_HEADER
../../shared/words/greater-zero.s:2      .text:00000000000032cc XT_GREATERZERO
../../shared/words/header.s:16     .text:0000000000003000 PFA_HEADER1
../../shared/words/latest.s:2      .text:000000000000300c VE_LATEST
../../shared/words/latest.s:2      .text:000000000000300c $d
../../shared/words/latest.s:2      .text:000000000000301c $d
../../shared/words/latest.s:2      .text:0000000000003020 PFA_LATEST
../../shared/words/loop.s:2      .text:0000000000003024 VE_LOOP
../../shared/words/loop.s:2      .text:0000000000003024 $d
../../shared/words/loop.s:2      .text:0000000000003034 XT_LOOP
../../shared/words/loop.s:2      .text:0000000000003034 $d
../../shared/words/loop.s:2      .text:0000000000003038 PFA_LOOP
../../shared/words/newest.s:2      .text:0000000000003048 VE_NEWEST
../../shared/words/newest.s:2      .text:0000000000003048 $d
../../shared/words/newest.s:2      .text:0000000000003058 $d
../../shared/words/newest.s:2      .text:000000000000305c PFA_NEWEST
../../shared/words/plusloop.s:2      .text:0000000000003060 VE_PLUSLOOP
../../shared/words/plusloop.s:2      .text:0000000000003060 $d
../../shared/words/plusloop.s:2      .text:000000000000306e $t
../../shared/words/plusloop.s:2      .text:0000000000003070 XT_PLUSLOOP
../../shared/words/plusloop.s:2      .text:0000000000003070 $d
../../shared/words/plusloop.s:2      .text:0000000000003074 PFA_PLUSLOOP
../../shared/words/postpone.s:2      .text:0000000000003084 VE_POSTPONE
../../shared/words/postpone.s:2      .text:0000000000003084 $d
../../shared/words/postpone.s:2      .text:0000000000003098 XT_POSTPONE
../../shared/words/postpone.s:2      .text:0000000000003098 $d
../../shared/words/postpone.s:2      .text:000000000000309c PFA_POSTPONE
../../shared/words/q-abort.s:2      .text:00000000000030d4 VE_QABORT
../../shared/words/q-abort.s:2      .text:00000000000030d4 $d
../../shared/words/q-abort.s:2      .text:00000000000030e4 $d
../../shared/words/q-abort.s:2      .text:00000000000030e8 PFA_QABORT
../../shared/words/q-abort.s:6      .text:00000000000030fc QABO1
../../shared/words/recurse.s:2      .text:0000000000003104 VE_RECURSE
../../shared/words/recurse.s:2      .text:0000000000003104 $d
../../shared/words/recurse.s:2      .text:0000000000003114 XT_RECURSE
../../shared/words/recurse.s:2      .text:0000000000003114 $d
../../shared/words/recurse.s:2      .text:0000000000003118 PFA_RECURSE
../../shared/words/reveal.s:2      .text:0000000000003128 VE_REVEAL
../../shared/words/reveal.s:2      .text:0000000000003128 $d
../../shared/words/reveal.s:2      .text:0000000000003138 $d
../../shared/words/reveal.s:2      .text:000000000000313c PFA_REVEAL
../../shared/words/reveal.s:6      .text:0000000000003164 REVEAL1
../../shared/words/to.s:22     .text:0000000000003204 XT_DOTO1
../../shared/words/right-bracket.s:2      .text:0000000000003168 VE_RBRACKET
../../shared/words/right-bracket.s:2      .text:0000000000003168 $d
../../shared/words/right-bracket.s:2      .text:0000000000003172 $t
ARM GAS  lp-stellaris.asm 			page 182


../../shared/words/right-bracket.s:2      .text:0000000000003174 $d
../../shared/words/right-bracket.s:2      .text:0000000000003178 PFA_RBRACKET
../../shared/words/semicolon.s:2      .text:0000000000003188 VE_SEMICOLON
../../shared/words/semicolon.s:2      .text:0000000000003188 $d
../../shared/words/semicolon.s:2      .text:0000000000003192 $t
../../shared/words/semicolon.s:2      .text:0000000000003194 XT_SEMICOLON
../../shared/words/semicolon.s:2      .text:0000000000003194 $d
../../shared/words/semicolon.s:2      .text:0000000000003198 PFA_SEMICOLON
../../shared/words/to.s:2      .text:00000000000031ac VE_TO
../../shared/words/to.s:2      .text:00000000000031ac $d
../../shared/words/to.s:2      .text:00000000000031b8 XT_TO
../../shared/words/to.s:2      .text:00000000000031b8 $d
../../shared/words/to.s:2      .text:00000000000031bc PFA_TO
../../shared/words/to.s:22     .text:0000000000003208 PFA_DOTO1
../../shared/words/to.s:13     .text:00000000000031e8 PFA_DOTO
../../shared/words/variable.s:2      .text:0000000000003230 VE_VARIABLE
../../shared/words/variable.s:2      .text:0000000000003230 $d
../../shared/words/variable.s:2      .text:0000000000003244 XT_VARIABLE
../../shared/words/variable.s:2      .text:0000000000003244 $d
../../shared/words/variable.s:2      .text:0000000000003248 PFA_VARIABLE
../../shared/words/wlscope.s:2      .text:0000000000003260 VE_WLSCOPE
../../shared/words/wlscope.s:2      .text:0000000000003260 $d
../../shared/words/wlscope.s:2      .text:0000000000003270 $d
../../shared/words/wlscope.s:2      .text:0000000000003274 PFA_WLSCOPE
../../shared/words/wlscope.s:2      *ABS*:0000000020000260 DEFER_RAM_WLSCOPE
../../shared/words/to-body.s:2      .text:0000000000003284 VE_TO_BODY
../../shared/words/to-body.s:2      .text:0000000000003284 $d
../../shared/words/to-body.s:2      .text:0000000000003292 $t
../../shared/words/to-body.s:2      .text:0000000000003294 $d
../../shared/words/to-body.s:2      .text:0000000000003298 PFA_TO_BODY
../../shared/words/get-current.s:2      .text:00000000000032a0 VE_GET_CURRENT
../../shared/words/get-current.s:2      .text:00000000000032a0 $d
../../shared/words/get-current.s:2      .text:00000000000032b4 $d
../../shared/words/get-current.s:2      .text:00000000000032b8 PFA_GET_CURRENT
../../shared/words/greater-zero.s:2      .text:00000000000032c0 VE_GREATERZERO
../../shared/words/greater-zero.s:2      .text:00000000000032c0 $d
../../shared/words/greater-zero.s:2      .text:00000000000032cc $d
../../shared/words/greater-zero.s:2      .text:00000000000032d0 PFA_GREATERZERO
../../shared/words/to-in.s:1      .text:00000000000032dc VE_TO_IN
../../shared/words/to-in.s:1      .text:00000000000032dc $d
../../shared/words/to-in.s:1      .text:00000000000032e8 $d
../../shared/words/to-in.s:1      .text:00000000000032ec PFA_TO_IN
../../shared/words/dp.s:2      .text:00000000000032f0 VE_DP
../../shared/words/dp.s:2      .text:00000000000032f0 $d
../../shared/words/dp.s:2      .text:00000000000032fc $d
../../shared/words/dp.s:2      .text:0000000000003300 PFA_DP
../../shared/words/dp.s:2      *ABS*:0000000020000268 RAM_DP
                            *ABS*:000000002000027c HERESTART
../../shared/words/udefer.s:2      .text:0000000000003310 VE_UDEFER_FETCH
../../shared/words/udefer.s:2      .text:0000000000003310 $d
../../shared/words/udefer.s:2      .text:0000000000003320 XT_UDEFER_FETCH
../../shared/words/udefer.s:2      .text:0000000000003320 $d
../../shared/words/udefer.s:2      .text:0000000000003324 PFA_UDEFER_FETCH
../../shared/words/udefer.s:6      .text:0000000000003334 VE_UDEFER_STORE
../../shared/words/udefer.s:6      .text:0000000000003334 $d
../../shared/words/udefer.s:6      .text:0000000000003344 XT_UDEFER_STORE
../../shared/words/udefer.s:6      .text:0000000000003344 $d
ARM GAS  lp-stellaris.asm 			page 183


../../shared/words/udefer.s:6      .text:0000000000003348 PFA_UDEFER_STORE
../../shared/words/wordlist.s:2      .text:0000000000003358 VE_WORDLIST
../../shared/words/wordlist.s:2      .text:0000000000003358 $d
../../shared/words/wordlist.s:2      .text:000000000000336c XT_WORDLIST
../../shared/words/wordlist.s:2      .text:000000000000336c $d
../../shared/words/wordlist.s:2      .text:0000000000003370 PFA_WORDLIST
../../shared/words/ramwordlist.s:2      .text:0000000000003394 VE_RAM_WORDLIST
../../shared/words/ramwordlist.s:2      .text:0000000000003394 $d
../../shared/words/ramwordlist.s:2      .text:00000000000033ac $d
../../shared/words/ramwordlist.s:2      .text:00000000000033b0 PFA_RAM_WORDLIST
../../shared/words/ramwordlist.s:2      *ABS*:000000002000026c RAM_RAM_WORDLIST
../../shared/words/env-forthname.s:2      .text:00000000000033c0 VE_ENV_FORTHNAME
../../shared/words/env-forthname.s:2      .text:00000000000033c0 $d
../../shared/words/env-forthname.s:2      .text:00000000000033d0 $d
../../shared/words/env-forthname.s:2      .text:00000000000033d4 PFA_ENV_FORTHNAME
../../shared/words/env-forthname.s:4      .text:00000000000033e0 $d
../../shared/words/env-forthversion.s:2      .text:00000000000033e4 VE_ENV_FORTHVERSION
../../shared/words/env-forthversion.s:2      .text:00000000000033e4 $d
../../shared/words/env-forthversion.s:2      .text:00000000000033f4 $d
../../shared/words/env-forthversion.s:2      .text:00000000000033f8 PFA_ENV_FORTHVERSION
   ./words/env-cpu.s:2      .text:0000000000003404 VE_ENV_CPU
   ./words/env-cpu.s:2      .text:0000000000003404 $d
   ./words/env-cpu.s:2      .text:0000000000003410 $d
   ./words/env-cpu.s:2      .text:0000000000003414 PFA_ENV_CPU
   ./words/env-cpu.s:4      .text:0000000000003422 $t
   ./words/env-cpu.s:5      .text:0000000000003424 $d
../../shared/words/env-usersize.s:2      .text:0000000000003428 VE_ENV_SLASH_USER
../../shared/words/env-usersize.s:2      .text:0000000000003428 $d
../../shared/words/env-usersize.s:2      .text:0000000000003436 $t
../../shared/words/env-usersize.s:2      .text:0000000000003438 XT_ENV_SLASH_USER
../../shared/words/env-usersize.s:2      .text:0000000000003438 $d
../../shared/words/env-usersize.s:2      .text:000000000000343c PFA_ENV_SLASH_USER
       ./words/led.s:7      *ABS*:0000000010012000 GPIOBASE
       ./words/led.s:9      *ABS*:0000000010012000 GPIO_VALUE
       ./words/led.s:10     *ABS*:0000000010012004 GPIO_INPUT_EN
       ./words/led.s:11     *ABS*:0000000010012008 GPIO_OUTPUT_EN
       ./words/led.s:12     *ABS*:000000001001200c GPIO_PORT
       ./words/led.s:13     *ABS*:0000000010012010 GPIO_PUE
       ./words/led.s:14     *ABS*:0000000010012038 GPIO_IOF_EN
       ./words/led.s:15     *ABS*:000000001001203c GPIO_IOF_SEL
       ./words/led.s:16     *ABS*:0000000010012040 GPIO_OUT_XOR
       ./words/led.s:20     *ABS*:00000000400fe108 SYSCTL_RCGC2_R
       ./words/led.s:21     *ABS*:0000000000000020 SYSCTL_RCGC2_GPIOF
       ./words/led.s:22     *ABS*:0000000040025400 GPIO_PORTF_DIR_R
       ./words/led.s:23     *ABS*:00000000400253fc GPIO_PORTF_DATA_R
       ./words/led.s:24     *ABS*:000000004002551c GPIO_PORTF_DEN_R
       ./words/led.s:25     *ABS*:000000000000000e LED_ALL
       ./words/led.s:26     *ABS*:0000000000000008 LED_GREEN
       ./words/led.s:27     *ABS*:0000000000000004 LED_BLUE
       ./words/led.s:28     *ABS*:0000000000000002 LED_RED
       ./words/led.s:31     .text:0000000000003448 VE_LED_INIT
       ./words/led.s:31     .text:0000000000003448 $d
       ./words/led.s:31     .text:000000000000345c XT_LED_INIT
       ./words/led.s:31     .text:000000000000345c $d
       ./words/led.s:31     .text:0000000000003460 PFA_LED_INIT
       ./words/led.s:32     .text:0000000000003460 $t
       ./words/led.s:40     .text:0000000000003478 $d
ARM GAS  lp-stellaris.asm 			page 184


       ./words/led.s:42     .text:0000000000003484 VE_GREEN
       ./words/led.s:42     .text:0000000000003484 $d
       ./words/led.s:42     .text:0000000000003492 $t
       ./words/led.s:42     .text:0000000000003494 XT_GREEN
       ./words/led.s:42     .text:0000000000003494 $d
       ./words/led.s:42     .text:0000000000003498 PFA_GREEN
       ./words/led.s:43     .text:0000000000003498 $t
       ./words/led.s:46     .text:00000000000034a4 $d
       ./words/led.s:48     .text:00000000000034a8 VE_BLUE
       ./words/led.s:48     .text:00000000000034a8 $d
       ./words/led.s:48     .text:00000000000034b8 XT_BLUE
       ./words/led.s:48     .text:00000000000034b8 $d
       ./words/led.s:48     .text:00000000000034bc PFA_BLUE
       ./words/led.s:49     .text:00000000000034bc $t
       ./words/led.s:52     .text:00000000000034c8 $d
       ./words/led.s:54     .text:00000000000034cc VE_RED
       ./words/led.s:54     .text:00000000000034cc $d
       ./words/led.s:54     .text:00000000000034d8 XT_RED
       ./words/led.s:54     .text:00000000000034d8 $d
       ./words/led.s:54     .text:00000000000034dc PFA_RED
       ./words/led.s:55     .text:00000000000034dc $t
       ./words/led.s:58     .text:00000000000034e8 $d
       ./words/led.s:60     .text:00000000000034ec VE_WHITE
       ./words/led.s:60     .text:00000000000034ec $d
       ./words/led.s:60     .text:00000000000034fa $t
       ./words/led.s:60     .text:00000000000034fc XT_WHITE
       ./words/led.s:60     .text:00000000000034fc $d
       ./words/led.s:60     .text:0000000000003500 PFA_WHITE
       ./words/led.s:61     .text:0000000000003500 $t
       ./words/led.s:64     .text:000000000000350c $d
       ./words/led.s:66     .text:0000000000003510 VE_YELLOW
       ./words/led.s:66     .text:0000000000003510 $d
       ./words/led.s:66     .text:0000000000003520 XT_YELLOW
       ./words/led.s:66     .text:0000000000003520 $d
       ./words/led.s:66     .text:0000000000003524 PFA_YELLOW
       ./words/led.s:67     .text:0000000000003524 $t
       ./words/led.s:70     .text:0000000000003530 $d
       ./words/led.s:72     .text:0000000000003534 VE_CYAN
       ./words/led.s:72     .text:0000000000003534 $d
       ./words/led.s:72     .text:0000000000003544 XT_CYAN
       ./words/led.s:72     .text:0000000000003544 $d
       ./words/led.s:72     .text:0000000000003548 PFA_CYAN
       ./words/led.s:73     .text:0000000000003548 $t
       ./words/led.s:76     .text:0000000000003554 $d
       ./words/led.s:78     .text:0000000000003558 VE_MAGENTA
       ./words/led.s:78     .text:0000000000003558 $d
       ./words/led.s:78     .text:0000000000003568 XT_MAGENTA
       ./words/led.s:78     .text:0000000000003568 $d
       ./words/led.s:78     .text:000000000000356c PFA_MAGENTA
       ./words/led.s:79     .text:000000000000356c $t
       ./words/led.s:82     .text:0000000000003578 $d
       ./words/led.s:84     .text:000000000000357c VE_BLACK
       ./words/led.s:84     .text:000000000000357c $d
       ./words/led.s:84     .text:000000000000358a $t
       ./words/led.s:84     .text:000000000000358c XT_BLACK
       ./words/led.s:84     .text:000000000000358c $d
       ./words/led.s:84     .text:0000000000003590 PFA_BLACK
ARM GAS  lp-stellaris.asm 			page 185


       ./words/led.s:85     .text:0000000000003590 $t
       ./words/led.s:88     .text:000000000000359c $d
./words/appl-turnkey.s:2      .text:00000000000035a0 VE_APPLTURNKEY
./words/appl-turnkey.s:2      .text:00000000000035a0 $d
./words/appl-turnkey.s:2      .text:00000000000035b8 $d
./words/appl-turnkey.s:2      .text:00000000000035bc PFA_APPLTURNKEY
     ./words/usart.s:31     .text:0000000000003bec XT_UART_INIT
 ./words/env-board.s:2      .text:0000000000003670 XT_ENV_BOARD
./words/build-info.s:2      .text:000000000000360c XT_BUILD_INFO
./words/build-info.s:6      .text:000000000000364c XT_REV_INFO
     ./words/delay.s:6      .text:0000000000003ad0 XT_DELAY_INIT
./words/build-info.s:2      .text:00000000000035f8 VE_BUILD_INFO
./words/build-info.s:2      .text:00000000000035f8 $d
./words/build-info.s:2      .text:000000000000360c $d
./words/build-info.s:2      .text:0000000000003610 PFA_BUILD_INFO
./words/build-info.s:4      .text:0000000000003634 $d
./words/build-info.s:6      .text:0000000000003638 VE_REV_INFO
./words/build-info.s:6      .text:0000000000003638 $d
./words/build-info.s:6      .text:000000000000364c $d
./words/build-info.s:6      .text:0000000000003650 PFA_REV_INFO
./words/build-info.s:8      .text:000000000000365c $d
 ./words/env-board.s:2      .text:0000000000003660 VE_ENV_BOARD
 ./words/env-board.s:2      .text:0000000000003660 $d
 ./words/env-board.s:2      .text:000000000000366e $t
 ./words/env-board.s:2      .text:0000000000003670 $d
 ./words/env-board.s:2      .text:0000000000003674 PFA_ENV_BOARD
 ./words/env-board.s:4      .text:0000000000003682 $t
 ./words/env-board.s:5      .text:0000000000003684 $d
           ./flash.s:4      *ABS*:00000000400fd000 FLASH_FMA
           ./flash.s:5      *ABS*:00000000400fd004 FLASH_FMD
           ./flash.s:6      *ABS*:00000000400fd008 FLASH_FMC
           ./flash.s:9      .text:0000000000003688 VE_STORE_FLASH
           ./flash.s:9      .text:0000000000003688 $d
           ./flash.s:9      .text:0000000000003698 XT_STORE_FLASH
           ./flash.s:9      .text:0000000000003698 $d
           ./flash.s:9      .text:000000000000369c PFA_STORE_FLASH
           ./flash.s:11     .text:000000000000369c $t
           ./flash.s:28     .text:00000000000036be flashkomma_innen
           ./flash.s:46     .text:00000000000036da $d
           ./flash.s:46     .text:00000000000036dc $d
           ./flash.s:49     .text:00000000000036ec VE_W_STORE_FLASH
           ./flash.s:49     .text:00000000000036ec $d
           ./flash.s:49     .text:00000000000036fc XT_W_STORE_FLASH
           ./flash.s:49     .text:00000000000036fc $d
           ./flash.s:49     .text:0000000000003700 PFA_W_STORE_FLASH
           ./flash.s:52     .text:0000000000003700 $t
           ./flash.s:71     .text:0000000000003724 h_flashkomma_innen
           ./flash.s:88     .text:0000000000003736 hflash_gerade
           ./flash.s:98     .text:0000000000003740 VE_CSTORE_FLASH
           ./flash.s:98     .text:0000000000003740 $d
           ./flash.s:98     .text:0000000000003750 XT_CSTORE_FLASH
           ./flash.s:98     .text:0000000000003750 $d
           ./flash.s:98     .text:0000000000003754 PFA_CSTORE_FLASH
           ./flash.s:101    .text:0000000000003754 $t
           ./flash.s:130    .text:0000000000003780 cflash_gerade
           ./flash.s:140    .text:0000000000003790 VE_FLASHPAGEERASE
           ./flash.s:140    .text:0000000000003790 $d
ARM GAS  lp-stellaris.asm 			page 186


           ./flash.s:140    .text:00000000000037a8 XT_FLASHPAGEERASE
           ./flash.s:140    .text:00000000000037a8 $d
           ./flash.s:140    .text:00000000000037ac PFA_FLASHPAGEERASE
           ./flash.s:143    .text:00000000000037ac $t
           ./flash.s:159    .text:00000000000037ce $d
           ./flash.s:159    .text:00000000000037d0 $d
           ./flash.s:161    .text:00000000000037dc VE_INFLASHQ
           ./flash.s:161    .text:00000000000037dc $d
           ./flash.s:161    .text:00000000000037f0 XT_INFLASHQ
           ./flash.s:161    .text:00000000000037f0 $d
           ./flash.s:161    .text:00000000000037f4 PFA_INFLASHQ
           ./flash.s:165    .text:00000000000037fc VE_CACHEFLUSH
           ./flash.s:165    .text:00000000000037fc $d
           ./flash.s:165    .text:0000000000003810 XT_CACHEFLUSH
           ./flash.s:165    .text:0000000000003810 $d
           ./flash.s:165    .text:0000000000003814 PFA_CACHEFLUSH
../../shared/words/dump.s:12     .text:0000000000003818 VE_QASCII
../../shared/words/dump.s:12     .text:0000000000003818 $d
../../shared/words/dump.s:12     .text:0000000000003828 XT_QASCII
../../shared/words/dump.s:12     .text:0000000000003828 $d
../../shared/words/dump.s:12     .text:000000000000382c PFA_QASCII
../../shared/words/dump.s:17     .text:0000000000003858 PFA_QASCII1
../../shared/words/dump.s:21     .text:000000000000387c PFA_QASCII2
../../shared/words/dump.s:25     .text:0000000000003880 VE_DOT2HEX
../../shared/words/dump.s:25     .text:0000000000003880 $d
../../shared/words/dump.s:25     .text:000000000000388e $t
../../shared/words/dump.s:25     .text:0000000000003890 XT_DOT2HEX
../../shared/words/dump.s:25     .text:0000000000003890 $d
../../shared/words/dump.s:25     .text:0000000000003894 PFA_DOT2HEX
../../shared/words/dump.s:34     .text:00000000000038cc VE_DOT4HEX
../../shared/words/dump.s:34     .text:00000000000038cc $d
../../shared/words/dump.s:34     .text:00000000000038da $t
../../shared/words/dump.s:34     .text:00000000000038dc XT_DOT4HEX
../../shared/words/dump.s:34     .text:00000000000038dc $d
../../shared/words/dump.s:34     .text:00000000000038e0 PFA_DOT4HEX
../../shared/words/dump.s:41     .text:0000000000003920 VE_DOT8HEX
../../shared/words/dump.s:41     .text:0000000000003920 $d
../../shared/words/dump.s:41     .text:000000000000392e $t
../../shared/words/dump.s:41     .text:0000000000003930 XT_DOT8HEX
../../shared/words/dump.s:41     .text:0000000000003930 $d
../../shared/words/dump.s:41     .text:0000000000003934 PFA_DOT8HEX
../../shared/words/dump.s:59     .text:0000000000003984 VE_DUMP
../../shared/words/dump.s:59     .text:0000000000003984 $d
../../shared/words/dump.s:59     .text:0000000000003994 XT_DUMP
../../shared/words/dump.s:59     .text:0000000000003994 $d
../../shared/words/dump.s:59     .text:0000000000003998 PFA_DUMP
../../shared/words/dump.s:62     .text:00000000000039b8 PFA_DUMP0
../../shared/words/dump.s:65     .text:00000000000039d4 PFA_DUMP1
../../shared/words/dump.s:67     .text:00000000000039f4 PFA_DUMP2
../../shared/words/dump.s:70     .text:0000000000003a0c PFA_DUMP3
../../shared/words/dump.s:72     .text:0000000000003a2c PFA_DUMP4
../../shared/words/dump.s:75     .text:0000000000003a3c PFA_DUMP5
     ./words/delay.s:2      .text:0000000000003a54 VE_NVIC_ST_CTRL_R
     ./words/delay.s:2      .text:0000000000003a54 $d
     ./words/delay.s:2      .text:0000000000003a6c XT_NVIC_ST_CTRL_R
     ./words/delay.s:2      .text:0000000000003a6c $d
     ./words/delay.s:2      .text:0000000000003a70 PFA_NVIC_ST_CTRL_R
ARM GAS  lp-stellaris.asm 			page 187


     ./words/delay.s:3      .text:0000000000003a74 VE_NVIC_ST_RELOAD_R
     ./words/delay.s:3      .text:0000000000003a74 $d
     ./words/delay.s:3      .text:0000000000003a90 XT_NVIC_ST_RELOAD_R
     ./words/delay.s:3      .text:0000000000003a90 $d
     ./words/delay.s:3      .text:0000000000003a94 PFA_NVIC_ST_RELOAD_R
     ./words/delay.s:4      .text:0000000000003a98 VE_NVIC_ST_CURRENT_R
     ./words/delay.s:4      .text:0000000000003a98 $d
     ./words/delay.s:4      .text:0000000000003ab2 $t
     ./words/delay.s:4      .text:0000000000003ab4 XT_NVIC_ST_CURRENT_R
     ./words/delay.s:4      .text:0000000000003ab4 $d
     ./words/delay.s:4      .text:0000000000003ab8 PFA_NVIC_ST_CURRENT_R
     ./words/delay.s:6      .text:0000000000003abc VE_DELAY_INIT
     ./words/delay.s:6      .text:0000000000003abc $d
     ./words/delay.s:6      .text:0000000000003ad0 $d
     ./words/delay.s:6      .text:0000000000003ad4 PFA_DELAY_INIT
     ./words/delay.s:20     .text:0000000000003b0c VE_DELAY_TICKS
     ./words/delay.s:20     .text:0000000000003b0c $d
     ./words/delay.s:20     .text:0000000000003b20 XT_DELAY_TICKS
     ./words/delay.s:20     .text:0000000000003b20 $d
     ./words/delay.s:20     .text:0000000000003b24 PFA_DELAY_TICKS
     ./words/delay.s:24     .text:0000000000003b44 DELAY_TICKS_LOOP
     ./words/delay.s:32     .text:0000000000003b78 VE_US
     ./words/delay.s:32     .text:0000000000003b78 $d
     ./words/delay.s:32     .text:0000000000003b84 XT_US
     ./words/delay.s:32     .text:0000000000003b84 $d
     ./words/delay.s:32     .text:0000000000003b88 PFA_US
     ./words/delay.s:35     .text:0000000000003b9c VE_MS
     ./words/delay.s:35     .text:0000000000003b9c $d
     ./words/delay.s:35     .text:0000000000003ba8 XT_MS
     ./words/delay.s:35     .text:0000000000003ba8 $d
     ./words/delay.s:35     .text:0000000000003bac PFA_MS
     ./words/delay.s:40     .text:0000000000003bd4 MS_LEAVE
     ./words/delay.s:38     .text:0000000000003bc0 MS_LOOP
     ./words/usart.s:2      *ABS*:0000000010013000 UART0BASE
     ./words/usart.s:4      *ABS*:0000000010013000 UART0_TXDATA
     ./words/usart.s:5      *ABS*:0000000010013004 UART0_RXDATA
     ./words/usart.s:6      *ABS*:0000000010013008 UART0_TXCTRL
     ./words/usart.s:7      *ABS*:000000001001300c UART0_RXCTRL
     ./words/usart.s:8      *ABS*:0000000010013010 UART0_IE
     ./words/usart.s:9      *ABS*:0000000010013014 UART0_IP
     ./words/usart.s:10     *ABS*:0000000010013018 UART0_DIV
     ./words/usart.s:12     *ABS*:00000000400fe608 RCGCPIO
     ./words/usart.s:13     *ABS*:00000000400fe618 RCGCUART
     ./words/usart.s:15     *ABS*:0000000040004000 GPIOA_BASE
     ./words/usart.s:16     *ABS*:0000000040004420 GPIOAFSEL
     ./words/usart.s:17     *ABS*:000000004000451c GPIODEN
     ./words/usart.s:19     *ABS*:000000004000c000 Terminal_UART_Base
     ./words/usart.s:21     *ABS*:000000004000c000 UART0_BASE
     ./words/usart.s:22     *ABS*:000000004000c000 UARTDR
     ./words/usart.s:23     *ABS*:000000004000c018 UARTFR
     ./words/usart.s:24     *ABS*:000000004000c024 UARTIBRD
     ./words/usart.s:25     *ABS*:000000004000c028 UARTFBRD
     ./words/usart.s:26     *ABS*:000000004000c02c UARTLCRH
     ./words/usart.s:27     *ABS*:000000004000c030 UARTCTL
     ./words/usart.s:28     *ABS*:000000004000cfc8 UARTCC
     ./words/usart.s:31     .text:0000000000003bd8 VE_UART_INIT
     ./words/usart.s:31     .text:0000000000003bd8 $d
ARM GAS  lp-stellaris.asm 			page 188


     ./words/usart.s:31     .text:0000000000003bea $t
     ./words/usart.s:31     .text:0000000000003bec $d
     ./words/usart.s:31     .text:0000000000003bf0 PFA_UART_INIT
     ./words/usart.s:42     .text:0000000000003bf0 $t
     ./words/usart.s:96     .text:0000000000003c36 $d
     ./words/usart.s:96     .text:0000000000003c38 $d
     ./words/usart.s:98     .text:0000000000003c60 VE_SERIAL_KEY
     ./words/usart.s:98     .text:0000000000003c60 $d
     ./words/usart.s:98     .text:0000000000003c74 $d
     ./words/usart.s:98     .text:0000000000003c78 PFA_SERIAL_KEY
     ./words/usart.s:101    .text:0000000000003c78 $t
     ./words/usart.s:107    .text:0000000000003c86 $d
     ./words/usart.s:107    .text:0000000000003c88 $d
     ./words/usart.s:110    .text:0000000000003c8c VE_SERIAL_KEYQ
     ./words/usart.s:110    .text:0000000000003c8c $d
     ./words/usart.s:110    .text:0000000000003ca0 $d
     ./words/usart.s:110    .text:0000000000003ca4 PFA_SERIAL_KEYQ
     ./words/usart.s:112    .text:0000000000003ca4 $t
                            *ABS*:0000000000000010 RXFE
     ./words/usart.s:120    .text:0000000000003cba $d
     ./words/usart.s:120    .text:0000000000003cbc $d
     ./words/usart.s:122    *ABS*:0000000000000020 TXFF
     ./words/usart.s:125    .text:0000000000003cc0 VE_SERIAL_EMIT
     ./words/usart.s:125    .text:0000000000003cc0 $d
     ./words/usart.s:125    .text:0000000000003cd4 $d
     ./words/usart.s:125    .text:0000000000003cd8 PFA_SERIAL_EMIT
     ./words/usart.s:128    .text:0000000000003cd8 SERIAL_EMIT_WAIT
     ./words/usart.s:129    .text:0000000000003cd8 $t
     ./words/usart.s:137    .text:0000000000003cee $d
     ./words/usart.s:137    .text:0000000000003cf0 $d
     ./words/usart.s:140    .text:0000000000003cf8 VE_SERIAL_EMITQ
     ./words/usart.s:140    .text:0000000000003cf8 $d
     ./words/usart.s:140    .text:0000000000003d10 $d
     ./words/usart.s:140    .text:0000000000003d14 PFA_SERIAL_EMITQ
     ./words/usart.s:142    .text:0000000000003d14 $t
     ./words/usart.s:149    .text:0000000000003d2a SERIAL_EMITQ1
     ./words/usart.s:150    .text:0000000000003d2e $d
     ./words/usart.s:150    .text:0000000000003d30 $d
 ../../arm/amforth.s:17     .text:0000000000003d34 VE_ARM_WORDLIST
 ../../arm/amforth.s:17     .text:0000000000003d34 $d
 ../../arm/amforth.s:17     .text:0000000000003d4c XT_ARM_WORDLIST
 ../../arm/amforth.s:17     .text:0000000000003d4c $d
 ../../arm/amforth.s:17     .text:0000000000003d50 PFA_ARM_WORDLIST
 ../../arm/amforth.s:17     *ABS*:0000000020000270 RAM_ARM_WORDLIST
 ../../arm/amforth.s:17     .text:0000000000003d60 VE_ENVIRONMENT
 ../../arm/amforth.s:17     .text:0000000000003d60 $d
 ../../arm/amforth.s:17     .text:0000000000003d74 $d
 ../../arm/amforth.s:17     .text:0000000000003d78 PFA_ENVIRONMENT
 ../../arm/amforth.s:17     *ABS*:0000000020000274 RAM_ENVIRONMENT
 ../../arm/amforth.s:17     .text:0000000000003d88 VE_FORTH_WORDLIST
 ../../arm/amforth.s:17     .text:0000000000003d88 $d
 ../../arm/amforth.s:17     .text:0000000000003da0 $d
 ../../arm/amforth.s:17     .text:0000000000003da4 PFA_FORTH_WORDLIST
 ../../arm/amforth.s:17     *ABS*:0000000020000278 RAM_FORTH_WORDLIST
 ../../arm/amforth.s:17     .text:0000000000003db4 FLASH_END
 ../../arm/amforth.s:17     .text:0000000000003d8c DPSTART
../../arm/words/exit.s:2      .text:0000000000000079 $d
ARM GAS  lp-stellaris.asm 			page 189


../../arm/words/exit.s:2      .text:000000000000007a $t
../../arm/words/drop.s:2      .text:0000000000000095 $d
../../arm/words/drop.s:2      .text:0000000000000096 $t
../../arm/words/swap.s:2      .text:00000000000000ad $d
../../arm/words/swap.s:2      .text:00000000000000ae $t
../../arm/words/over.s:2      .text:00000000000000f5 $d
../../arm/words/over.s:2      .text:00000000000000f6 $t
../../arm/words/q-dup.s:2      .text:000000000000012d $d
../../arm/words/q-dup.s:2      .text:000000000000012e $t
../../arm/words/tuck.s:2      .text:000000000000014d $d
../../arm/words/tuck.s:2      .text:000000000000014e $t
../../arm/words/pick.s:2      .text:000000000000016d $d
../../arm/words/pick.s:2      .text:000000000000016e $t
../../arm/words/to-r.s:2      .text:0000000000000187 $d
../../arm/words/r-from.s:2      .text:000000000000019f $d
../../arm/words/r-fetch.s:2      .text:00000000000001b7 $d
../../arm/words/rp.s:14     .text:00000000000001ff $d
../../arm/words/sp.s:14     .text:0000000000000243 $d
../../arm/words/negate.s:2      .text:000000000000029b $d
../../arm/words/multiplydivide.s:21     .text:0000000000000319 $d
../../arm/words/multiplydivide.s:21     .text:000000000000031a $t
../../arm/words/stack.s:9      .text:0000000000000393 $d
../../arm/words/logic.s:10     .text:00000000000003e7 $d
../../arm/words/logic.s:31     .text:000000000000042f $d
../../arm/words/logic.s:36     .text:0000000000000447 $d
../../arm/words/logic.s:44     .text:0000000000000463 $d
../../arm/words/memory.s:2      .text:000000000000047d $d
../../arm/words/memory.s:2      .text:000000000000047e $t
../../arm/words/memory.s:43     .text:00000000000004c9 $d
../../arm/words/memory.s:43     .text:00000000000004ca $t
../../arm/words/memory.s:62     .text:00000000000004f7 $d
../../arm/words/memory.s:73     .text:0000000000000513 $d
../../arm/words/memory.s:80     .text:0000000000000527 $d
../../arm/words/comparisions.s:23     .text:000000000000053f $d
../../arm/words/comparisions.s:38     .text:000000000000056f $d
../../arm/words/comparisions.s:45     .text:0000000000000587 $d
../../arm/words/comparisions.s:55     .text:00000000000005a7 $d
../../arm/words/comparisions.s:87     .text:0000000000000607 $d
../../arm/words/comparisions.s:94     .text:000000000000061f $d
../../arm/words/comparisions.s:101    .text:0000000000000637 $d
../../arm/words/comparisions.s:142    .text:00000000000006a9 $d
../../arm/words/comparisions.s:142    .text:00000000000006aa $t
../../arm/words/comparisions.s:151    .text:00000000000006c9 $d
../../arm/words/comparisions.s:151    .text:00000000000006ca $t
../../arm/words/2nip.s:1      .text:0000000000000719 $d
../../arm/words/2nip.s:1      .text:000000000000071a $t
../../arm/words/2-slash.s:1      .text:00000000000007d7 $d
../../arm/words/2-star.s:1      .text:00000000000007ef $d
../../shared/words/dabs.s:1      .text:0000000000000841 $d
../../shared/words/dabs.s:1      .text:0000000000000842 $t
../../arm/words/d-plus.s:2      .text:00000000000008a7 $d
../../arm/words/d-minus.s:2      .text:00000000000008c3 $d
../../arm/words/2dup.s:1      .text:00000000000008e5 $d
../../arm/words/2dup.s:1      .text:00000000000008e6 $t
../../arm/words/double.s:14     .text:0000000000000923 $d
../../arm/words/double.s:24     .text:0000000000000943 $d
../../arm/words/double.s:148    .text:0000000000000a17 $d
ARM GAS  lp-stellaris.asm 			page 190


../../arm/words/double.s:160    .text:0000000000000a33 $d
../../arm/words/double.s:169    .text:0000000000000a4f $d
../../arm/words/double.s:182    .text:0000000000000a6b $d
../../arm/words/double.s:208    .text:0000000000000a93 $d
../../arm/words/double.s:254    .text:0000000000000af3 $d
../../shared/words/base.s:1      .text:0000000000000b31 $d
../../shared/words/base.s:1      .text:0000000000000b32 $t
../../arm/words/1-plus.s:1      .text:0000000000000b77 $d
../../arm/words/1-minus.s:1      .text:0000000000000b8f $d
../../arm/words/2-plus.s:1      .text:0000000000000ba7 $d
../../arm/words/2-minus.s:1      .text:0000000000000bbf $d
../../arm/words/tib.s:2      .text:0000000000000c21 $d
../../arm/words/tib.s:2      .text:0000000000000c22 $t
../../arm/words/cold.s:2      .text:0000000000000c55 $d
../../arm/words/cold.s:2      .text:0000000000000c56 $t
../../shared/words/quit.s:1      .text:0000000000000c75 $d
../../shared/words/quit.s:1      .text:0000000000000c76 $t
../../shared/words/keyq.s:1      .text:0000000000000d61 $d
../../shared/words/keyq.s:1      .text:0000000000000d62 $t
../../shared/words/emit.s:1      .text:0000000000000d85 $d
../../shared/words/emit.s:1      .text:0000000000000d86 $t
../../shared/words/bounds.s:1      .text:0000000000000e2f $d
../../arm/words/unloop.s:1      .text:0000000000000e9b $d
../../shared/words/num-constants.s:6      .text:000000000000108b $d
../../shared/words/num-constants.s:7      .text:00000000000010a1 $d
../../shared/words/num-constants.s:7      .text:00000000000010a2 $t
../../shared/words/warm.s:2      .text:0000000000001121 $d
../../shared/words/warm.s:2      .text:0000000000001122 $t
../../shared/words/cr.s:1      .text:0000000000001147 $d
../../shared/words/bl.s:2      .text:0000000000001173 $d
../../shared/words/spaces.s:2      .text:00000000000011ab $d
../../shared/words/here.s:2      .text:000000000000129d $d
../../shared/words/here.s:2      .text:000000000000129e $t
../../shared/words/hold.s:4      .text:00000000000012f5 $d
../../shared/words/hold.s:4      .text:00000000000012f6 $t
../../shared/words/sharp.s:2      .text:0000000000001333 $d
../../shared/words/sharp.s:19     .text:00000000000013ab $d
../../shared/words/sharp.s:24     .text:00000000000013d7 $d
../../shared/words/sign.s:2      .text:0000000000001405 $d
../../shared/words/sign.s:2      .text:0000000000001406 $t
../../shared/words/d-dot.s:2      .text:0000000000001497 $d
../../shared/words/u-dot.s:1      .text:00000000000014b7 $d
../../shared/words/ud-dot-r.s:2      .text:00000000000014f5 $d
../../shared/words/ud-dot-r.s:2      .text:00000000000014f6 $t
../../shared/words/dot-s.s:2      .text:000000000000152f $d
../../shared/words/refill.s:2      .text:000000000000157f $d
../../shared/words/refill.s:4      .text:00000000000015a7 $d
../../shared/words/accept.s:2      .text:00000000000015e7 $d
../../shared/words/accept.s:31     .text:00000000000016f7 $d
../../shared/words/prompt-error.s:2      .text:0000000000001763 $d
../../shared/words/prompt-error.s:5      .text:0000000000001785 $d
../../shared/words/prompt-error.s:5      .text:0000000000001786 $t
../../shared/words/prompt-input.s:2      .text:00000000000017cb $d
../../shared/words/prompt-ready.s:2      .text:000000000000183b $d
../../shared/words/prompt-ready.s:7      .text:000000000000185f $d
../../shared/words/source.s:2      .text:0000000000001937 $d
../../shared/words/source.s:4      .text:000000000000195f $d
ARM GAS  lp-stellaris.asm 			page 191


../../shared/words/q-stack.s:1      .text:0000000000001983 $d
../../shared/words/parse-name.s:2      .text:0000000000001a93 $d
../../shared/words/2literal.s:2      .text:0000000000001b7d $d
../../shared/words/2literal.s:2      .text:0000000000001b7e $t
../../shared/words/comma.s:10     .text:0000000000001c1b $d
../../shared/words/name2flags.s:1      .text:0000000000001f1b $d
../../shared/words/mplus.s:2      .text:0000000000001f2f $d
../../shared/words/within.s:2      .text:0000000000001f87 $d
../../shared/words/digit-q.s:2      .text:0000000000001ffb $d
../../shared/words/number.s:1      .text:00000000000020eb $d
../../shared/words/set-base.s:5      .text:0000000000002279 $d
../../shared/words/set-base.s:5      .text:000000000000227a $t
../../shared/words/rec-null.s:2      .text:00000000000022f9 $d
../../shared/words/rec-null.s:2      .text:00000000000022fa $t
../../shared/words/rec-find.s:2      .text:000000000000232d $d
../../shared/words/rec-find.s:2      .text:000000000000232e $t
../../shared/words/rec-find.s:14     .text:000000000000236f $d
../../shared/words/rec-intnum.s:7      .text:00000000000023e9 $d
../../shared/words/rec-intnum.s:7      .text:00000000000023ea $t
../../shared/words/forth-recognizer.s:2      .text:000000000000251d $d
../../shared/words/forth-recognizer.s:2      .text:000000000000251e $t
../../shared/words/forth-recognizer.s:4      .text:000000000000254b $d
../../shared/words/init-ram.s:2      .text:000000000000274d $d
../../shared/words/init-ram.s:2      .text:000000000000274e $t
../../shared/words/type.s:2      .text:0000000000002899 $d
../../shared/words/type.s:2      .text:000000000000289a $t
../../shared/words/squote.s:2      .text:00000000000028f3 $d
../../shared/words/dot-quote.s:2      .text:0000000000002927 $d
../../shared/words/scomma.s:2      .text:0000000000002947 $d
../../shared/words/sliteral.s:2      .text:00000000000029a9 $d
../../shared/words/sliteral.s:2      .text:00000000000029aa $t
../../shared/words/then.s:2      .text:0000000000002a75 $d
../../shared/words/then.s:2      .text:0000000000002a76 $t
../../shared/words/repeat.s:2      .text:0000000000002adb $d
../../shared/words/leave.s:3      .text:0000000000002b17 $d
../../shared/words/leave.s:5      .text:0000000000002b2b $d
../../shared/words/leave.s:15     .text:0000000000002b5b $d
../../shared/words/if.s:2      .text:0000000000002bf7 $d
../../shared/words/else.s:2      .text:0000000000002c19 $d
../../shared/words/else.s:2      .text:0000000000002c1a $t
../../shared/words/abort-string.s:2      .text:0000000000002d07 $d
../../shared/words/bracketchar.s:2      .text:0000000000002d4f $d
../../shared/words/char.s:2      .text:0000000000002dbd $d
../../shared/words/char.s:2      .text:0000000000002dbe $t
../../shared/words/constant.s:2      .text:0000000000002e4d $d
../../shared/words/constant.s:2      .text:0000000000002e4e $t
../../shared/words/create.s:2      .text:0000000000002e7b $d
../../shared/words/defer-fetch.s:2      .text:0000000000002ea3 $d
../../shared/words/defer-store.s:2      .text:0000000000002edb $d
../../shared/words/do-create.s:2      .text:0000000000002f19 $d
../../shared/words/do-create.s:2      .text:0000000000002f1a $t
../../shared/words/do.s:2      .text:0000000000002f5f $d
../../shared/words/header.s:2      .text:0000000000002fc3 $d
../../shared/words/latest.s:2      .text:000000000000301b $d
../../shared/words/loop.s:2      .text:0000000000003031 $d
../../shared/words/loop.s:2      .text:0000000000003032 $t
../../shared/words/newest.s:2      .text:0000000000003057 $d
ARM GAS  lp-stellaris.asm 			page 192


../../shared/words/postpone.s:2      .text:0000000000003095 $d
../../shared/words/postpone.s:2      .text:0000000000003096 $t
../../shared/words/q-abort.s:2      .text:00000000000030e3 $d
../../shared/words/reveal.s:2      .text:0000000000003137 $d
../../shared/words/to.s:2      .text:00000000000031b7 $d
../../shared/words/variable.s:2      .text:0000000000003241 $d
../../shared/words/variable.s:2      .text:0000000000003242 $t
../../shared/words/greater-zero.s:2      .text:00000000000032cb $d
../../shared/words/dp.s:2      .text:00000000000032fb $d
../../shared/words/wordlist.s:2      .text:0000000000003369 $d
../../shared/words/wordlist.s:2      .text:000000000000336a $t
../../shared/words/ramwordlist.s:2      .text:00000000000033a9 $d
../../shared/words/ramwordlist.s:2      .text:00000000000033aa $t
../../shared/words/env-forthname.s:2      .text:00000000000033cd $d
../../shared/words/env-forthname.s:2      .text:00000000000033ce $t
       ./words/led.s:31     .text:0000000000003459 $d
       ./words/led.s:31     .text:000000000000345a $t
       ./words/led.s:48     .text:00000000000034b5 $d
       ./words/led.s:48     .text:00000000000034b6 $t
       ./words/led.s:66     .text:000000000000351f $d
       ./words/led.s:72     .text:0000000000003541 $d
       ./words/led.s:72     .text:0000000000003542 $t
./words/appl-turnkey.s:2      .text:00000000000035b5 $d
./words/appl-turnkey.s:2      .text:00000000000035b6 $t
./words/build-info.s:2      .text:000000000000360b $d
./words/build-info.s:3      .text:0000000000003633 $d
./words/build-info.s:6      .text:0000000000003649 $d
./words/build-info.s:6      .text:000000000000364a $t
./words/build-info.s:7      .text:0000000000003659 $d
./words/build-info.s:7      .text:000000000000365a $t
           ./flash.s:9      .text:0000000000003697 $d
           ./flash.s:140    .text:00000000000037a7 $d
           ./flash.s:161    .text:00000000000037ed $d
           ./flash.s:161    .text:00000000000037ee $t
           ./flash.s:165    .text:000000000000380f $d
../../shared/words/dump.s:12     .text:0000000000003827 $d
../../shared/words/dump.s:59     .text:0000000000003991 $d
../../shared/words/dump.s:59     .text:0000000000003992 $t
     ./words/delay.s:2      .text:0000000000003a6b $d
     ./words/delay.s:3      .text:0000000000003a8d $d
     ./words/delay.s:3      .text:0000000000003a8e $t
     ./words/delay.s:6      .text:0000000000003acf $d
     ./words/delay.s:32     .text:0000000000003b83 $d
     ./words/delay.s:35     .text:0000000000003ba7 $d
     ./words/usart.s:98     .text:0000000000003c73 $d
     ./words/usart.s:140    .text:0000000000003d0d $d
     ./words/usart.s:140    .text:0000000000003d0e $t
 ../../arm/amforth.s:17     .text:0000000000003d49 $d
 ../../arm/amforth.s:17     .text:0000000000003d4a $t
 ../../arm/amforth.s:17     .text:0000000000003d9f $d

NO UNDEFINED SYMBOLS
